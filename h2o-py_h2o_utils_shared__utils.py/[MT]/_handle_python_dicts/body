def _handle_python_dicts(python_obj, check_header):
    header = list(python_obj.keys())
    is_valid = all([re.match(u'^[a-zA-Z_][a-zA-Z0-9_.]*$', col) for col in header])
    if (not is_valid):
        raise ValueError(u'Did not get a valid set of column names! Must match the regular expression: ^[a-zA-Z_][a-zA-Z0-9_.]*$ ')
    for k in python_obj:
        v = python_obj[k]
        if isinstance(v, (tuple, list)):
            if _is_list_of_lists(v):
                raise ValueError(u'Values in the dictionary must be flattened!')
        elif is_type(v, str, numeric):
            python_obj[k] = [v]
        else:
            raise ValueError(u'Encountered invalid dictionary value when constructing H2OFrame. Got: {0}'.format(v))
    rows = list(map(list, itertools.zip_longest(*list(python_obj.values()))))
    data_to_write = [dict(list(zip(header, row))) for row in rows]
    return (header, data_to_write)
