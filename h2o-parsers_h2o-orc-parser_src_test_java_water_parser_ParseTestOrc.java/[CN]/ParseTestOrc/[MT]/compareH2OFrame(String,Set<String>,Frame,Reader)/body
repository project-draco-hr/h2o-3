{
  StructObjectInspector insp=(StructObjectInspector)orcReader.getObjectInspector();
  List<StructField> allColInfo=(List<StructField>)insp.getAllStructFieldRefs();
  int allColNumber=allColInfo.size();
  int colNumber=0;
  for (  StructField oneField : allColInfo) {
    String colType=oneField.getFieldObjectInspector().getTypeName();
    if (colType.toLowerCase().contains("decimal"))     colType="decimal";
    if (isSupportedSchema(colType))     colNumber++;
  }
  assertEquals("Number of columns need to be the same: ",colNumber,h2oFrame.numCols());
  String[] colNames=new String[colNumber];
  String[] colTypes=new String[colNumber];
  int colIndex=0;
  for (int index=0; index < allColNumber; index++) {
    String typeName=allColInfo.get(colIndex).getFieldObjectInspector().getTypeName();
    if (typeName.toLowerCase().contains("decimal"))     typeName="decimal";
    if (isSupportedSchema(typeName)) {
      colNames[colIndex]=allColInfo.get(colIndex).getFieldName();
      colTypes[colIndex]=typeName;
      colIndex++;
    }
  }
  assertArrayEquals("Column names need to be the same: ",colNames,h2oFrame._names);
  compareFrameContents(fileName,failedFiles,h2oFrame,orcReader,colTypes,colNames,null);
  Long totalRowNumber=orcReader.getNumberOfRows();
  assertEquals("Number of rows need to be the same: ",totalRowNumber,(Long)h2oFrame.numRows());
}
