{
  Set<String> failedFiles=new TreeSet<>();
  int numOfOrcFiles=allOrcFiles.length;
  for (int fIndex=0; fIndex < numOfOrcFiles; fIndex++) {
    Random rn=new Random();
    int randNum=rn.nextInt(10);
    if (randNum > 3)     continue;
    String fileName=allOrcFiles[fIndex];
    Log.info("\nOrc parser parsing: " + fileName);
    File f=find_test_file_static(fileName);
    if (f != null && f.exists()) {
      Configuration conf=new Configuration();
      Path p=new Path(f.toString());
      try {
        Reader orcFileReader=OrcFile.createReader(p,OrcFile.readerOptions(conf));
        Frame h2oFrame=parse_test_file(fileName);
        compareH2OFrame(fileName,failedFiles,h2oFrame,orcFileReader);
        if (h2oFrame != null)         h2oFrame.delete();
        totalFilesTested++;
      }
 catch (      IOException e) {
        e.printStackTrace();
        failedFiles.add(fileName);
        numberWrong++;
      }
    }
 else {
      Log.warn("\nThe following file was not found: " + fileName);
    }
  }
  if (numberWrong > 0) {
    Log.warn("\nThere are errors in your test.");
    assertEquals("\nNumber of orc files failed to parse is: " + ", failed files = " + failedFiles.toString(),0,numberWrong);
  }
}
