{
switch (distribution) {
case AUTO:
case gaussian:
case bernoulli:
case poisson:
    return y - linkInv(f);
case gamma:
  return y * exp(-f) - 1;
case tweedie:
assert(tweediePower > 1 && tweediePower < 2);
return y * exp(f * (1 - tweediePower)) - exp(f * (2 - tweediePower));
case huber:
if (Math.abs(y - f) < 1) {
return y - f;
}
 else {
return f - 1 >= y ? -1 : 1;
}
case laplace:
return f > y ? -1 : 1;
case quantile:
return y > f ? quantileAlpha : quantileAlpha - 1;
default :
throw H2O.unimpl();
}
}
