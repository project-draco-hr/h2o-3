{
  DenseVector dv=new DenseVector(20);
  dv.set(3,0.21f);
  dv.set(7,0.13f);
  dv.set(18,0.14f);
  SparseVector sv=new SparseVector(dv);
  assert(sv.size() == 20);
  assert(sv.nnz() == 3);
  for (int i=0; i < sv.size(); ++i)   Log.info("sparse [" + i + "] = "+ sv.get(i));
  for (SparseVector.Iterator it=sv.begin(); !it.equals(sv.end()); it.next()) {
    Log.info(it.index() + " -> " + it.value());
  }
  DenseColMatrix dcm=new DenseColMatrix(3,5);
  dcm.set(2,1,3.2f);
  dcm.set(1,3,-1.2f);
  assert(dcm.get(2,1) == 3.2f);
  assert(dcm.get(1,3) == -1.2f);
  assert(dcm.get(0,0) == 0f);
  DenseRowMatrix drm=new DenseRowMatrix(3,5);
  drm.set(2,1,3.2f);
  drm.set(1,3,-1.2f);
  assert(drm.get(2,1) == 3.2f);
  assert(drm.get(1,3) == -1.2f);
  assert(drm.get(0,0) == 0f);
  SparseColMatrix scm=new SparseColMatrix(3,5);
  scm.set(2,1,3.2f);
  scm.set(1,3,-1.2f);
  assert(scm.get(2,1) == 3.2f);
  assert(scm.get(1,3) == -1.2f);
  assert(scm.get(0,0) == 0f);
  SparseRowMatrix srm=new SparseRowMatrix(3,5);
  srm.set(2,1,3.2f);
  srm.set(1,3,-1.2f);
  assert(srm.get(2,1) == 3.2f);
  assert(srm.get(1,3) == -1.2f);
  assert(srm.get(0,0) == 0f);
}
