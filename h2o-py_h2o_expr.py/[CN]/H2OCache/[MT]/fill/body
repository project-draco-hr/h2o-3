def fill(self, rows=10):
    assert (self._id is not None)
    if (self._data is not None):
        if (rows <= len(self)):
            return
    res = H2OConnection.get_json(('Frames/' + self._id), row_count=rows)['frames'][0]
    self._l = rows
    self._nrows = res['rows']
    self._ncols = res['total_column_count']
    self._names = [c['label'] for c in res['columns']]
    self._types = dict(zip(self._names, [c['type'] for c in res['columns']]))
    self._fill_data(res)
