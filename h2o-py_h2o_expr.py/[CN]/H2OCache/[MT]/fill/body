def fill(self, rows=10):
    assert (self._id is not None)
    if (self._data is not None):
        if (rows <= len(self)):
            return
    res = h2o.connection().get_json((u'Frames/' + self._id), row_count=rows)[u'frames'][0]
    self._l = rows
    self._nrows = res[u'rows']
    self._ncols = res[u'total_column_count']
    self._names = [c[u'label'] for c in res[u'columns']]
    self._types = dict(zip(self._names, [c[u'type'] for c in res[u'columns']]))
    self._fill_data(res)
