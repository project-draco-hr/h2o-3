def _fill_data(self, json):
    self._data = collections.OrderedDict()
    for c in json[u'columns']:
        c.pop(u'__meta')
        c.pop(u'domain_cardinality')
        sdata = c.pop(u'string_data')
        if sdata:
            c[u'data'] = sdata
        elif (c[u'data'] and (len(c[u'data']) > 0)):
            c[u'data'] = [(float(u'nan') if (x == u'NaN') else x) for x in c[u'data']]
        self._data[c.pop(u'label')] = c
    return self
