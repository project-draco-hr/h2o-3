def show(self, noprint=False):
    '\n    Evaluate and print.\n    :return:\n    '
    self.eager()
    if noprint:
        if isinstance(self._data, unicode):
            j = h2o.frame(self._data)
            data = j['frames'][0]['columns'][0]['data'][0:10]
            return data
        return self._data
    else:
        if isinstance(self._data, unicode):
            j = h2o.frame(self._data)
            data = [c['data'] for c in j['frames'][0]['columns'][:]]
        elif isinstance(self._data, (int, list)):
            print self._data
            print 
            return
        else:
            data = [self._data]
        t_data = map(list, zip(*data))[0:10]
        for (didx, d) in enumerate(t_data):
            t_data[didx].insert(0, didx)
        headers = ['Row ID']
        for i in range(len(t_data[0])):
            headers.append('')
        print (('Displaying first ' + str(len(t_data))) + ' row(s)')
        print tabulate.tabulate(t_data, headers=headers)
        print 
