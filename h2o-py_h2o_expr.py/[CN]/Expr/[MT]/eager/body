def eager(self):
    '\n    This forces a top-level execution, as needed, and produces a top-level result\n    locally. Frames are returned and truncated to the standard preview response\n    provided by rapids - 100 rows X 200 cols.\n    :return: A key pointing to the big data object\n    '
    if self.is_computed():
        return self._data
    global __CMD__, __TMPS__
    assert ((not __CMD__) and (not __TMPS__))
    __CMD__ = ''
    __TMPS__ = ''
    self._do_it()
    cmd = __CMD__
    tmps = __TMPS__
    __CMD__ = None
    __TMPS__ = None
    if self.is_local():
        return self._data
    if tmps:
        cmd = ((('(, ' + cmd) + tmps) + ')')
    j = h2o.rapids(cmd)
    if (j['result_type'] == 0):
        pass
    elif j['num_rows']:
        self._data = j['head']
    elif (j['result'] in [u'TRUE', u'FALSE']):
        self._data = (j['result'] == u'TRUE')
    elif (j['result_type'] in [2, 4]):
        if isinstance(j['string'], str):
            self._data = j['string']
    elif (not hasattr(j['scalar'], '__len__')):
        self._data = j['scalar']
    return self._data
