{
  _is=is;
  readAtLeast(IDENTIFIER_OLE.length);
  for (int i=0; i < IDENTIFIER_OLE.length; i++)   if (_buf[i] != IDENTIFIER_OLE[i])   throw new H2OParseException("Not a valid XLS file, lacks correct starting bits (aka magic number).");
  _numBigBlockDepotBlocks=get4(NUM_BIG_BLOCK_DEPOT_BLOCKS_POS);
  _sbdStartBlock=get4(SMALL_BLOCK_DEPOT_BLOCK_POS);
  _rootStartBlock=get4(ROOT_START_BLOCK_POS);
  _extensionBlock=get4(EXTENSION_BLOCK_POS);
  _numExtensionBlocks=get4(NUM_EXTENSION_BLOCK_POS);
  int pos=BIG_BLOCK_DEPOT_BLOCKS_POS;
  int bbdBlocks=_numExtensionBlocks == 0 ? _numBigBlockDepotBlocks : (BIG_BLOCK_SIZE - BIG_BLOCK_DEPOT_BLOCKS_POS) / 4;
  final int[] bigBlockDepotBlocks=new int[bbdBlocks];
  for (int i=0; i < bbdBlocks; i++)   bigBlockDepotBlocks[i]=get4((pos+=4) - 4);
  for (int j=0; j < _numExtensionBlocks; j++) {
    pos=(_extensionBlock + 1) * BIG_BLOCK_SIZE;
    final int blocksToRead=Math.min(_numBigBlockDepotBlocks - bbdBlocks,BIG_BLOCK_SIZE / 4 - 1);
    for (int i=bbdBlocks; i < bbdBlocks + blocksToRead; i++)     bigBlockDepotBlocks[i]=get4((pos+=4) - 4);
    bbdBlocks+=blocksToRead;
    if (bbdBlocks < _numBigBlockDepotBlocks)     _extensionBlock=get4(pos);
  }
  int index=0;
  _bigBlockChain=new int[1];
  for (int i=0; i < _numBigBlockDepotBlocks; i++) {
    pos=(bigBlockDepotBlocks[i] + 1) * BIG_BLOCK_SIZE;
    for (int j=0; j < BIG_BLOCK_SIZE / 4; j++) {
      _bigBlockChain[index++]=get4((pos+=4) - 4);
      if (index == _bigBlockChain.length)       _bigBlockChain=Arrays.copyOf(_bigBlockChain,index << 1);
    }
  }
  index=0;
  int sbdBlock=_sbdStartBlock;
  int[] smallBlockChain=new int[1];
  while (sbdBlock != -2) {
    pos=(sbdBlock + 1) * BIG_BLOCK_SIZE;
    for (int j=0; j < BIG_BLOCK_SIZE / 4; j++) {
      smallBlockChain[index++]=get4((pos+=4) - 4);
      if (index == smallBlockChain.length)       smallBlockChain=Arrays.copyOf(smallBlockChain,index << 1);
    }
    sbdBlock=_bigBlockChain[sbdBlock];
  }
  __readPropertySets(__readData(_rootStartBlock));
  Buf data=getWorkBook();
  boolean res=parseWorkbook(data,dout);
  if (!res)   throw new IOException("not an XLS file");
  return dout;
}
