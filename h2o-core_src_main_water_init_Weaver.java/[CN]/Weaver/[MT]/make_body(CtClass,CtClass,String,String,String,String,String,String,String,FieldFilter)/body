{
  StringBuilder sb=new StringBuilder();
  sb.append(header);
  boolean debug_print=false;
  boolean first=supers == null;
  if (!first)   sb.append(supers);
  CtField ctfs[]=iced.getDeclaredFields();
  for (  CtField ctf : ctfs) {
    int mods=ctf.getModifiers();
    if (javassist.Modifier.isTransient(mods) || javassist.Modifier.isStatic(mods)) {
      debug_print|=ctf.getName().equals("DEBUG_WEAVER");
      continue;
    }
    if (ff != null && !ff.filter(ctf))     continue;
    if (first)     first=false;
 else     sb.append(field_sep);
    CtClass base=ctf.getType();
    while (base.isArray())     base=base.getComponentType();
    int ftype=ftype(iced,ctf.getSignature());
    if (ftype % 20 == 9) {
      sb.append(freezables);
    }
 else     if (ftype % 20 == 10) {
      sb.append(enums);
    }
 else {
      sb.append(prims);
    }
    String z=FLDSZ1[ftype % 20];
    for (int i=0; i < ftype / 20; ++i)     z='A' + z;
    subsub(sb,"%z",z);
    subsub(sb,"%s",ctf.getName());
    subsub(sb,"%c",base.getName().replace('$','.'));
    subsub(sb,"%C",ctf.getType().getName().replace('$','.'));
  }
  sb.append(trailer);
  String body=sb.toString();
  if (debug_print)   System.err.println(icer.getName() + " " + body);
  addMethod(body,icer);
}
