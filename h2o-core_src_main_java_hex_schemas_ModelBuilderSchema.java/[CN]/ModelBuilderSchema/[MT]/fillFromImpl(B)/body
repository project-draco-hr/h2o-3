{
  this.algo=builder._parms.algoName().toLowerCase();
  this.algo_full_name=builder._parms.fullName();
  this.can_build=builder.can_build();
  this.visibility=builder.builderVisibility();
  job=(JobV3)Schema.schema(this.getSchemaVersion(),Job.class).fillFromImpl(builder._job);
  if (builder._messages != null) {
    this.messages=new ValidationMessageBase[builder._messages.length];
    int i=0;
    for (    ModelBuilder.ValidationMessage vm : builder._messages) {
      this.messages[i++]=new ValidationMessageV3().fillFromImpl(vm);
    }
    ValidationMessageBase.mapValidationMessageFieldNames(this.messages,new String[]{"_train","_valid"},new String[]{"training_frame","validation_frame"});
  }
  this.error_count=builder.error_count();
  parameters=createParametersSchema();
  parameters.fillFromImpl(builder._parms);
  parameters.model_id=builder.dest() == null ? null : new KeyV3.ModelKeyV3(builder.dest());
  return (S)this;
}
