{
  int[] dropped_cols=new int[0];
  double[][] Z=getXX(true);
  int icpt_id=Z.length - 1;
  double d=Z[0][0];
  Z[0][0]=Z[icpt_id][icpt_id];
  Z[icpt_id][icpt_id]=d;
  for (int i=1; i < Z.length - 1; ++i) {
    d=Z[i][0];
    Z[i][0]=Z[icpt_id][i];
    Z[icpt_id][i]=d;
  }
  d=xy[icpt_id];
  xy[icpt_id]=xy[0];
  xy[0]=d;
  double[][] R=new double[Z.length][];
  for (int j=0; j < Z.length; ++j) {
    double[] gamma=R[j]=new double[j + 1];
    for (int l=0; l <= j; ++l)     gamma[l]=Z[j][l] / Z[l][l];
    double zjj=Z[j][j];
    for (int k=0; k < j; ++k)     zjj+=gamma[k] * (gamma[k] * Z[k][k] - 2 * Z[j][k]);
    Z[j][j]=zjj;
    for (int i=j + 1; i < Z.length; ++i) {
      double sum=0;
      for (int k=0; k < j; ++k)       sum+=gamma[k] * Z[i][k];
      Z[i][j]-=sum;
    }
    double xy_j=xy[j];
    for (int k=0; k < j; ++k)     xy_j-=gamma[k] * xy[k];
    xy[j]=xy_j;
  }
  for (int i=0; i < R.length; ++i)   xy[i]/=Z[i][i];
  for (int k=xy.length - 1; k >= 0; --k) {
    double[] Rk=R[k];
    double xyk=xy[k] / Rk[k];
    for (int i=0; i < k; ++i)     xy[i]-=xyk * Rk[i];
    xy[k]=xyk;
  }
  System.out.println("============================================================================================");
  System.out.println(ArrayUtils.pprint(new double[][]{xy}));
  return dropped_cols;
}
