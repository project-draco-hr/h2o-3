def offset_gaussian(ip, port):
    insurance = h2o.import_frame(h2o.locate('smalldata/glm_test/insurance.csv'))
    insurance['offset'] = insurance['Holders'].log()
    gbm = h2o.gbm(x=insurance[0:3], y=insurance['Claims'], distribution='gaussian', ntrees=600, max_depth=1, min_rows=1, learn_rate=0.1, offset_column='offset', training_frame=insurance)
    predictions = gbm.predict(insurance)
    assert (abs((44.33016 - gbm._model_json['output']['init_f'])) < 1e-05), 'expected init_f to be {0}, but got {1}'.format(44.33016, gbm._model_json['output']['init_f'])
    assert (abs((1491.135 - gbm.mse())) < 0.001), 'expected mse to be {0}, but got {1}'.format(1491.135, gbm.mse())
    assert (abs((49.23438 - predictions.mean())) < 0.001), 'expected prediction mean to be {0}, but got {1}'.format(49.23438, predictions.mean())
    assert (abs(((-45.54382) - predictions.min())) < 0.1), 'expected prediction min to be {0}, but got {1}'.format((-45.54382), predictions.min())
    assert (abs((207.348 - predictions.max())) < 0.1), 'expected prediction max to be {0}, but got {1}'.format(207.348, predictions.max())
