{
  double ldiff=lambdaNew - lambdaOld;
  if (ldiff == 0 || l2pen() == 0)   return;
  double l2pen=.5 * ArrayUtils.l2norm2(_beta,true);
  if (l2pen > 0) {
    if (_parms._family == Family.multinomial) {
      int off=0;
      for (int c=0; c < _nclasses; ++c) {
        DataInfo activeData=activeDataMultinomial(c);
        for (int i=0; i < activeData.fullN(); ++i)         _ginfo._gradient[off + i]+=ldiff * _beta[off + i];
        off+=activeData.fullN() + 1;
      }
    }
 else     for (int i=0; i < _activeData.fullN(); ++i)     _ginfo._gradient[i]+=ldiff * _beta[i];
  }
  _ginfo=new GLMGradientInfo(_ginfo._likelihood,_ginfo._objVal + ldiff * l2pen,_ginfo._gradient);
}
