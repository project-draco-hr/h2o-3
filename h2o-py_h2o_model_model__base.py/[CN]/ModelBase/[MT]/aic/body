def aic(self, train=False, valid=False, xval=False):
    u'\n    Get the AIC(s).\n    If all are False (default), then return the training metric value.\n    If more than one options is set to True, then return a dictionary of metrics where the keys are "train", "valid",\n    and "xval"\n\n    :param train: If train is True, then return the AIC value for the training data.\n    :param valid: If valid is True, then return the AIC value for the validation data.\n    :param xval:  If xval is True, then return the AIC value for the validation data.\n    :return: The AIC.\n    '
    tm = ModelBase._get_metrics(self, train, valid, xval)
    m = {}
    for (k, v) in viewitems(tm):
        m[k] = (None if (v is None) else v.aic())
    return (list(m.values())[0] if (len(m) == 1) else m)
