def deepfeatures(self, test_data, layer):
    '\n    Return hidden layer details\n\n    :param test_data: Data to create a feature space on\n    :param layer: 0 index hidden layer\n    '
    if (not test_data):
        raise ValueError('Must specify test data')
    test_data_key = H2OFrame.send_frame(test_data)
    j = H2OConnection.post_json(((('Predictions/models/' + self._key) + '/frames/') + test_data_key), deep_features_hidden_layer=layer)
    deepfeatures_frame_key = j['destination_key']['name']
    df_frame_meta = h2o.frame(deepfeatures_frame_key)['frames'][0]
    vec_keys = df_frame_meta['vec_keys']
    rows = df_frame_meta['rows']
    cols = [col['label'] for col in df_frame_meta['columns']]
    vecs = H2OVec.new_vecs(zip(cols, vec_keys), rows)
    h2o.remove(test_data_key)
    return H2OFrame(vecs=vecs)
