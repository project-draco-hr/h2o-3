def rmsle(self, train=False, valid=False, xval=False):
    u'\n        Get the rmsle.\n\n        If all are False (default), then return the training metric value.\n        If more than one options is set to True, then return a dictionary of metrics where the keys are "train",\n        "valid", and "xval".\n\n        Parameters\n        ----------\n        train : bool, default=True\n          If train is True, then return the rmsle value for the training data.\n        valid : bool, default=True\n          If valid is True, then return the rmsle value for the validation data.\n        xval : bool, default=True\n          If xval is True, then return the rmsle value for the cross validation data.\n\n        Returns\n        -------\n          The rmsle for this regression model.\n        '
    tm = ModelBase._get_metrics(self, train, valid, xval)
    m = {}
    for (k, v) in viewitems(tm):
        m[k] = (None if (v is None) else v.rmsle())
    return (list(m.values())[0] if (len(m) == 1) else m)
