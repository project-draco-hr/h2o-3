{
  assert(_dinfo != null);
  double[] nums=MemoryManager.malloc8d(_dinfo._nums);
  int[] cats=MemoryManager.malloc4(_dinfo._cats);
  int i=0, ncats=0;
  for (; i < _dinfo._cats; ++i) {
    int c=(int)data[i];
    if (c != 0)     cats[ncats++]=c + _dinfo._catOffsets[i] - 1;
  }
  final int n=data.length;
  for (; i < n; ++i) {
    double d=data[i];
    if (_dinfo._normMul != null)     d=(d - _dinfo._normSub[i - _dinfo._cats]) * _dinfo._normMul[i - _dinfo._cats];
    nums[i - _dinfo._cats]=d;
  }
  setInput(seed,nums,ncats,cats);
}
