{
  final int cols=x.size();
  final int rows=y.size();
  assert(res.size() == rows);
  for (int r=0; r < rows; r++) {
    res.set(r,0);
  }
  for (int c=0; c < cols; c++) {
    final float val=x.get(c);
    for (int r=0; r < rows; r++) {
      if (row_bits != null && (row_bits[r / 8] & (1 << (r % 8))) == 0)       continue;
      res.add(r,a.get(r,c) * val);
    }
  }
  for (int r=0; r < rows; r++) {
    if (row_bits != null && (row_bits[r / 8] & (1 << (r % 8))) == 0)     continue;
    res.add(r,y.get(r));
  }
}
