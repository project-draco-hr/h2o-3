def compute_model_metrics(self, model, frame, timeoutSecs=60, **kwargs):
    assert (model is not None), 'FAIL: "model" parameter is null'
    assert (frame is not None), 'FAIL: "frame" parameter is null'
    models = self.models(key=model, timeoutSecs=timeoutSecs)
    assert (models is not None), 'FAIL: /Models REST call failed'
    assert (models['models'][0]['model_id']['name'] == model), 'FAIL: /Models/{0} returned Model {1} rather than Model {2}'.format(model, models['models'][0]['model_id']['name'], model)
    frames = self.frames(key=frame)
    assert (frames is not None), 'FAIL: /Frames/{0} REST call failed'.format(frame)
    assert (frames['frames'][0]['frame_id']['name'] == frame), 'FAIL: /Frames/{0} returned Frame {1} rather than Frame {2}'.format(frame, frames['frames'][0]['frame_id']['name'], frame)
    result = self.__do_json_request(((('/3/ModelMetrics/models/' + model) + '/frames/') + frame), cmd='post', timeout=timeoutSecs)
    mm = result['model_metrics'][0]
    H2O.verboseprint(('model metrics: ' + repr(mm)))
    return mm
