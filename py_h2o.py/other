import sys, os, getpass, logging, time, inspect, requests, json, pprint
import h2o_test_utils
from h2o_test_utils import log, log_rest
import h2o_print as h2p
'\n    def grid(self, algo, parameters, hyperParameters, timeoutSecs=60, asynchronous=False, **kwargs):\n        assert algo is not None, \'FAIL: "algo" parameter is null\'\n        assert parameters is not None, \'FAIL: "parameters" parameter is null\'\n\n        gridParams = parameters\n        gridParams[\'grid_parameters\'] = json.dumps(hyperParameters)\n\n        result = self.__do_json_request(\'/99/Grid/\' + algo, cmd=\'post\', postData=gridParams, raiseIfNon200=False)\n\n        if asynchronous:\n            return result\n        elif result[\'__http_response\'][\'status_code\'] != 200:\n            return result\n        else:\n            assert \'job\' in result, "FAIL: did not find job key in model build result: " + repr(result)\n            job = result[\'job\']\n            job_key = job[\'key\'][\'name\']\n            H2O.verboseprint("grid search job_key: " + repr(job_key))\n            job_json = self.poll_job(job_key, timeoutSecs=timeoutSecs)\n            return result\n'
