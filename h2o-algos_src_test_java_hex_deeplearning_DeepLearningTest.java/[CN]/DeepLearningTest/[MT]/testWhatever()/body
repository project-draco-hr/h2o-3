{
  DeepLearningModel.DeepLearningParameters dl;
  Frame frTrain=null;
  DeepLearningModel model=null;
  while (true) {
    dl=new DeepLearningModel.DeepLearningParameters();
    Scope.enter();
    try {
      frTrain=parse_test_file("./smalldata/covtype/covtype.20k.data");
      Vec resp=frTrain.lastVec().toEnum();
      frTrain.remove(frTrain.vecs().length - 1);
      frTrain.add("Response",resp);
      dl._train=frTrain._key;
      dl._response_column=((Frame)DKV.getGet(dl._train)).lastVecName();
      dl._seed=1234;
      dl._reproducible=true;
      dl._epochs=0.0001;
      dl._export_weights_and_biases=true;
      dl._hidden=new int[]{188,191};
      DeepLearning job=null;
      try {
        job=new DeepLearning(dl);
        model=job.trainModel().get();
        Log.info(model._output);
      }
  finally {
        if (job != null)         job.remove();
      }
      Assert.assertTrue(job._state == Job.JobState.DONE);
    }
  finally {
      if (frTrain != null)       frTrain.remove();
      if (model != null)       model.delete();
      Scope.exit();
    }
  }
}
