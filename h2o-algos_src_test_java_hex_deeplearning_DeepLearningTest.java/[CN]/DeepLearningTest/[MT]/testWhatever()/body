{
  DeepLearningParameters dl;
  Frame frTrain=null;
  DeepLearningModel model=null;
  dl=new DeepLearningParameters();
  Scope.enter();
  try {
    frTrain=parse_test_file("/users/arno/good.svm");
    Scope.track(frTrain.replace(frTrain.find("C1"),VecUtils.toCategoricalVec(frTrain.vec("C1")))._key);
    dl._train=frTrain._key;
    dl._response_column="C1";
    dl._epochs=1;
    dl._ignore_const_cols=false;
    dl._sparse=true;
    dl._hidden=new int[]{20,20,20};
    DeepLearning job=null;
    try {
      job=new DeepLearning(dl);
      model=job.trainModel().get();
      Log.info(model._output);
      Frame pred;
      assertTrue(model.testJavaScoring(frTrain,pred=model.score(frTrain),1e-5));
      pred.delete();
    }
  finally {
      if (job != null)       job.remove();
    }
    assertTrue(job._state == Job.JobState.DONE);
  }
  finally {
    if (frTrain != null)     frTrain.remove();
    if (model != null)     model.delete();
    Scope.exit();
  }
}
