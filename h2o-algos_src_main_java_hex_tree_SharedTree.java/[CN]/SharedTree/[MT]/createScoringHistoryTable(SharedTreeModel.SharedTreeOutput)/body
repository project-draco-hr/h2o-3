{
  List<String> colHeaders=new ArrayList<>();
  List<String> colTypes=new ArrayList<>();
  List<String> colFormat=new ArrayList<>();
  colHeaders.add("Timestamp");
  colTypes.add("string");
  colFormat.add("%s");
  colHeaders.add("Duration");
  colTypes.add("string");
  colFormat.add("%s");
  colHeaders.add("Number of Trees");
  colTypes.add("long");
  colFormat.add("%d");
  colHeaders.add("Training MSE");
  colTypes.add("double");
  colFormat.add("%.5f");
  if (_output.getModelCategory() == ModelCategory.Regression) {
    colHeaders.add("Training Deviance");
    colTypes.add("double");
    colFormat.add("%.5f");
  }
  if (_output.isClassifier()) {
    colHeaders.add("Training LogLoss");
    colTypes.add("double");
    colFormat.add("%.5f");
  }
  if (_output.getModelCategory() == ModelCategory.Binomial) {
    colHeaders.add("Training AUC");
    colTypes.add("double");
    colFormat.add("%.5f");
    colHeaders.add("Training Lift");
    colTypes.add("double");
    colFormat.add("%.5f");
  }
  if (_output.getModelCategory() == ModelCategory.Binomial || _output.getModelCategory() == ModelCategory.Multinomial) {
    colHeaders.add("Training Classification Error");
    colTypes.add("double");
    colFormat.add("%.5f");
  }
  if (valid() != null) {
    colHeaders.add("Validation MSE");
    colTypes.add("double");
    colFormat.add("%.5f");
    if (_output.getModelCategory() == ModelCategory.Regression) {
      colHeaders.add("Validation Deviance");
      colTypes.add("double");
      colFormat.add("%.5f");
    }
    if (_output.isClassifier()) {
      colHeaders.add("Validation LogLoss");
      colTypes.add("double");
      colFormat.add("%.5f");
    }
    if (_output.getModelCategory() == ModelCategory.Binomial) {
      colHeaders.add("Validation AUC");
      colTypes.add("double");
      colFormat.add("%.5f");
      colHeaders.add("Validation Lift");
      colTypes.add("double");
      colFormat.add("%.5f");
    }
    if (_output.isClassifier()) {
      colHeaders.add("Validation Classification Error");
      colTypes.add("double");
      colFormat.add("%.5f");
    }
  }
  int rows=0;
  for (int i=0; i < _output._scored_train.length; i++) {
    if (i != 0 && Double.isNaN(_output._scored_train[i]._mse))     continue;
    rows++;
  }
  TwoDimTable table=new TwoDimTable("Scoring History",null,new String[rows],colHeaders.toArray(new String[0]),colTypes.toArray(new String[0]),colFormat.toArray(new String[0]),"");
  int row=0;
  for (int i=0; i < _output._scored_train.length; i++) {
    if (i != 0 && Double.isNaN(_output._scored_train[i]._mse))     continue;
    int col=0;
    DateTimeFormatter fmt=DateTimeFormat.forPattern("yyyy-MM-dd HH:mm:ss");
    table.set(row,col++,fmt.print(_output._training_time_ms[i]));
    table.set(row,col++,PrettyPrint.msecs(_output._training_time_ms[i] - _job.start_time(),true));
    table.set(row,col++,i);
    ScoreKeeper st=_output._scored_train[i];
    table.set(row,col++,st._mse);
    if (_output.getModelCategory() == ModelCategory.Regression)     table.set(row,col++,st._mean_residual_deviance);
    if (_output.isClassifier())     table.set(row,col++,st._logloss);
    if (_output.getModelCategory() == ModelCategory.Binomial) {
      table.set(row,col++,st._AUC);
      table.set(row,col++,st._lift);
    }
    if (_output.isClassifier())     table.set(row,col++,st._classError);
    if (_valid != null) {
      st=_output._scored_valid[i];
      table.set(row,col++,st._mse);
      if (_output.getModelCategory() == ModelCategory.Regression)       table.set(row,col++,st._mean_residual_deviance);
      if (_output.isClassifier())       table.set(row,col++,st._logloss);
      if (_output.getModelCategory() == ModelCategory.Binomial) {
        table.set(row,col++,st._AUC);
        table.set(row,col++,st._lift);
      }
      if (_output.isClassifier())       table.set(row,col++,st._classError);
    }
    row++;
  }
  return table;
}
