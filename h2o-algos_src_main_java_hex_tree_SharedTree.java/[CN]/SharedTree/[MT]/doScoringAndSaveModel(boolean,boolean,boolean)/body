{
  long now=System.currentTimeMillis();
  if (_firstScore == 0)   _firstScore=now;
  long sinceLastScore=now - _timeLastScoreStart;
  boolean updated=false;
  if (_parms._score_each_iteration || finalScoring || (now - _firstScore < 4000)|| (sinceLastScore > 4000 && (double)(_timeLastScoreEnd - _timeLastScoreStart) / sinceLastScore < 0.1)) {
    _model.update(_key);
    updated=true;
    _timeLastScoreStart=now;
    Score sc=new Score(this,oob).doIt(build_tree_one_node).report(_model._output._ntrees,null);
    SharedTreeModel.SharedTreeOutput out=_model._output;
    out._r2=sc.r2();
    out._cm=sc.cm();
    out._auc=sc.auc();
    out._mse_train[out._ntrees]=_parms._valid == null ? sc.mse() : Double.NaN;
    out._mse_test[out._ntrees]=_parms._valid == null ? Double.NaN : sc.mse();
    _timeLastScoreEnd=System.currentTimeMillis();
  }
  if (_parms._importance && _model._output._ntrees > 0) {
    if (!updated)     _model.update(_key);
    updated=true;
    Timer vi_timer=new Timer();
    _model._output._varimp=doVarImpCalc(false);
    Log.info("Computation of variable importance took: " + vi_timer.toString());
  }
  if (updated)   _model.update(_key);
}
