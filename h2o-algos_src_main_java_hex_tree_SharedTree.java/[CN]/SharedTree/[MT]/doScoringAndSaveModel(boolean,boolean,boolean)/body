{
  double training_r2=Double.NaN;
  long now=System.currentTimeMillis();
  if (_firstScore == 0)   _firstScore=now;
  long sinceLastScore=now - _timeLastScoreStart;
  boolean updated=false;
  if (_parms._score_each_iteration || finalScoring || (now - _firstScore < 4000)|| (sinceLastScore > 4000 && (double)(_timeLastScoreEnd - _timeLastScoreStart) / sinceLastScore < 0.1)) {
    _model.update(_key);
    updated=true;
    Log.info("============================================================== ");
    SharedTreeModel.SharedTreeOutput out=_model._output;
    _timeLastScoreStart=now;
    Score sc=new Score(this,oob,_model._output.getModelCategory()).doAll(train(),build_tree_one_node);
    ModelMetricsSupervised mm=sc.makeModelMetrics(_model,_parms.train(),_parms._response_column);
    out._training_metrics=mm;
    if (oob)     out._training_metrics._description="Metrics reported on Out-Of-Bag training samples";
    String train_logloss=isClassifier() ? ", logloss is " + (float)(_nclass == 2 ? ((ModelMetricsBinomial)mm)._logloss : ((ModelMetricsMultinomial)mm)._logloss) : "";
    out._mse_train[out._ntrees]=mm._mse;
    training_r2=mm.r2();
    Log.info("training r2 is " + (float)mm.r2() + ", mse is "+ (float)mm._mse+ train_logloss+ ", with "+ _model._output._ntrees+ "x"+ _nclass+ " trees (average of "+ (1 + _model._output._treeStats._mean_leaves)+ " nodes)");
    if (_parms._valid != null) {
      Score scv=new Score(this,oob,_model._output.getModelCategory()).doAll(valid(),build_tree_one_node);
      ModelMetricsSupervised mmv=scv.makeModelMetrics(_model,_parms.valid(),_parms._response_column);
      out._mse_valid[out._ntrees]=mmv._mse;
      out._validation_metrics=mmv;
      String valid_logloss=isClassifier() ? ", logloss is " + (float)(_nclass == 2 ? ((ModelMetricsBinomial)mmv)._logloss : ((ModelMetricsMultinomial)mmv)._logloss) : "";
      Log.info("validation r2 is " + (float)mmv.r2() + ", mse is "+ (float)mmv._mse+ valid_logloss);
    }
    if (out._ntrees > 0)     out._variable_importances=hex.ModelMetrics.calcVarImp(new hex.VarImp(_improvPerVar,out._names));
    ConfusionMatrix cm=mm.cm();
    if (cm != null) {
      Log.info(cm.toASCII());
      Log.info((_nclass > 1 ? "Total of " + cm.errCount() + " errors" : "Reported") + " on " + cm.totalRows()+ " rows");
    }
    _timeLastScoreEnd=System.currentTimeMillis();
  }
  if (updated)   _model.update(_key);
  return training_r2;
}
