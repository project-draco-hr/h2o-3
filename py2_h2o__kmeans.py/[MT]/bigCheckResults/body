def bigCheckResults(kmeansObj, kmeans, csvPathname, parseResult, predictKey, **kwargs):
    predictResult = h2o_nodes.nodes[0].generate_predictions(data_key=parseResult['destination_key'], model_key=model_key, destination_key=predictKey)
    summaryResult = h2o_nodes.nodes[0].summary_page(key=predictKey, timeoutSecs=120)
    hcnt = summaryResult['summaries'][0]['hcnt']
    rows_per_cluster = hcnt
    sqr_error_per_cluster = cluster_variances
    if ((len(centers) != len(rows_per_cluster)) or (len(centers) != len(sqr_error_per_cluster))):
        raise Exception(('centers, rows_per_cluster, sqr_error_per_cluster should all be same length %s, %s, %s' % (len(centers), len(rows_per_cluster), len(sqr_error_per_cluster))))
    print ('Did iterations: %s  given max_iter: %s' % (iterations, max_iter))
