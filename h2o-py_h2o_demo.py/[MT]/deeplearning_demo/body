def deeplearning_demo(interactive, echo, test):
    h2o_data_path = system_file('prostate.csv')
    demo_description = ['\n-----------------------------------------------------------------', "This is a demo of H2O's Deeplearning function.", 'It uploads a dataset to h2o, parses it, and shows a description.', 'Then, it divides the dataset into training and test sets, ', 'builds a model from the training set, and predicts on the test set.', 'Finally, default performance metrics are displayed.', '-----------------------------------------------------------------']
    demo_commands = ['# Connect to h2o', '>>> h2o.init()\n', '\n# Upload the prostate dataset that comes included in the h2o python package', (('>>> prostate = h2o.upload_file(path = ' + h2o_data_path) + '))\n'), '\n# Print a description of the prostate data', '>>> prostate.summary()\n', '\n# Randomly split the dataset into ~70/30, training/test sets', '>>> r = prostate[0].runif()', '>>> train = prostate[r < 0.70]', '>>> valid = prostate[r >= 0.30]\n', '\n# Convert the response columns to factors (for binary classification problems)', '>>> train["CAPSULE"] = train["CAPSULE"].asfactor()', '>>> test["CAPSULE"] = test["CAPSULE"].asfactor()\n', '\n# Build a (classification) Deeplearning model', '>>> prostate_dl = h2o.deeplearning(x=train[list(set(prostate.col_names)-set(["ID","CAPSULE"]))], y=train["CAPSULE"], activation="Tanh", hidden=[10, 10, 10], epochs=10000)\n', '\n# Show the model', '>>> prostate_dl.show()\n', '\n# Predict on the test set and show the first ten predictions', '>>> predictions = prostate_dl.predict(test)', '>>> predictions.show()\n', '\n# Show default performance metrics', '>>> performance = prostate_dl.model_performance(test)', '>>> performance.show()\n']
    for line in demo_description:
        print(line)
    print()
    echo_and_interact(demo_commands, interactive, echo)
    if (not test):
        h2o.init()
    echo_and_interact(demo_commands, interactive, echo)
    prostate = h2o.upload_file(path=h2o_data_path)
    echo_and_interact(demo_commands, interactive, echo)
    prostate.summary()
    echo_and_interact(demo_commands, interactive, echo, npop=4)
    r = prostate[0].runif()
    train = prostate[(r < 0.7)]
    test = prostate[(r >= 0.3)]
    echo_and_interact(demo_commands, interactive, echo, npop=3)
    train['CAPSULE'] = train['CAPSULE'].asfactor()
    test['CAPSULE'] = test['CAPSULE'].asfactor()
    echo_and_interact(demo_commands, interactive, echo)
    prostate_dl = h2o.deeplearning(x=train[list((set(prostate.col_names) - set(['ID', 'CAPSULE'])))], y=train['CAPSULE'], activation='Tanh', hidden=[10, 10, 10], epochs=10000)
    echo_and_interact(demo_commands, interactive, echo)
    prostate_dl.show()
    echo_and_interact(demo_commands, interactive, echo, npop=3)
    predictions = prostate_dl.predict(test)
    predictions.show()
    echo_and_interact(demo_commands, interactive, echo, npop=3)
    performance = prostate_dl.model_performance(test)
    performance.show()
