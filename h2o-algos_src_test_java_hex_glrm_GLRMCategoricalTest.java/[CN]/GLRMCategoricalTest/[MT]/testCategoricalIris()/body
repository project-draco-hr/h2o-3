{
  GLRM job=null;
  GLRMModel model=null;
  Frame train=null, score=null;
  try {
    train=parse_test_file(Key.make("iris.hex"),"smalldata/iris/iris_wheader.csv");
    GLRMModel.GLRMParameters parms=new GLRMModel.GLRMParameters();
    parms._train=train._key;
    parms._k=4;
    parms._loss=GLRMModel.GLRMParameters.Loss.L1;
    parms._init=GLRM.Initialization.SVD;
    parms._transform=DataInfo.TransformType.NONE;
    parms._recover_svd=true;
    parms._max_iterations=1000;
    try {
      job=new GLRM(parms);
      model=job.trainModel().get();
      Log.info("Iteration " + model._output._iterations + ": Objective value = "+ model._output._objective);
      score=model.score(train);
      ModelMetricsGLRM mm=DKV.getGet(model._output._model_metrics[model._output._model_metrics.length - 1]);
      Log.info("Numeric Sum of Squared Error = " + mm._numerr + "\tCategorical Misclassification Error = "+ mm._caterr);
    }
 catch (    Throwable t) {
      t.printStackTrace();
      throw new RuntimeException(t);
    }
 finally {
      job.remove();
    }
  }
 catch (  Throwable t) {
    t.printStackTrace();
    throw new RuntimeException(t);
  }
 finally {
    if (train != null)     train.delete();
    if (score != null)     score.delete();
    if (model != null) {
      model._parms._loading_key.get().delete();
      model.delete();
    }
  }
}
