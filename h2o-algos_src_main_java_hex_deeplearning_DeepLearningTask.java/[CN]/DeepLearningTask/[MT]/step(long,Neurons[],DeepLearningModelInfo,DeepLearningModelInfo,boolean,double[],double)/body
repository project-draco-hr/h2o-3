{
  for (int i=1; i < neurons.length; ++i)   neurons[i].fprop(seed,training);
  if (offset > 0) {
    assert(!minfo._classification);
    double[] m=minfo.data_info()._normRespMul;
    double[] s=minfo.data_info()._normRespSub;
    double mul=m == null ? 1 : m[0];
    double sub=s == null ? 0 : s[0];
    neurons[neurons.length - 1]._a.add(0,((offset - sub) * mul));
  }
  if (training) {
    neurons[neurons.length - 1].setOutputLayerGradient(minfo.get_params()._autoencoder ? Double.NaN : responses[0]);
    if (consensus_minfo != null) {
      for (int i=1; i < neurons.length; i++) {
        neurons[i]._wEA=consensus_minfo.get_weights(i - 1);
        neurons[i]._bEA=consensus_minfo.get_biases(i - 1);
      }
    }
  }
}
