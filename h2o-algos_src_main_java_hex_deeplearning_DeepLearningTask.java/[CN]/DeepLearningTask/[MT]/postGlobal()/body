{
  DeepLearningParameters dlp=_localmodel.get_params();
  if (H2O.CLOUD.size() > 1 && !dlp._replicate_training_data) {
    long now=System.currentTimeMillis();
    if (_chunk_node_count < H2O.CLOUD.size() && (now - _lastWarn > 5000) && _warnCount < 3) {
      Log.warn(H2O.CLOUD.size() - _chunk_node_count + " node(s) (out of " + H2O.CLOUD.size() + ") are not contributing to model updates. Consider setting replicate_training_data to true or using a larger training dataset (or fewer H2O nodes).");
      _lastWarn=now;
      _warnCount++;
    }
  }
  assert((!dlp._replicate_training_data || H2O.CLOUD.size() == 1) == !_run_local);
  if (!_run_local) {
    _localmodel.add_processed_global(_localmodel.get_processed_local());
    _localmodel.set_processed_local(0l);
    if (_chunk_node_count > 1)     _localmodel.div(_chunk_node_count);
    if (_localmodel.get_params()._elastic_averaging)     _sharedmodel=DeepLearningModelInfo.elasticAverage(_localmodel);
  }
 else {
    _sharedmodel=_localmodel;
  }
  if (_sharedmodel == null)   _sharedmodel=_localmodel;
  _localmodel=null;
}
