{
  if (H2O.CLOUD.size() > 1 && !_localmodel.get_params()._replicate_training_data) {
    long now=System.currentTimeMillis();
    if (_chunk_node_count < H2O.CLOUD.size() && (now - _lastWarn > 5000) && _warnCount < 3) {
      Log.warn(H2O.CLOUD.size() - _chunk_node_count + " node(s) (out of " + H2O.CLOUD.size() + ") are not contributing to model updates. Consider setting replicate_training_data to true or using a larger training dataset (or fewer H2O nodes).");
      _lastWarn=now;
      _warnCount++;
    }
  }
  _localmodel.add_processed_global(_localmodel.get_processed_local());
  _localmodel.set_processed_local(0l);
  if (_localmodel != null && (!_localmodel.get_params()._replicate_training_data || H2O.CLOUD.size() == 1)) {
    if (_chunk_node_count > 1)     _localmodel.div(_chunk_node_count);
    _localmodel.add_processed_global(_localmodel.get_processed_local());
    _localmodel.set_processed_local(0l);
    if (consensusADMM && _localmodel != _sharedmodel) {
      _localmodel.set_processed_local(0l);
      _sharedmodel=(DeepLearningModel.DeepLearningModelInfo)_localmodel.clone();
      DKV.put(_sharedmodel.data_info);
    }
  }
  if (!consensusADMM)   _sharedmodel=_localmodel;
  assert(_sharedmodel != null);
}
