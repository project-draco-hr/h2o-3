def offset_tweedie():
    insurance = h2o.import_file(tests.locate('smalldata/glm_test/insurance.csv'))
    insurance['offset'] = insurance['Holders'].log()
    gbm = h2o.gbm(x=insurance[0:3], y=insurance['Claims'], distribution='tweedie', ntrees=600, max_depth=1, min_rows=1, learn_rate=0.1, offset_column='offset', training_frame=insurance)
    predictions = gbm.predict(insurance)
    assert (abs(((-1.869702) - gbm._model_json['output']['init_f'])) < 1e-05), 'expected init_f to be {0}, but got {1}'.format((-1.869702), gbm._model_json['output']['init_f'])
    assert (abs((49.21591 - predictions.mean())) < 0.001), 'expected prediction mean to be {0}, but got {1}'.format(49.21591, predictions.mean())
    assert (abs((1.0258 - predictions.min())) < 0.0001), 'expected prediction min to be {0}, but got {1}'.format(1.0258, predictions.min())
    assert (abs((392.4651 - predictions.max())) < 0.01), 'expected prediction max to be {0}, but got {1}'.format(392.4651, predictions.max())
