def hdfs_orc_parser():
    hadoop_namenode_is_accessible = pyunit_utils.hadoop_namenode_is_accessible()
    if hadoop_namenode_is_accessible:
        hdfs_name_node = pyunit_utils.hadoop_namenode()
        hdfs_orc_file = '/datasets/orc_parser/orc/TestOrcFile.testStringAndBinaryStatistics.orc'
        url_orc = 'hdfs://{0}{1}'.format(hdfs_name_node, hdfs_orc_file)
        assert pyunit_utils.expect_warnings(url_orc, 'UserWarning:', 'Skipping field:', 1), (('Expect warnings from orc parser for file ' + url_orc) + '!')
        hdfs_orc_file = '/datasets/orc_parser/orc/TestOrcFile.emptyFile.orc'
        url_orc = 'hdfs://{0}{1}'.format(hdfs_name_node, hdfs_orc_file)
        assert pyunit_utils.expect_warnings(url_orc, 'UserWarning:', 'Skipping field:', 1), (('Expect warnings from orc parser for file ' + url_orc) + '!')
        hdfs_orc_file = '/datasets/orc_parser/orc/nulls-at-end-snappy.orc'
        url_orc = 'hdfs://{0}{1}'.format(hdfs_name_node, hdfs_orc_file)
        assert pyunit_utils.expect_warnings(url_orc, 'UserWarning:', 'Skipping field:', 1), (('Expect warnings from orc parser for file ' + url_orc) + '!')
    else:
        raise EnvironmentError
