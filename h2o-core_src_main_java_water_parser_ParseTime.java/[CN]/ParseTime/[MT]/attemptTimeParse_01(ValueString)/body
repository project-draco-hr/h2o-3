{
  final byte[] buf=str.getBuffer();
  int i=str.getOffset();
  final int end=i + str.length();
  while (i < end && buf[i] == ' ')   i++;
  if (i < end && buf[i] == '"')   i++;
  if ((end - i) != 10 && (end - i) < 19)   return Long.MIN_VALUE;
  int yy=0, MM=0, dd=0, HH=0, mm=0, ss=0, SS=0;
  yy=digit(yy,buf[i++]);
  yy=digit(yy,buf[i++]);
  yy=digit(yy,buf[i++]);
  yy=digit(yy,buf[i++]);
  if (buf[i++] != '-')   return Long.MIN_VALUE;
  MM=digit(MM,buf[i++]);
  MM=digit(MM,buf[i++]);
  if (MM < 1 || MM > 12)   return Long.MIN_VALUE;
  if (buf[i++] != '-')   return Long.MIN_VALUE;
  dd=digit(dd,buf[i++]);
  dd=digit(dd,buf[i++]);
  if (dd < 1 || dd > 31)   return Long.MIN_VALUE;
  if (i == end)   return encodeTimePat(new DateTime(yy,MM,dd,0,0,0,getTimezone()).getMillis(),0);
  if (buf[i++] != ' ')   return Long.MIN_VALUE;
  HH=digit(HH,buf[i++]);
  HH=digit(HH,buf[i++]);
  if (HH < 0 || HH > 23)   return Long.MIN_VALUE;
  if (buf[i++] != ':')   return Long.MIN_VALUE;
  mm=digit(mm,buf[i++]);
  mm=digit(mm,buf[i++]);
  if (mm < 0 || mm > 59)   return Long.MIN_VALUE;
  if (buf[i++] != ':')   return Long.MIN_VALUE;
  ss=digit(ss,buf[i++]);
  ss=digit(ss,buf[i++]);
  if (ss < 0 || ss > 59)   return Long.MIN_VALUE;
  if (i < end && buf[i] == '.') {
    i++;
    if (i < end)     SS=digit(SS,buf[i++]);
    if (i < end)     SS=digit(SS,buf[i++]);
    if (i < end)     SS=digit(SS,buf[i++]);
    if (SS < 0 || SS > 999)     return Long.MIN_VALUE;
  }
  if (i < end && buf[i] == '"')   i++;
  if (i < end)   return Long.MIN_VALUE;
  return encodeTimePat(new DateTime(yy,MM,dd,HH,mm,ss,getTimezone()).getMillis() + SS,1);
}
