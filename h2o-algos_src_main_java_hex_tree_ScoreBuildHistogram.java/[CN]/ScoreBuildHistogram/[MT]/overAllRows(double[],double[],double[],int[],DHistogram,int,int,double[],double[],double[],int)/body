{
  if (rh == null)   return;
  double[] rhbins=rh._bins;
  int rhbinslen=rhbins.length;
  double min=rh._min2;
  double max=rh._maxIn;
  if (rhbinslen > binslen) {
    bins=new double[rhbinslen];
    sums=new double[rhbinslen];
    ssqs=new double[rhbinslen];
  }
  double minmax[]=new double[]{min,max};
  fillLocalHistoForNode(bins,sums,ssqs,ws,cs,ys,rh,rows,hi,lo,minmax);
  rh.setMin(minmax[0]);
  rh.setMax(minmax[1]);
  int len=rhbinslen;
  for (int b=0; b < len; b++) {
    if (bins[b] != 0) {
      AtomicUtils.DoubleArray.add(rhbins,b,bins[b]);
      bins[b]=0;
    }
    if (sums[b] != 0 || ssqs[b] != 0) {
      rh.incr1(b,sums[b],ssqs[b]);
      sums[b]=ssqs[b]=0;
    }
  }
}
