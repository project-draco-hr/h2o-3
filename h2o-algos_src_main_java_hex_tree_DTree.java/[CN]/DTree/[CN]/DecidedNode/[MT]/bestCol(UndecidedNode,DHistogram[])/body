{
  DTree.Split best=new DTree.Split(-1,-1,null,(byte)0,Double.MAX_VALUE,Double.MAX_VALUE,Double.MAX_VALUE,0L,0L,0,0);
  if (hs == null)   return best;
  final int maxCols=u._scoreCols == null ? hs.length : u._scoreCols.length;
  for (int i=0; i < maxCols; i++) {
    int col=u._scoreCols == null ? i : u._scoreCols[i];
    if (hs[col] == null || hs[col].nbins() <= 1)     continue;
    DTree.Split s=hs[col].scoreMSE(col,_tree._min_rows);
    if (s == null)     continue;
    if (s.se() < best.se())     best=s;
    if (s.se() <= 0)     break;
  }
  return best;
}
