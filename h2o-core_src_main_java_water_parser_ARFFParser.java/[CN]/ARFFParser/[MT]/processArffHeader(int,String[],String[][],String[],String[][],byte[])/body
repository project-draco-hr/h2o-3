{
  for (int i=0; i < ncols; ++i) {
    data[i]=headerlines[i].split("\\s+");
    if (!data[i][0].equalsIgnoreCase("@ATTRIBUTE")) {
      throw new H2OParseSetupException("Expected line to start with @ATTRIBUTE.");
    }
 else {
      if (data[i].length < 3) {
        throw new H2OParseSetupException("Expected @ATTRIBUTE to be followed by <attribute-name> <datatype>");
      }
      labels[i]=data[i][1];
      String type=data[i][2];
      domains[i]=null;
      if (type.equalsIgnoreCase("NUMERIC") || type.equalsIgnoreCase("REAL") || type.equalsIgnoreCase("INTEGER")|| type.equalsIgnoreCase("INT")) {
        ctypes[i]=Vec.T_NUM;
        continue;
      }
 else       if (type.equalsIgnoreCase("DATE") || type.equalsIgnoreCase("TIME")) {
        ctypes[i]=Vec.T_TIME;
        continue;
      }
 else       if (type.equalsIgnoreCase("ENUM")) {
        ctypes[i]=Vec.T_CAT;
        continue;
      }
 else       if (type.equalsIgnoreCase("STRING")) {
        ctypes[i]=Vec.T_STR;
        continue;
      }
 else       if (type.equalsIgnoreCase("UUID")) {
        ctypes[i]=Vec.T_UUID;
        continue;
      }
 else       if (type.equalsIgnoreCase("RELATIONAL")) {
        throw new UnsupportedOperationException("Relational ARFF format is not supported.");
      }
 else       if (type.startsWith("{") && data[i][data[i].length - 1].endsWith("}")) {
        StringBuilder builder=new StringBuilder();
        for (int j=2; j < data[i].length; j++) {
          builder.append(data[i][j]);
        }
        domains[i]=builder.toString().replaceAll("[{}]","").split(",");
        if (domains[i][0].length() > 0) {
          ctypes[i]=Vec.T_CAT;
          continue;
        }
      }
      throw new H2OParseSetupException("Unexpected line.");
    }
  }
}
