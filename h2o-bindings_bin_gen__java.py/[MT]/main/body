def main():
    bi.init(u'Java', u'java')
    for schema in bi.schemas():
        name = schema[u'name']
        bi.vprint((u'Generating schema: ' + name))
        bi.write_to_file((u'water/bindings/pojos/%s.java' % name), generate_schema(name, schema))
    for (name, values) in bi.enums().items():
        bi.vprint((u'Generating enum: ' + name))
        bi.write_to_file((u'water/bindings/pojos/%s.java' % name), generate_enum(name, sorted(values)))
    sm = bi.schemas_map()
    for (name, endpoints) in bi.endpoint_groups().items():
        bi.vprint((u'Generating proxy: ' + name))
        bi.write_to_file((u'water/bindings/proxies/retrofit/%s.java' % name), generate_proxy(name, endpoints, sm))
    bi.vprint(u'Generating H2oApi.java')
    bi.write_to_file(u'water/bindings/H2oApi.java', generate_main_class(bi.endpoints()))
    type_adapter.vprint_translation_map()
