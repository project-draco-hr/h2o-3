def main():
    bi.init('Java', 'java')
    for schema in bi.schemas():
        name = schema['name']
        bi.vprint(('Generating schema: ' + name))
        bi.write_to_file(('water/bindings/pojos/%s.java' % name), generate_schema(name, schema))
    for (name, values) in bi.enums().iteritems():
        bi.vprint(('Generating enum: ' + name))
        bi.write_to_file(('water/bindings/pojos/%s.java' % name), generate_enum(name, sorted(values)))
    sm = bi.schemas_map()
    for (name, endpoints) in bi.endpoint_groups().iteritems():
        bi.vprint(('Generating proxy: ' + name))
        bi.write_to_file(('water/bindings/proxies/retrofit/%s.java' % name), generate_proxy(name, endpoints, sm))
    type_adapter.vprint_translation_map()
