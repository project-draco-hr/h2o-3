{
  Frame f=stk.track(asts[1].exec(env)).getFrame();
  if (f.numCols() != 1)   throw new IllegalArgumentException("Must give a single numeric column.");
  if (!f.anyVec().isNumeric())   throw new IllegalArgumentException("Column must be numeric.");
  CumSumTask t=new CumSumTask(f.anyVec().nChunks());
  t.doAll(1,f.anyVec());
  final double[] chkSums=t._chkSums;
  Vec cumuVec=t.outputFrame().anyVec();
  new MRTask(){
    @Override public void map(    Chunk c){
      double d=c.cidx() == 0 ? 0 : chkSums[c.cidx() - 1];
      for (int i=0; i < c._len; ++i)       c.set(i,c.atd(i) + d);
    }
  }
.doAll(cumuVec);
  return new ValFrame(new Frame(cumuVec));
}
