u'\nPython 2 / 3 compatibility module.\n\nThis module gathers common declarations needed to ensure Python 2 / Python 3 compatibility.\nIt has to be imported from all other files, so that the common header looks like this:\n\nfrom __future__ import absolute_import, division, print_function, unicode_literals\nfrom .compatibility import *  # NOQA\n\n  :copyright: (c) 2016 H2O.ai\n  :license:   Apache License Version 2.0 (see LICENSE for details)\n'
from __future__ import absolute_import, division, print_function, unicode_literals
from future.utils import PY2, PY3, with_metaclass
native_bytes = bytes
native_dict = dict
native_int = int
native_list = list
native_object = object
native_str = str
if PY2:
    native_unicode = unicode
    native_long = long
    _str_type = (str, unicode)
    _int_type = (int, long)
    _num_type = (int, long, float)
else:
    _str_type = str
    _int_type = int
    _num_type = (int, float)
if PY2:
    from future.builtins.iterators import range, filter, map, zip
if (PY2 or PY3):
    from future.utils import viewitems, viewkeys, viewvalues
if PY2:
    from future.builtins.disabled import apply, cmp, coerce, execfile, file, long, raw_input, reduce, reload, unicode, xrange, StandardError
if PY2:
    from future.builtins.misc import ascii, chr, hex, input, next, oct, open, pow, round, super
