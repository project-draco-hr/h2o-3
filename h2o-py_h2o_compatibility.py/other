u'\nPython 2 / 3 compatibility module.\n\nThis module gathers common declarations needed to ensure Python 2 / Python 3 compatibility.\nIt has to be imported from all other files, so that the common header looks like this:\n\nfrom __future__ import absolute_import, division, print_function, unicode_literals\nfrom .compatibility import *  # NOQA\n\n------------------------------------------------------------------------\n\n1. Strings\n    In Py2 `str` is a byte string (`bytes is str == True`), and `unicode` is a unicode string.\n    In Py3 `str` is a unicode string, `bytes` is a byte string, and symbol `unicode` is not defined.\n    Iterating over a `bytes` string in Py2 produces characters, in Py3 character codes.\n\n    For consistent results, use\n        is_str(s)  to test whether an argument is a string\n        bytes_iterator(s)  to iterate over byte-codes of strins s (which could be bytes or unicode)\n\n2. Integers\n    In Py2 there are two integer types: `int` and `long`. The latter has suffix "L" when stringified with repr().\n    In Py3 `int` is a single integer type, `long` doesn\'t exist.\n\n    For consistent results, use\n        is_int(x)  to test whether an argument is an integer\n        str(x)  to convert x to string (don\'t use repr()!)\n\n\n  :copyright: (c) 2016 H2O.ai\n  :license:   Apache License Version 2.0 (see LICENSE for details)\n'
from __future__ import absolute_import, division, print_function, unicode_literals
from future.utils import PY2, PY3, with_metaclass
if PY2:
    _str_type = (str, unicode)
    _int_type = (int, long)
    _num_type = (int, long, float)
else:
    _str_type = str
    _int_type = int
    _num_type = (int, float)
if PY2:
    from future.builtins.iterators import range, filter, map, zip
if (PY2 or PY3):
    from future.utils import viewitems, viewkeys, viewvalues
if PY2:
    from future.builtins.disabled import apply, cmp, coerce, execfile, file, long, raw_input, reduce, reload, unicode, xrange, StandardError
if PY2:
    from future.builtins.misc import ascii, chr, hex, input, next, oct, open, pow, round, super
