{
  GLRMModel model=null;
  try {
    _parms.read_lock_frames(GLRM.this);
    init(true);
    if (error_count() > 0)     throw new IllegalArgumentException("Found validation errors: " + validationErrors());
    model=new GLRMModel(dest(),_parms,new GLRMModel.GLRMOutput(GLRM.this));
    model.delete_and_lock(_key);
    GramTask gtsk=new GramTask(_xkey,xinfo).doAll(xinfo._adaptedFrame);
    if (_parms._lambda > 0)     gtsk._gram.addDiag(_parms._lambda);
    Cholesky chol=gtsk._gram.cholesky(null);
    MultTask mtsk=new MultTask(_xkey,xinfo,_key,dinfo).doAll(xinfo._adaptedFrame,dinfo._adaptedFrame);
  }
 catch (  Throwable t) {
    Job thisJob=DKV.getGet(_key);
    if (thisJob._state == JobState.CANCELLED) {
      Log.info("Job cancelled by user.");
    }
 else {
      t.printStackTrace();
      failed(t);
      throw t;
    }
  }
 finally {
    if (model != null)     model.unlock(_key);
    _parms.read_unlock_frames(GLRM.this);
  }
  tryComplete();
}
