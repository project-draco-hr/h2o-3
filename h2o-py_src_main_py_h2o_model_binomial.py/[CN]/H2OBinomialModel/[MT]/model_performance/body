def model_performance(self, test_data=None):
    '\n        Compute the binary classifier model metrics on `test_data`\n        :param test_data: An H2OFrame\n        :return: A H2OBinomialMetrics object; prints model metrics summary\n        '
    if (not test_data):
        raise ValueError('Missing`test_data`.')
    if (not isinstance(test_data, H2OFrame)):
        raise ValueError(('`test_data` must be of type H2OFrame. Got: ' + type(test_data)))
    fr_key = H2OFrame.send_frame(test_data)
    url_suffix = ((('ModelMetrics/models/' + self._key) + '/frames/') + fr_key)
    res = h2oConn.do_safe_post_json(url_suffix=url_suffix)
    raw_metrics = res['model_metrics'][0]
    return H2OBinomialModelMetrics(raw_metrics)
