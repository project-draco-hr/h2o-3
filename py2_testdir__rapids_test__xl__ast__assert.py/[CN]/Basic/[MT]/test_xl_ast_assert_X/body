def test_xl_ast_assert_X(self):
    a = DF('a1')
    checkAst(astForInit(a))
    b = DF('b1')
    checkAst(astForInit(b))
    c = DF('c1')
    checkAst(astForInit(c))
    print 'lastExecResult:', dump_json(h2o_xl.Xbase.lastExecResult)
    assert isinstance(a, DF)
    assert isinstance(a, Key)
    assert isinstance(a, Xbase)
    assert (not isinstance(a, KeyIndexed))
    assert (not isinstance(a, Fcn))
    assert (not isinstance(a, Assign))
    assert isinstance(a, Key)
    assert isinstance(b, Key)
    assert isinstance(c, Key)
    Assign(a, 2)
    checkAst('(= !a1 #2)')
    Assign(b, 2)
    checkAst('(= !b1 #2)')
    Assign(c, 2)
    checkAst('(= !c1 #2)')
    Assign(c, (~ c))
    checkAst('(= !c1 (^ $c1 #1))')
    Assign(c, (- c))
    checkAst('(= !c1 (_ $c1))')
    Assign(c, abs(c))
    checkAst('(= !c1 (abs $c1))')
    Assign(a, [0])
    checkAst('(= !a1 (c {#0}))')
    Assign(b, [0, 1])
    checkAst('(= !b1 (c {#0;#1}))')
    Assign(c, [0, 1, 2])
    checkAst('(= !c1 (c {#0;#1;#2}))')
    Assign(a, (0,))
    checkAst('(= !a1 (c {#0}))')
    Assign(b, (0, 1))
    checkAst('(= !b1 (c {#0;#1}))')
    Assign(c, (0, 1, 2))
    checkAst('(= !c1 (c {#0;#1;#2}))')
    Assign(c, (a[0] + b[1]))
    checkAst('(= !c1 (+ ([ $a1 #0 #0) ([ $b1 #1 #0)))')
    Assign(c[0], (a[0] + b[1]))
    checkAst('(= ([ $c1 #0 #0) (+ ([ $a1 #0 #0) ([ $b1 #1 #0)))')
    for k in Xbase.keyWriteHistoryList:
        print k
    h2o.check_sandbox_for_errors()
