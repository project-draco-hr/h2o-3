{
  HeartBeat hb=h2o._heartbeat;
  this.h2o=h2o.toString();
  ip_port=h2o.getIpPortString();
  healthy=(System.currentTimeMillis() - h2o._last_heard_from) < HeartBeatThread.TIMEOUT;
  last_ping=h2o._last_heard_from;
  sys_load=hb._system_load_average;
  gflops=hb._gflops;
  mem_bw=hb._membw;
  mem_value_size=hb.get_kv_mem();
  pojo_mem=hb.get_pojo_mem();
  free_mem=hb.get_free_mem();
  swap_mem=hb.get_swap_mem();
  max_mem=pojo_mem + free_mem + mem_value_size;
  num_keys=hb._keys;
  free_disk=hb.get_free_disk();
  max_disk=hb.get_max_disk();
  rpcs_active=hb._rpcs;
  fjthrds=hb._fjthrds;
  fjqueue=hb._fjqueue;
  tcps_active=hb._tcps_active;
  open_fds=hb._process_num_open_fds;
  num_cpus=hb._num_cpus;
  cpus_allowed=hb._cpus_allowed;
  nthreads=hb._nthreads;
  pid=hb._pid;
  my_cpu_pct=-1;
  sys_cpu_pct=-1;
  if (!skip_ticks) {
    LastTicksEntry lte=ticksHashMap.get(h2o.toString());
    if (lte != null) {
      long system_total_ticks_delta=hb._system_total_ticks - lte._system_total_ticks;
      if (system_total_ticks_delta > 0) {
        long system_idle_ticks_delta=hb._system_idle_ticks - lte._system_idle_ticks;
        double sys_cpu_frac_double=1 - ((double)(system_idle_ticks_delta) / (double)system_total_ticks_delta);
        if (sys_cpu_frac_double < 0)         sys_cpu_frac_double=0;
 else         if (sys_cpu_frac_double > 1)         sys_cpu_frac_double=1;
        sys_cpu_pct=(int)(sys_cpu_frac_double * 100);
        long process_total_ticks_delta=hb._process_total_ticks - lte._process_total_ticks;
        double process_cpu_frac_double=((double)(process_total_ticks_delta) / (double)system_total_ticks_delta);
        if (process_cpu_frac_double < 0)         process_cpu_frac_double=0;
 else         if (process_cpu_frac_double > 1)         process_cpu_frac_double=1;
        my_cpu_pct=(int)(process_cpu_frac_double * 100);
      }
    }
    LastTicksEntry newLte=new LastTicksEntry(hb);
    ticksHashMap.put(h2o.toString(),newLte);
  }
}
