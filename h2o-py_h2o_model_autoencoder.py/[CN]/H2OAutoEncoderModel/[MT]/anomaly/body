def anomaly(self, test_data, per_feature=False):
    'Obtain the reconstruction error for the input test_data.\n\n    Parameters\n    ----------\n      test_data : H2OFrame\n        The dataset upon which the reconstruction error is computed.\n      per_feature : bool\n        Whether to return the square reconstruction error per feature. Otherwise, return\n        the mean square error.\n\n    Returns\n    -------\n      Return the reconstruction error.\n    '
    if (not test_data):
        raise ValueError('Must specify test data')
    j = H2OConnection.post_json(((('Predictions/models/' + self.model_id) + '/frames/') + test_data.frame_id), reconstruction_error=True, reconstruction_error_per_feature=per_feature)
    return h2o.get_frame(j['model_metrics'][0]['predictions']['frame_id']['name'])
