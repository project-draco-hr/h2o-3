def test_glm_params():
    H2OGeneralizedLinearEstimator()
    H2OGeneralizedLinearEstimator(nfolds=5, seed=1000, alpha=0.5)
    df = h2o.H2OFrame.from_python({u'response': [1, 2, 3, 4, 5], u'a': [0, 1, 0, 1, 0], u'b': [(-1), 3, 7, 11, 20], u'n': ([0] * 5), u'w': ([1] * 5), })
    model = H2OGeneralizedLinearEstimator()
    model.training_frame = df
    model.validation_frame = df
    model.nfolds = 3
    model.keep_cross_validation_predictions = True
    model.keep_cross_validation_fold_assignment = True
    model.fold_assignment = u'random'
    model.fold_column = u'b'
    model.response_column = u'response'
    model.ignored_columns = [u'x', u'y']
    model.ignore_const_cols = True
    model.score_each_iteration = True
    model.offset_column = u'n'
    model.weights_column = u'w'
    model.family = u'MultiNomial'
    model.family = u'GAUSSIAN'
    model.family = u'Twee-die'
    model.family = u"'poIssoN'"
    model.tweedie_variance_power = 1
    model.tweedie_link_power = 2
    model.solver = u'CoordinateDescentNaive'
    try:
        model.fold_assignment = u'pseudo-random'
        assert False
    except H2OTypeError:
        pass
    try:
        model.ignored_columns = u'c'
        assert False
    except H2OTypeError:
        pass
