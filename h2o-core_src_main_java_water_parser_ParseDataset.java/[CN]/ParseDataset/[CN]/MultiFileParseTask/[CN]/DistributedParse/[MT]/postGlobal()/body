{
  super.postGlobal();
  _outerMFPT._dout[_outerMFPT._lo]=_dout;
  if (_dout.hasErrors()) {
    ParseWriter.ParseErr[] errs=_dout.removeErrors();
    for (    ParseWriter.ParseErr err : errs)     err._file=FileVec.getPathForKey(_srckey).toString();
    Arrays.sort(errs,new Comparator<ParseWriter.ParseErr>(){
      @Override public int compare(      ParseWriter.ParseErr o1,      ParseWriter.ParseErr o2){
        return (int)(o1._byteOffset - o2._byteOffset);
      }
    }
);
    _outerMFPT._errors=errs;
  }
  _dout=null;
  Value val=DKV.get(_srckey);
  if (val == null)   return;
  Iced ice=val.get();
  if (ice instanceof ByteVec) {
    if (_outerMFPT._deleteOnDone)     ((ByteVec)ice).remove();
  }
 else {
    Frame fr=(Frame)ice;
    if (_outerMFPT._deleteOnDone)     fr.delete(_outerMFPT._jobKey,new Futures()).blockForPending();
 else     if (fr._key != null)     fr.unlock(_outerMFPT._jobKey);
  }
}
