def test_parse_syn_gz_cat(self):
    SYNDATASETS_DIR = h2o.make_syn_dir()
    tryList = [(100, 100, 'cF', 600), (100, 5000, 'cF', 600), (100, 10000, 'cF', 600), (100, 20000, 'cF', 600), (100, 40000, 'cF', 600)]
    for (rowCount, colCount, hex_key, timeoutSecs) in tryList:
        SEEDPERFILE = random.randint(0, sys.maxint)
        csvFilename = (((((('syn_' + str(SEEDPERFILE)) + '_') + str(rowCount)) + 'x') + str(colCount)) + '.csv')
        csvPathname = ((SYNDATASETS_DIR + '/') + csvFilename)
        print 'Creating random', csvPathname
        write_syn_dataset(csvPathname, rowCount, colCount, SEEDPERFILE)
        csvFilenamegz = (csvFilename + '.gz')
        csvPathnamegz = ((SYNDATASETS_DIR + '/') + csvFilenamegz)
        h2o_util.file_gzip(csvPathname, csvPathnamegz)
        parseResult = h2i.import_parse(path=csvPathnamegz, schema='put', hex_key=hex_key, timeoutSecs=timeoutSecs, doSummary=DOSUMMARY)
        pA = h2o_cmd.ParseObj(parseResult, expectedNumRows=rowCount, expectedNumCols=colCount)
        print pA.numRows
        print pA.numCols
        print pA.parse_key
        iA = h2o_cmd.InspectObj(pA.parse_key, expectedNumRows=rowCount, expectedNumCols=colCount, expectedMissinglist=[])
