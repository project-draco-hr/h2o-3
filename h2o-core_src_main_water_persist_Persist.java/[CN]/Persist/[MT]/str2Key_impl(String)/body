{
  String key=s;
  byte[] kb=new byte[(key.length() - 1) / 2];
  int i=0, j=0;
  if ((key.length() > 2) && (key.charAt(0) == '%') && (key.charAt(1) >= '0')&& (key.charAt(1) <= '9')) {
    for (i=1; i < key.length(); i+=2) {
      if (key.charAt(i) == '%')       break;
      char b0=(char)(key.charAt(i + 0) - '0');
      if (b0 > 9)       b0+='0' + 10 - 'A';
      char b1=(char)(key.charAt(i + 1) - '0');
      if (b1 > 9)       b1+='0' + 10 - 'A';
      kb[j++]=(byte)((b0 << 4) | b1);
    }
    i++;
  }
  for (; i < key.length(); ++i) {
    byte b=(byte)key.charAt(i);
    if (b == '%') {
switch (key.charAt(++i)) {
case '%':
        b='%';
      break;
case 'c':
    b=':';
  break;
case 'd':
b='.';
break;
case 'g':
b='>';
break;
case 'q':
b='"';
break;
case 's':
b='/';
break;
case 'b':
b='\\';
break;
case 'z':
b='\0';
break;
default :
Log.warn("Invalid format of filename " + s + " at index "+ i);
}
}
if (j >= kb.length) kb=Arrays.copyOf(kb,Math.max(2,j * 2));
kb[j++]=b;
}
return Key.make(Arrays.copyOf(kb,j));
}
