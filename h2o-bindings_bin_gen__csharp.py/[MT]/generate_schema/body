def generate_schema(class_name, schema):
    u'\n    Generate C# declaration file for a schema.\n    '
    has_map = False
    for field in schema[u'fields']:
        if field[u'type'].startswith(u'Map'):
            has_map = True
    superclass = schema[u'superclass']
    if (superclass == u'Iced'):
        superclass = u'Object'
    yield u'/**'
    yield u' * This file is auto-generated by h2o-3/h2o-bindings/bin/gen_csharp.py'
    yield u' * Copyright 2016 H2O.ai;  Apache License Version 2.0 (see LICENSE for details)'
    yield u' */'
    yield u'namespace ai.h2o'
    yield u'{'
    yield u'  using System;'
    yield (u'  using System.Collections.Generic;' if has_map else None)
    yield u''
    yield u'  public class {name}: {super} {{'.format(name=class_name, super=superclass)
    for field in schema[u'fields']:
        if (field[u'name'] == u'__meta'):
            continue
        csharp_type = translate_type(field[u'type'], field[u'schema_name'])
        yield u'    /// <summary>'
        yield bi.wrap(field[u'help'], u'    ///   ')
        yield u'    /// </summary>'
        yield u'    public {type} {name} {{ get; set; }}'.format(type=csharp_type, name=field[u'name'])
        yield u''
    yield u'  }'
    yield u'}'
