def test1_glm_and_theory(self):
    '\n        This test is used to test the p-value/linear intercept weight calculation of our GLM\n        when family is set to Gaussian.  Since theoretical values are available, we will compare\n        our GLM output with the theoretical outputs.  This will provide assurance that our GLM\n        is implemented correctly.\n        '
    print('*******************************************************************************************')
    print('Test1: compares the linear regression weights/p-values computed from theory and H2O GLM.')
    try:
        (self.test1_weight_theory, self.test1_p_values_theory, self.test1_mse_train_theory, self.test1_mse_test_theory) = self.theoretical_glm(self.training_data_file, self.test_data_file, False, False)
    except:
        print('problems with lin-alg.  Got bad data set.')
        sys.exit(0)
    model_h2o = H2OGeneralizedLinearEstimator(family=self.family, Lambda=0, compute_p_values=True, standardize=False)
    model_h2o.train(x=self.x_indices, y=self.y_index, training_frame=self.training_data)
    h2o_model_test_metrics = model_h2o.model_performance(test_data=self.test_data)
    num_test_failed = self.test_failed
    (self.test1_weight, self.test1_p_values, self.test1_mse_train, self.test1_r2_train, self.test1_mse_test, self.test1_r2_test, self.test_failed) = pyunit_utils.extract_comparison_attributes_and_print(model_h2o, h2o_model_test_metrics, '\nTest1 Done!', True, True, True, self.test1_weight_theory, self.test1_p_values_theory, self.test1_mse_train_theory, self.test1_mse_test_theory, 'Comparing intercept and weights ....', 'H2O intercept and weights: ', 'Theoretical intercept and weights: ', 'Intercept and weights are not equal!', 'Intercept and weights are close enough!', 'Comparing p-values ....', 'H2O p-values: ', 'Theoretical p-values: ', 'P-values are not equal!', 'P-values are close enough!', 'Comparing training MSEs ....', 'H2O training MSE: ', 'Theoretical training MSE: ', 'Training MSEs are not equal!', 'Training MSEs are close enough!', 'Comparing test MSEs ....', 'H2O test MSE: ', 'Theoretical test MSE: ', 'Test MSEs are not equal!', 'Test MSEs are close enough!', self.test_failed, self.ignored_eps, self.allowed_diff, self.noise_var, False)
    self.test_failed_array[self.test_num] += pyunit_utils.show_test_results('test1_glm_and_theory', num_test_failed, self.test_failed)
    self.test_num += 1
