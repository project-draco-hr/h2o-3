def test4_glm_remove_collinear_columns(self):
    '\n        With the best parameters obtained from test 3 grid search, we will trained GLM\n        with duplicated columns and enable remove_collinear_columns and see if the\n        algorithm catches the duplicated columns.  We will compare the results with test\n        1 results.\n        '
    print('*******************************************************************************************')
    print('Test4: test the GLM remove_collinear_columns.')
    training_data = h2o.import_file(pyunit_utils.locate(self.training_data_file_duplicate))
    test_data = h2o.import_file(pyunit_utils.locate(self.test_data_file_duplicate))
    y_index = (training_data.ncol - 1)
    x_indices = list(range(y_index))
    model_h2o = H2OGeneralizedLinearEstimator(family=self.family, Lambda=self.best_lambda, alpha=self.best_alpha, solver=self.best_solver, remove_collinear_columns=True)
    model_h2o.train(x=x_indices, y=y_index, training_frame=training_data)
    model_h2o_metrics = model_h2o.model_performance(test_data=test_data)
    num_test_failed = self.test_failed
    (_, _, _, _, _, _, self.test_failed) = pyunit_utils.extract_comparison_attributes_and_print(model_h2o, model_h2o_metrics, '\nTest4 Done!', False, False, False, self.test1_weight, None, self.test1_mse_train, self.test1_mse_test, 'Comparing intercept and weights ....', 'H2O remove_collinear_columns intercept and weights: ', 'H2O test1 template intercept and weights: ', 'Intercept and weights are not equal!', 'Intercept and weights are close enough!', '', '', '', '', '', 'Comparing training MSEs ....', 'H2O remove_collinear_columns training MSE: ', 'H2O Test1 template training MSE: ', 'Training MSEs are not equal!', 'Training MSEs are close enough!', 'Comparing test MSEs ....', 'H2O remove_collinear_columns test MSE: ', 'H2O Test1 template test MSE: ', 'Test MSEs are not equal!', 'Test MSEs are close enough!', self.test_failed, self.ignored_eps, self.allowed_diff, self.noise_var, False)
    self.test_failed_array[self.test_num] += pyunit_utils.show_test_results('test4_glm_remove_collinear_columns', num_test_failed, self.test_failed)
    self.test_num += 1
