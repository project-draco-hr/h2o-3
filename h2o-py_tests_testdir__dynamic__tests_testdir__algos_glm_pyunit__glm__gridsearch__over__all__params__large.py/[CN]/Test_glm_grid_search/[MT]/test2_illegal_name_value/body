def test2_illegal_name_value(self):
    '\n        This function will make sure that only valid parameter names and values should be included in the\n        hyper-parameter dict for grid search.  It will randomly go into the hyper_parameters that we have\n        specified, either change the hyper_parameter name or insert an illegal value into the hyper_parameter\n        list, check to make sure that the test failed with error messages.\n\n        The following error conditions will be created depending on the error_number generated:\n\n        error_number = 0: randomly alter the name of a hyper-parameter name;\n        error_number = 1: randomly choose a hyper-parameter and remove all elements in its list\n        error_number = 2: add randomly generated new hyper-parameter names with random list\n        error_number other: randomly choose a hyper-parameter and insert an illegal type into it\n\n        :return: None\n        '
    print('*******************************************************************************************')
    print(('test2_illegal_name_value for GLM ' + self.family))
    h2o.cluster_info()
    error_number = np.random.random_integers(0, 3, 1)
    error_hyper_params = pyunit_utils.insert_error_grid_search(self.hyper_params, self.gridable_parameters, self.gridable_types, error_number[0])
    print('test2_illegal_name_value: the bad hyper-parameters are: ')
    print(error_hyper_params)
    try:
        grid_model = H2OGridSearch(H2OGeneralizedLinearEstimator(family=self.family, nfolds=self.nfolds), hyper_params=error_hyper_params)
        grid_model.train(x=self.x_indices, y=self.y_index, training_frame=self.training1_data)
        if (error_number[0] > 2):
            if (not (len(grid_model) == self.correct_model_number)):
                self.test_failed += 1
                self.test_failed_array[self.test_num] = 1
                print('test2_illegal_name_value failed. Number of model generated is incorrect.')
            else:
                print('test2_illegal_name_value passed.')
        else:
            self.test_failed += 1
            self.test_failed_array[self.test_num] = 1
            print('test2_illegal_name_value failed: exception should have been thrown for illegalparameter name or empty hyper-parameter parameter list but did not!')
    except:
        print('test2_illegal_name_value passed: exception is thrown for illegal parameter name or emptyhyper-parameter parameter list.')
    self.test_num += 1
