{
  if (_c_len > 1) {
    _cm=new long[_c_len + 1][_c_len + 1];
    int len=Math.min(ca._len,cp._len);
    for (int i=0; i < len; i++) {
      int a=ca.isNA0(i) ? _c_len : (int)ca.at80(i);
      int p=cp.isNA0(i) ? _c_len : (int)cp.at80(i);
      _cm[a][p]++;
    }
    if (len < ca._len)     for (int i=len; i < ca._len; i++)     _cm[ca.isNA0(i) ? _c_len : (int)ca.at80(i)][_c_len]++;
    if (len < cp._len)     for (int i=len; i < cp._len; i++)     _cm[_c_len][cp.isNA0(i) ? _c_len : (int)cp.at80(i)]++;
  }
 else {
    _cm=null;
    _mse=0;
    assert(ca._len == cp._len);
    int len=ca._len;
    for (int i=0; i < len; i++) {
      if (ca.isNA0(i) || cp.isNA0(i))       continue;
      final double a=ca.at0(i);
      final double p=cp.at0(i);
      _mse+=(p - a) * (p - a);
      _count++;
    }
  }
}
