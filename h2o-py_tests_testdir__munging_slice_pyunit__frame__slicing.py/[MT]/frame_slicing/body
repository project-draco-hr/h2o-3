def frame_slicing(ip, port):
    h2o.init(ip, port)
    iris = h2o.import_frame(path=h2o.locate('smalldata/iris/iris_wheader.csv'))
    prostate = h2o.import_frame(path=h2o.locate('smalldata/prostate/prostate.csv.zip'))
    airlines = h2o.import_frame(path=h2o.locate('smalldata/airlines/allyears2k.zip'))
    iris.show()
    prostate.show()
    airlines.show()
    res1 = h2o.as_list(iris[0])
    assert (abs((res1[8][0] - 4.4)) < 1e-10), 'incorrect values'
    res2 = h2o.as_list(prostate[(13, 3)])
    assert (abs((res2[0][0] - 1)) < 1e-10), 'incorrect values'
    res3 = h2o.as_list(airlines[12, 0:3])
    assert ((abs((res3[0][0] - 1987)) < 1e-10) and (abs((res3[0][1] - 10)) < 1e-10) and (abs((res3[0][2] - 29)) < 1e-10)), 'incorrect values'
    res4 = h2o.as_list(iris[5:8, 1])
    assert ((abs((res4[0][0] - 3.9)) < 1e-10) and (abs((res4[1][0] - 3.4)) < 1e-10) and (abs((res4[2][0] - 3.4)) < 1e-10) and (abs((res4[3][0] - 2.9)) < 1e-10)), 'incorrect values'
    res5 = h2o.as_list(prostate[5:8, 0:3])
    assert ((abs((res5[0][0] - 6)) < 1e-10) and (abs((res5[1][1] - 0)) < 1e-10) and (abs((res5[2][2] - 61)) < 1e-10)), 'incorrect values'
