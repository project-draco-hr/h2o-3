{
  boolean isTestSuccessfully=false;
  Frame trainFrame=null;
  Frame score=null;
  ModelMetrics modelMetrics=null;
  DRF drfJob=null;
  DRFModel drfModel=null;
  Key modelKey=Key.make("model");
  GLM glmJob=null;
  GLMModel glmModel=null;
  HashMap<String,Double> coef=null;
  GBM gbmJob=null;
  GBMModel gbmModel=null;
  trainFrame=parameter._train.get();
  try {
    Scope.enter();
switch (algorithm) {
case FunctionUtils.drf:
      System.out.println("Build model");
    drfJob=new DRF((DRFModel.DRFParameters)parameter);
  System.out.println("Train model:");
drfModel=drfJob.trainModel().get();
System.out.println("Predict testcase");
score=drfModel.score(trainFrame);
modelMetrics=drfModel._output._training_metrics;
break;
case FunctionUtils.glm:
System.out.println("Build model");
glmJob=new GLM(modelKey,"basic glm test",(GLMParameters)parameter);
System.out.println("Train model");
glmModel=glmJob.trainModel().get();
coef=glmModel.coefficients();
System.out.println("Predict testcase ");
score=glmModel.score(trainFrame);
modelMetrics=glmModel._output._training_metrics;
break;
case FunctionUtils.gbm:
System.out.println("Build model ");
gbmJob=new GBM((GBMParameters)parameter);
System.out.println("Train model");
gbmModel=gbmJob.trainModel().get();
System.out.println("Predict testcase ");
score=gbmModel.score(trainFrame);
modelMetrics=gbmModel._output._training_metrics;
break;
}
isTestSuccessfully=true;
if (!isNegativeTestcase) {
System.out.println("Testcase passed.");
System.out.println("MSE: " + modelMetrics._MSE);
if (modelMetrics.auc() != null) {
System.out.println("AUC: " + modelMetrics.auc()._auc);
MySQL.save(String.valueOf(modelMetrics._MSE),String.valueOf(modelMetrics.auc()._auc),rawInput);
}
 else {
System.out.println("AUC: NA");
MySQL.save(String.valueOf(modelMetrics._MSE),"",rawInput);
}
}
}
 catch (Exception ex) {
System.out.println("Testcase failed");
ex.printStackTrace();
if (!isNegativeTestcase) {
Assert.fail("Testcase failed",ex);
}
 else {
System.out.println("This is negative testcase");
}
}
catch (AssertionError ae) {
System.out.println("Testcase failed");
ae.printStackTrace();
if (!isNegativeTestcase) {
Assert.fail("Testcase failed",ae);
}
 else {
System.out.println("This is negative testcase");
}
}
 finally {
if (drfJob != null) {
drfJob.remove();
}
if (drfModel != null) {
drfModel.delete();
}
if (glmJob != null) {
glmJob.remove();
}
if (glmModel != null) {
glmModel.delete();
}
if (gbmJob != null) {
gbmJob.remove();
}
if (gbmModel != null) {
gbmModel.delete();
}
if (score != null) {
score.remove();
score.delete();
}
Scope.exit();
}
if (isNegativeTestcase && isTestSuccessfully) {
System.out.println("It is negative testcase");
Assert.fail("It is negative testcase");
}
}
