{
  String testcaseStatus="passed";
  Frame trainFrame=null;
  Frame score=null;
  DRF drfJob=null;
  DRFModel drfModel=null;
  ModelMetrics modelMetrics=null;
  Key modelKey=Key.make("model");
  GLM glmJob=null;
  GLMModel glmModel=null;
  HashMap<String,Double> coef=null;
  GBM gbmJob=null;
  GBMModel gbmModel=null;
  trainFrame=parameter._train.get();
  try {
    Scope.enter();
switch (algorithm) {
case FunctionUtils.drf:
      Reporter.log("Build model",true);
    drfJob=new DRF((DRFModel.DRFParameters)parameter);
  Reporter.log("Train model:",true);
drfModel=drfJob.trainModel().get();
Reporter.log("Predict testcase",true);
score=drfModel.score(trainFrame);
modelMetrics=drfModel._output._training_metrics;
break;
case FunctionUtils.glm:
Reporter.log("Build model",true);
glmJob=new GLM(modelKey,"basic glm test",(GLMParameters)parameter);
Reporter.log("Train model",true);
glmModel=glmJob.trainModel().get();
coef=glmModel.coefficients();
Reporter.log("Predict testcase",true);
score=glmModel.score(trainFrame);
modelMetrics=glmModel._output._training_metrics;
break;
case FunctionUtils.gbm:
Reporter.log("Build model",true);
gbmJob=new GBM((GBMParameters)parameter);
Reporter.log("Train model",true);
gbmModel=gbmJob.trainModel().get();
Reporter.log("Predict testcase",true);
score=gbmModel.score(trainFrame);
modelMetrics=gbmModel._output._training_metrics;
break;
}
if (isNegativeTestcase) {
testcaseStatus="failed";
Reporter.log("It is negative testcase",true);
Assert.fail("It is negative testcase");
}
 else {
Reporter.log("Testcase is passed.");
Reporter.log("MSE: " + modelMetrics._MSE);
if (modelMetrics.auc() != null) {
Reporter.log("AUC: " + modelMetrics.auc()._auc);
}
 else {
Reporter.log("AUC: NA");
}
}
}
 catch (Exception ex) {
Reporter.log("Testcase is failed");
Reporter.log(ExceptionUtils.getStackTrace(ex));
if (!isNegativeTestcase) {
testcaseStatus="failed";
Assert.fail("Testcase is failed",ex);
}
 else {
Reporter.log("This is negative testcase");
}
}
catch (AssertionError ae) {
Reporter.log("Testcase is failed");
Reporter.log(ExceptionUtils.getStackTrace(ae));
if (!isNegativeTestcase) {
testcaseStatus="failed";
Assert.fail("Testcase is failed",ae);
}
 else {
Reporter.log("This is negative testcase");
}
}
 finally {
Reporter.log("Testcase is " + testcaseStatus,true);
if (drfJob != null) {
drfJob.remove();
}
if (drfModel != null) {
drfModel.delete();
}
if (glmJob != null) {
glmJob.remove();
}
if (glmModel != null) {
glmModel.delete();
}
if (gbmJob != null) {
gbmJob.remove();
}
if (gbmModel != null) {
gbmModel.delete();
}
if (score != null) {
score.remove();
score.delete();
}
Scope.exit();
}
}
