{
  Frame betaConstraints=null;
  boolean isBetaConstraints=Param.parseBoolean(rawInput.get("betaConstraints"));
  String lowerBound=rawInput.get("lowerBound");
  String upperBound=rawInput.get("upperBound");
  if (!isBetaConstraints) {
    return null;
  }
  String betaConstraintsString="names, lower_bounds, upper_bounds\n";
  List<String> predictorNames=Arrays.asList(trainFrame._names);
  for (  String name : predictorNames) {
    if (!name.equals(responseColumn) && !trainFrame.vec(name).isConst()) {
      if (trainFrame.vec(name).isCategorical()) {
        for (        String level : trainFrame.vec(name).domain()) {
          betaConstraintsString+=String.format("%s.%s,%s,%s\n",name,level,lowerBound,upperBound);
        }
      }
 else {
        betaConstraintsString+=String.format("%s,%s,%s\n",name,lowerBound,upperBound);
      }
    }
  }
  Key betaConsKey=Key.make("beta_constraints");
  FVecTest.makeByteVec(betaConsKey,betaConstraintsString);
  betaConstraints=ParseDataset.parse(Key.make("beta_constraints.hex"),betaConsKey);
  return betaConstraints;
}
