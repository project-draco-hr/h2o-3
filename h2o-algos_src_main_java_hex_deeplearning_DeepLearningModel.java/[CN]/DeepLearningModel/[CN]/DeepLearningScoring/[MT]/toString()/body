{
  StringBuilder sb=new StringBuilder();
  sb.append("Training MSE: " + scored_train._mse + "\n");
  sb.append("Training R^2: " + scored_train._r2 + "\n");
  if (classification) {
    sb.append("Training LogLoss: " + scored_train._logloss + "\n");
    sb.append("Training " + train_confusion_matrix.table().toString(1));
    sb.append("Training Misclassification" + (training_AUC != null ? " [using threshold for " + AUC2.DEFAULT_CM.toString().replace("_"," ") + "]: " : ": ") + String.format("%.2f",100 * scored_train._classError)+ "%");
    if (training_AUC != null)     sb.append(", AUC: " + String.format("%.4f",100 * training_AUC._auc) + "%");
  }
  if (validation || num_folds > 0) {
    if (num_folds > 0) {
      sb.append("\nDoing " + num_folds + "-fold cross-validation:");
    }
    sb.append("\nValidation MSE: " + scored_valid._mse + "\n");
    sb.append("Validation R^2: " + scored_valid._r2 + "\n");
    if (classification) {
      sb.append("Validation LogLoss: " + scored_valid._logloss + "\n");
      sb.append("Validation " + valid_confusion_matrix.table().toString(1));
      sb.append("Validation Misclassification" + (validation_AUC != null ? " [using threshold for " + AUC2.DEFAULT_CM.toString().replace("_"," ") + "]: " : ": ") + String.format("%.2f",(100 * scored_valid._classError))+ "%");
      if (validation_AUC != null)       sb.append(", AUC: " + String.format("%.4f",100 * validation_AUC._auc) + "%");
    }
  }
  sb.append("\n");
  return sb.toString();
}
