{
  super(destKey,dataInfo._adaptedFrame.names(),dataInfo._adaptedFrame.domains(),cp._parms,new DeepLearningOutput(),cp._priorClassDist != null ? cp._priorClassDist.clone() : null);
  final boolean store_best_model=(jobKey == null);
  if (store_best_model) {
    model_info=cp.model_info.deep_clone();
    model_info.data_info=dataInfo.deep_clone();
    _modelClassDist=cp._modelClassDist != null ? cp._modelClassDist.clone() : null;
  }
 else {
    model_info=(DeepLearningModelInfo)cp.model_info.clone();
    model_info.data_info=dataInfo;
    get_params()._checkpoint=cp._key;
  }
  actual_best_model_key=cp.actual_best_model_key;
  start_time=cp.start_time;
  run_time=cp.run_time;
  training_rows=cp.training_rows;
  validation_rows=cp.validation_rows;
  _bestError=cp._bestError;
  errors=cp.errors.clone();
  for (int i=0; i < errors.length; ++i)   errors[i]=cp.errors[i].deep_clone();
  _timeLastScoreEnter=System.currentTimeMillis();
  _timeLastScoreStart=0;
  _timeLastScoreEnd=0;
  _timeLastPrintStart=0;
  assert(Arrays.equals(_key._kb,destKey._kb));
}
