{
  assert(model_info().get_params()._autoencoder);
  if (model_info().isUnstable()) {
    Log.err(unstable_msg);
    throw new UnsupportedOperationException(unstable_msg);
  }
  ((Neurons.Input)neurons[0]).setInput(-1,data);
  DeepLearningTask.step(-1,neurons,model_info,null,false,null,0);
  double[] in=neurons[0]._a.raw();
  double[] out=neurons[neurons.length - 1]._a.raw();
  assert(in.length == out.length);
  double l2=0;
  for (int i=0; i < in.length; ++i)   l2+=Math.pow((out[i] - in[i]),2);
  l2/=in.length;
  if (preds != null) {
    model_info().data_info().unScaleNumericals(out,out);
    System.arraycopy(out,0,preds,0,out.length);
  }
  return l2;
}
