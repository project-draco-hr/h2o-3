{
  Frame f=stk.track(asts[1].exec(env)).getFrame();
  if (f.numCols() != 1)   throw new IllegalArgumentException("Must give a single numeric column.");
  if (!f.anyVec().isNumeric())   throw new IllegalArgumentException("Column must be numeric.");
  CumuTask t=new CumuTask(f.anyVec().nChunks(),init());
  t.doAll(1,f.anyVec());
  final double[] chkCumu=t._chkCumu;
  Vec cumuVec=t.outputFrame().anyVec();
  new MRTask(){
    @Override public void map(    Chunk c){
      if (c.cidx() != 0) {
        double d=chkCumu[c.cidx() - 1];
        for (int i=0; i < c._len; ++i)         c.set(i,op(c.atd(i),d));
      }
    }
  }
.doAll(cumuVec);
  return new ValFrame(new Frame(cumuVec));
}
