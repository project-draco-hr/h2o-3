def _h2o_exists_and_healthy(self, ip, port):
    '\n        check if connection to h2o exists, and that h2o is healthy.\n        '
    global __H2O_REST_API_VERSION__
    h2o_okay = False
    try:
        http = requests.get('http://{}:{}/{}/{}'.format(ip, port, __H2O_REST_API_VERSION__, 'Cloud?skip_ticks=true'))
        h2o_okay = http.json()['cloud_healthy']
    except exceptions.ConnectionError:
        pass
    if (not h2o_okay):
        self._remove_cloud(ip, port)
    return h2o_okay
