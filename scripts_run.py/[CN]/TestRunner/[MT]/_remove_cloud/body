def _remove_cloud(self, ip, port):
    "\n        add the ip, port to TestRunner's bad cloud list. remove the bad cloud from the TestRunner's cloud list.\n        terminate TestRunner if no good clouds remain.\n        "
    if (not ([ip, str(port)] in self.bad_clouds)):
        self.bad_clouds.append([ip, str(port)])
    cidx = 0
    found_cloud = False
    for cloud in self.clouds:
        if ((cloud.get_ip() == ip) and (cloud.get_port() == str(port))):
            found_cloud = True
            break
        cidx = (cidx + 1)
    if found_cloud:
        self.clouds.pop(cidx)
    if (len(self.clouds) == 0):
        self._log('NO GOOD CLOUDS REMAINING...')
        self.terminate()
