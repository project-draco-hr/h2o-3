def report_summary(self, nopass):
    '\n        Report some summary information when the tests have finished running.\n\n        @return: none\n        '
    passed = 0
    skipped = 0
    skipped_list = []
    nopass_but_tolerate = 0
    nofeature_but_tolerate = 0
    failed = 0
    notrun = 0
    total = 0
    h2o_internal_failed = 0
    true_fail_list = []
    terminated_list = []
    for test in self.tests:
        if test.get_passed():
            passed += 1
        elif test.get_skipped():
            skipped += 1
            skipped_list += [test.test_name]
        else:
            if test.get_h2o_internal():
                h2o_internal_failed += 1
            if test.get_nopass(nopass):
                nopass_but_tolerate += 1
            if test.get_nofeature(nopass):
                nofeature_but_tolerate += 1
            if test.get_completed():
                failed += 1
                if ((not test.get_nopass(nopass)) and (not test.get_nofeature(nopass))):
                    true_fail_list.append(test.get_test_name())
            else:
                notrun += 1
            if test.get_terminated():
                terminated_list.append(test.get_test_name())
        total += 1
    if (((passed + nopass_but_tolerate) + nofeature_but_tolerate) == total):
        self.regression_passed = True
    else:
        self.regression_passed = False
    end_seconds = time.time()
    delta_seconds = (end_seconds - self.start_seconds)
    run = (total - notrun)
    self._log('')
    self._log('----------------------------------------------------------------------')
    self._log('')
    self._log('SUMMARY OF RESULTS')
    self._log('')
    self._log('----------------------------------------------------------------------')
    self._log('')
    self._log(('Total tests:               ' + str(total)))
    self._log(('Passed:                    ' + str(passed)))
    self._log(('Did not pass:              ' + str(failed)))
    self._log(('Did not complete:          ' + str(notrun)))
    if (skipped > 0):
        self._log(('SKIPPED tests:             ' + str(skipped)))
    self._log(('H2O INTERNAL tests:        ' + str(self.h2o_internal_counter)))
    self._log(('H2O INTERNAL failures:     ' + str(h2o_internal_failed)))
    self._log(('NOPASS tests (not run):    ' + str(self.nopass_counter)))
    self._log(('NOFEATURE tests (not run): ' + str(self.nofeature_counter)))
    self._log('')
    if (skipped > 0):
        self._log(('SKIPPED list:          ' + ', '.join([t for t in skipped_list])))
    self._log(('Total time:              %.2f sec' % delta_seconds))
    if (run > 0):
        self._log(('Time/completed test:     %.2f sec' % (delta_seconds / run)))
    else:
        self._log('Time/completed test:     N/A')
    self._log('')
    if (len(true_fail_list) > 0):
        self._log(('True fail list:          ' + ', '.join(true_fail_list)))
    if (len(terminated_list) > 0):
        self._log(('Terminated list:         ' + ', '.join(terminated_list)))
    if (len(self.bad_clouds) > 0):
        self._log(('Bad cloud list:          ' + ', '.join(['{0}:{1}'.format(bc[0], bc[1]) for bc in self.bad_clouds])))
