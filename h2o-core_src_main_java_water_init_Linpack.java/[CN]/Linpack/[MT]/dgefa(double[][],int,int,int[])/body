{
  double[] col_k, col_j;
  double t;
  int j, k, kp1, l, nm1;
  int info;
  info=0;
  nm1=n - 1;
  if (nm1 >= 0) {
    for (k=0; k < nm1; k++) {
      col_k=a[k];
      kp1=k + 1;
      l=idamax(n - k,col_k,k,1) + k;
      ipvt[k]=l;
      if (col_k[l] != 0) {
        if (l != k) {
          t=col_k[l];
          col_k[l]=col_k[k];
          col_k[k]=t;
        }
        t=-1.0 / col_k[k];
        dscal(n - (kp1),t,col_k,kp1,1);
        for (j=kp1; j < n; j++) {
          col_j=a[j];
          t=col_j[l];
          if (l != k) {
            col_j[l]=col_j[k];
            col_j[k]=t;
          }
          daxpy(n - (kp1),t,col_k,kp1,1,col_j,kp1,1);
        }
      }
 else {
        info=k;
      }
    }
  }
  ipvt[n - 1]=n - 1;
  if (a[(n - 1)][(n - 1)] == 0)   info=n - 1;
  return info;
}
