{
  if (null == o) {
    this.t=null;
    return;
  }
  this.is_array=o.getClass().isArray();
  if (is_array) {
    Class clz=o.getClass().getComponentType();
    if (clz == Byte.class) {
      t="Byte";
    }
 else     if (clz == Byte.TYPE) {
      t="B";
    }
 else     if (clz == Integer.class) {
      t="I";
      i_ar=ArrayUtils.toPrimitive((Integer[])o);
    }
 else     if (clz == Integer.TYPE) {
      t="I";
      i_ar=(int[])o;
    }
 else     if (clz == Long.class) {
      t="L";
      l_ar=ArrayUtils.toPrimitive((Long[])o);
    }
 else     if (clz == Long.TYPE) {
      t="L";
      l_ar=(long[])o;
    }
 else     if (clz == Float.class) {
      t="F";
      f_ar=ArrayUtils.toPrimitive((Float[])o);
    }
 else     if (clz == Float.TYPE) {
      t="F";
      f_ar=(float[])o;
    }
 else     if (clz == Double.class) {
      t="D";
      d_ar=ArrayUtils.toPrimitive((Double[])o);
    }
 else     if (clz == Double.TYPE) {
      t="D";
      d_ar=(double[])o;
    }
 else     if (clz == Boolean.class) {
      t="Bo";
    }
 else     if (clz == Boolean.TYPE) {
      t="Bo";
    }
 else     if (clz == String.class) {
      t="S";
      s_ar=(String[])o;
    }
 else     if (clz == Enum.class) {
      t="E";
      e_ar=(String[])o;
    }
 else     if (o instanceof KeyV3[]) {
      t="K";
      k_ar=(KeyV3[])o;
    }
 else     if (o instanceof Iced[]) {
      t="Iced";
      iced_ar=(Iced[])o;
    }
  }
 else {
    if (o instanceof Byte) {
      i=(byte)o;
      t="B";
    }
 else     if (o instanceof Integer) {
      i=(int)o;
      t="I";
    }
 else     if (o instanceof Long) {
      l=(long)o;
      t="L";
    }
 else     if (o instanceof Float) {
      f=(float)o;
      t="F";
    }
 else     if (o instanceof Double) {
      d=(double)o;
      t="D";
    }
 else     if (o instanceof Boolean) {
      b=(boolean)o;
      t="Bo";
    }
 else     if (o instanceof String) {
      s=(String)o;
      t="S";
    }
 else     if (o instanceof Enum) {
      e=((Enum)o).toString();
      t="E";
    }
 else     if (o instanceof KeyV3) {
      k=(KeyV3)o;
      t="K";
    }
  }
  if (null == t)   throw new H2OIllegalArgumentException("o","IcedWrapper",o);
}
