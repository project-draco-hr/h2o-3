{
  if (sigma != 0) {
    ConfusionMatrix cm=new ConfusionMatrix(_cm,_domain);
    float[] hr=new float[_K];
    double mse=Double.NaN;
    double logloss=Double.NaN;
    if (_count != 0) {
      if (_hits != null) {
        for (int i=0; i < hr.length; i++) {
          hr[i]=(float)_hits[i] / _count;
        }
        for (int i=1; i < hr.length; i++) {
          hr[i]+=hr[i - 1];
        }
        if (hr.length == _nclasses) {
          assert(Math.abs(hr[hr.length - 1] - 1) < 1e-4);
          hr[hr.length - 1]=1.0f;
        }
      }
      mse=_sumsqe / _count;
      logloss=_logloss / _count;
    }
    return m._output.addModelMetrics(new ModelMetricsMultinomial(m,f,cm,hr,logloss,sigma,mse));
  }
 else {
    return m._output.addModelMetrics(new ModelMetricsMultinomial(m,f,null,null,Double.NaN,Double.NaN,Double.NaN));
  }
}
