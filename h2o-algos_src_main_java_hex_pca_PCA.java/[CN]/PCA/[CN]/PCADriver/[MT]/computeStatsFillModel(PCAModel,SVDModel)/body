{
  String[] colTypes=new String[_parms._k];
  String[] colFormats=new String[_parms._k];
  String[] colHeaders=new String[_parms._k];
  Arrays.fill(colTypes,"double");
  Arrays.fill(colFormats,"%5f");
  for (int i=0; i < colHeaders.length; i++)   colHeaders[i]="PC" + String.valueOf(i + 1);
  pca._output._eigenvectors_raw=svd._output._v;
  pca._output._eigenvectors=new TwoDimTable("Rotation",null,_train.names(),colHeaders,colTypes,colFormats,"",new String[_train.numCols()][],svd._output._v);
  double[] sdev=new double[svd._output._d.length];
  double[] vars=new double[svd._output._d.length];
  double totVar=0;
  double dfcorr=1.0 / Math.sqrt(_train.numRows() - 1.0);
  for (int i=0; i < sdev.length; i++) {
    sdev[i]=dfcorr * svd._output._d[i];
    vars[i]=sdev[i] * sdev[i];
    totVar+=vars[i];
  }
  pca._output._std_deviation=sdev;
  double[] prop_var=new double[vars.length];
  double[] cum_var=new double[vars.length];
  for (int i=0; i < vars.length; i++) {
    prop_var[i]=vars[i] / totVar;
    cum_var[i]=i == 0 ? prop_var[0] : cum_var[i - 1] + prop_var[i];
  }
  pca._output._pc_importance=new TwoDimTable("Importance of components",null,new String[]{"Standard deviation","Proportion of Variance","Cumulative Proportion"},colHeaders,colTypes,colFormats,"",new String[3][],new double[][]{sdev,prop_var,cum_var});
  if (_parms._keep_loading)   pca._output._loading_key=svd._output._u_key;
  pca._output._normSub=svd._output._normSub;
  pca._output._normMul=svd._output._normMul;
  pca._output._permutation=svd._output._permutation;
  pca._output._nnums=svd._output._nnums;
  pca._output._ncats=svd._output._ncats;
  pca._output._catOffsets=svd._output._catOffsets;
}
