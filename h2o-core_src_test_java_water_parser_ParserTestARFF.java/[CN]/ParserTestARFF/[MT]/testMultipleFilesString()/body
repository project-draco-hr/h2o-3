{
  String data1="@RELATION type\n" + "\n" + "@ATTRIBUTE num STRING\n"+ "\n"+ "@DATA\n"+ "0\n"+ "1.324e-13\n"+ "-2\n";
  Key k1=ParserTest.makeByteVec(data1);
  Key k2=ParserTest.makeByteVec(data1);
  Key k3=ParserTest.makeByteVec(data1);
  Key[] k=new Key[]{k1,k2,k3};
  Frame fr=ParseDataset2.parse(Key.make(),k);
  Assert.assertTrue(fr.anyVec().isString());
  Assert.assertFalse(fr.anyVec().isEnum());
  Assert.assertFalse(fr.anyVec().isInt());
  ValueString vs=new ValueString();
  Assert.assertTrue(fr.anyVec().atStr(vs,0).toString().equals("0"));
  Assert.assertTrue(fr.anyVec().atStr(vs,1).toString().equals("1.324e-13"));
  Assert.assertTrue(fr.anyVec().atStr(vs,2).toString().equals("-2"));
  Assert.assertTrue(fr.anyVec().atStr(vs,3).toString().equals("0"));
  Assert.assertTrue(fr.anyVec().atStr(vs,4).toString().equals("1.324e-13"));
  Assert.assertTrue(fr.anyVec().atStr(vs,5).toString().equals("-2"));
  Assert.assertTrue(fr.anyVec().atStr(vs,6).toString().equals("0"));
  Assert.assertTrue(fr.anyVec().atStr(vs,7).toString().equals("1.324e-13"));
  Assert.assertTrue(fr.anyVec().atStr(vs,8).toString().equals("-2"));
  fr.delete();
}
