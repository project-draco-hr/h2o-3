def replace_with_encoded_bits(one_hot_matrix, enum_val, add_value, last_col_index):
    '\n    Generate encoded bits for a categorical data value using one hot encoding.\n\n    :param one_hot_matrix: matrix representing the encoding of categorical data value to 1-hot encoding\n    :param enum_val: categorical data value, could be np.nan\n    :param add_value: set to 1 if a reference value is needed in addition to 1-hot encoding\n    :param last_col_index: index into encoding for np.nan if exists\n\n    :return: vector representing the encoded values for a enum value\n    '
    if np.isnan(enum_val):
        return one_hot_matrix[last_col_index]
    else:
        return one_hot_matrix[int((enum_val - add_value))]
