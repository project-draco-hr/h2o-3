{
  double probsum=0;
  for (int c=1; c < scored.length; c++) {
    final double original_fraction=priorClassDist[c - 1];
    final double oversampled_fraction=modelClassDist[c - 1];
    assert(!Double.isNaN(scored[c]));
    if (original_fraction != 0 && oversampled_fraction != 0)     scored[c]*=original_fraction / oversampled_fraction;
    probsum+=scored[c];
  }
  if (probsum > 0)   for (int i=1; i < scored.length; ++i)   scored[i]/=probsum;
  return scored;
}
