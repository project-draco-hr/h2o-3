def test_parse_covtype(self):
    tryList = [('covtype.data', 1, 30), ('covtype20x.data', 20, 120)]
    for (csvFilename, multiplyExpected, timeoutSecs) in tryList:
        a_node = h2o.nodes[0]
        importFolderPath = os.path.expanduser('~/home-0xdiag-datasets/standard')
        csvPathname = ((importFolderPath + '/') + csvFilename)
        importResult = a_node.import_files(path=csvPathname)
        hex_key = importResult['destination_frames'][0]
        if CAUSE_FAIL:
            frames_result = a_node.frames(key=k, row_count=5, timeoutSecs=timeoutSecs)
        parseResult = a_node.parse(key=hex_key, timeoutSecs=timeoutSecs, chunk_size=(4194304 * 4))
        pA = h2o_cmd.ParseObj(parseResult)
        iA = h2o_cmd.InspectObj(pA.parse_key, expectedNumRows=(581012 * multiplyExpected), expectedNumCols=55, expectedMissinglist=[])
        print iA.missingList, iA.labelList, iA.numRows, iA.numCols
        for i in range(0):
            print 'Summary on column', i
            co = h2o_cmd.runSummary(key=hex_key, column=i)
        k = parseResult['frames'][0]['frame_id']['name']
        frames_result = a_node.frames(key=k, row_count=5)
        parseKeyIndexedCheck(frames_result, multiplyExpected)
