import h2o
h2o.init()
small_test = ['bigdata/laptop/citibike-nyc/2013-10.csv']
big_test = ['bigdata/laptop/citibike-nyc/2013-07.csv', 'bigdata/laptop/citibike-nyc/2013-08.csv', 'bigdata/laptop/citibike-nyc/2013-09.csv', 'bigdata/laptop/citibike-nyc/2013-10.csv', 'bigdata/laptop/citibike-nyc/2013-11.csv', 'bigdata/laptop/citibike-nyc/2013-12.csv', 'bigdata/laptop/citibike-nyc/2014-01.csv', 'bigdata/laptop/citibike-nyc/2014-02.csv', 'bigdata/laptop/citibike-nyc/2014-03.csv', 'bigdata/laptop/citibike-nyc/2014-04.csv', 'bigdata/laptop/citibike-nyc/2014-05.csv', 'bigdata/laptop/citibike-nyc/2014-06.csv', 'bigdata/laptop/citibike-nyc/2014-07.csv', 'bigdata/laptop/citibike-nyc/2014-08.csv']
data = h2o.import_frame(path=big_test)
startime = data['starttime']
secsPerDay = (((1000 * 60) * 60) * 24)
data['Days'] = (startime / secsPerDay).floor()
data.describe()
ddplycols = ['Days', 'start station name']
bpd = h2o.ddply(data[ddplycols], ddplycols, '(%nrow)')
bpd['C1']._name = 'bikes'
bpd['bikes'].quantile().show()
secs = (bpd['Days'] * secsPerDay)
bpd['Month'] = secs.month()
bpd['DayOfWeek'] = secs.dayOfWeek()
bpd.describe()
r = bpd['Days'].runif()
train = bpd[(r < 0.6)]
test = bpd[((0.6 <= r) & (r < 0.9))]
hold = bpd[(0.9 <= r)]
train.describe()
test.describe()
gbm = h2o.gbm(x=train.drop('bikes'), y=train['bikes'], validation_x=test.drop('bikes'), validation_y=test['bikes'], ntrees=50, max_depth=6, min_rows=10, nbins=20, learn_rate=0.1)
glm = h2o.glm(x=train.drop('bikes'), y=train['bikes'], validation_x=test.drop('bikes'), validation_y=test['bikes'])
train_r2_gbm = gbm.model_performance(train).r2()
test_r2_gbm = gbm.model_performance(test).r2()
hold_r2_gbm = gbm.model_performance(hold).r2()
print 'GBM R2 TRAIN=', train_r2_gbm, ', R2 TEST=', test_r2_gbm, ', R2 HOLDOUT=', hold_r2_gbm
train_r2_glm = glm.model_performance(train).r2()
test_r2_glm = glm.model_performance(test).r2()
hold_r2_glm = glm.model_performance(hold).r2()
print 'GLM R2 TRAIN=', train_r2_glm, ', R2 TEST=', test_r2_glm, ', R2 HOLDOUT=', hold_r2_glm
wthr1 = h2o.import_frame(path=['bigdata/laptop/citibike-nyc/31081_New_York_City__Hourly_2013.csv', 'bigdata/laptop/citibike-nyc/31081_New_York_City__Hourly_2014.csv'])
wthr1.describe()
wthr2 = wthr1[('Year Local', 'Month Local', 'Day Local', 'Hour Local', 'Dew Point (C)', 'Humidity Fraction', 'Precipitation One Hour (mm)', 'Temperature (C)', 'Weather Code 1/ Description')]
wthr2['Precipitation One Hour (mm)']._name = 'Rain (mm)'
wthr2['Weather Code 1/ Description']._name = 'WC1'
wthr2.describe()
wthr3 = wthr2[(wthr2['Hour Local'] == 12)]
wthr3.describe()
wthr3['msec'] = h2o.H2OVec.mktime(year=wthr3['Year Local'], month=(wthr3['Month Local'] - 1), day=(wthr3['Day Local'] - 1), hour=wthr3['Hour Local'])
secsPerDay = (((1000 * 60) * 60) * 24)
wthr3['Days'] = (wthr3['msec'] / secsPerDay).floor()
wthr3.describe()
wthr4 = wthr3.drop('Year Local').drop('Month Local').drop('Day Local').drop('Hour Local').drop('msec')
wthr4.describe()
bpd.merge(wthr4, allLeft=True, allRite=False)
bpd.describe()
