def __init__(self, var_name=None, exp_type=None, var_value=None, message=None, skip_frames=0):
    u"\n        Create an H2OTypeError exception object.\n\n        :param message: error message that will be shown to the user. If not given, this message will be constructed\n            from ``var_name``, ``var_value`` and ``exp_type``.\n        :param exp_type: expected variable's type.\n        :param var_name: name of the variable whose type is wrong (can be used for highlighting etc).\n        :param skip_frames: how many auxiliary function calls have been made since the moment of the exception. This\n            many local frames will be skipped in the output of the exception message. For example if you want to check\n            a variables type, and call a helper function ``assert_is_type()`` to do that job for you, then\n            ``skip_frames`` should be 1 (thus making the call to ``assert_is_type`` invisible).\n        "
    super(H2OTypeError, self).__init__(message)
    self._var_name = var_name
    self._exp_type = exp_type
    self._var_value = var_value
    self._message = message
    self._skip_frames = skip_frames
