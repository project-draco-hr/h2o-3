{
  int numChunks=0;
  for (int c=0; c < _counts.length; c++) {
    if (_counts[c] != null && _counts[c][_msb] > 0)     numChunks++;
  }
  int MSBnodeChunkCounts[]=new int[numChunks];
  int j=0;
  long lastCount=0;
  for (int c=0; c < _counts.length; c++) {
    if (_counts[c] != null && _counts[c][_msb] > 0) {
      MSBnodeChunkCounts[j]=(int)(_counts[c][_msb] - lastCount);
      lastCount=_counts[c][_msb];
      j++;
    }
  }
  MSBNodeHeader msbh=new MSBNodeHeader(MSBnodeChunkCounts);
  DKV.put(getMSBNodeHeaderKey(_isLeft,_msb,H2O.SELF.index()),msbh,_fs,true);
  for (int b=0; b < _o[_msb].length; b++) {
    OXbatch ox=new OXbatch(_o[_msb][b],_x[_msb][b]);
    DKV.put(getNodeOXbatchKey(_isLeft,_msb,H2O.SELF.index(),b),ox,_fs,true);
  }
  tryComplete();
}
