def write_syn_dataset(csvPathname, enumList, rowCount, colCount=1, scale=1, colSepChar=',', rowSepChar='\n', SEED=12345678):
    robj = random.Random(SEED)
    if (UTF8 or UTF8_MULTIBYTE):
        dsf = codecs.open(csvPathname, encoding='utf-8', mode='w+')
    else:
        dsf = open(csvPathname, 'w+')
    for row in range(rowCount):
        rowModulo = (row % 1000000)
        if (rowModulo < (100000 * scale)):
            howManyEnumsToUse = robj.choice([(0 if (not DISABLE_ALL_NA) else 1), 1])
        elif (rowModulo < (200000 * scale)):
            howManyEnumsToUse = robj.choice([1, 2, 3])
        elif (rowModulo < (300000 * scale)):
            howManyEnumsToUse = robj.choice([4, 5])
        elif (rowModulo < (400000 * scale)):
            howManyEnumsToUse = robj.choice([8, 9])
        elif (rowModulo < (500000 * scale)):
            howManyEnumsToUse = robj.choice([15, 16])
        elif (rowModulo < (600000 * scale)):
            howManyEnumsToUse = robj.choice([31, 32])
        elif (rowModulo < (700000 * scale)):
            howManyEnumsToUse = robj.choice([63, 64])
        elif (rowModulo < (800000 * scale)):
            howManyEnumsToUse = robj.choice([254, 255, 256, 257, 10000])
        else:
            howManyEnumsToUse = robj.choice([1, 2, 4, 8, 16, 256, 10000])
        if (howManyEnumsToUse > len(enumList)):
            print ('WARNING: you should make ENUMS_NUM %s bigger than howManyEnumsToUse: %s' % (ENUMS_NUM, howManyEnumsToUse))
            howManyEnumsToUse = len(enumList)
        howManyEnumsToUseCol2 = robj.choice([(0 if (not DISABLE_ALL_NA) else 1), 1, 3])
        rowData = []
        rowIndex = []
        riIndexSum = 0
        for col in range(colCount):
            if (col == 2):
                howManyEnumsToUse = howManyEnumsToUseCol2
            if ((not DISABLE_ALL_NA) and ((CAUSE_RANDOM_NA and (robj.randint(0, 99) == 0)) or (howManyEnumsToUse == 0))):
                riIndex = None
                riIndexSum += 0
                rowData.append('')
            else:
                riIndex = robj.randint(0, (howManyEnumsToUse - 1))
                if CREATE_RESPONSE_COL:
                    riIndexSum += riIndex
                if (UTF8 or UTF8_MULTIBYTE):
                    if ((howManyEnumsToUse >= 256) and UTF8_MULTIBYTE):
                        r = generate_random_utf8_string(length=1, multi=True)
                    else:
                        r = generate_random_utf8_string(length=1, multi=False)
                else:
                    r = enumList[riIndex]
                rowData.append(r)
                if REPORT_LAST_ENUM_INDICES:
                    rowIndex.append(r)
        if CREATE_RESPONSE_COL:
            ri = (riIndexSum % RESPONSE_MODULO)
            rowData.append(ri)
        rowDataCsv = (colSepChar.join(map(str, rowData)) + rowSepChar)
        if (UTF8 or UTF8_MULTIBYTE):
            decoded = rowDataCsv.decode('utf-8')
            if DEBUG:
                print 'str:', repr(rowDataCsv), type(rowDataCsv)
                print 'utf8:', repr(decoded), type(decoded)
            dsf.write(decoded)
        else:
            dsf.write(rowDataCsv)
    dsf.close()
    rowIndexCsv = (colSepChar.join(map(str, rowIndex)) + rowSepChar)
    return rowIndexCsv
