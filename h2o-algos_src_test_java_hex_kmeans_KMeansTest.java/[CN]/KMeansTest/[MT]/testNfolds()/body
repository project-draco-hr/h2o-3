{
  Frame tfr=null, vfr=null;
  KMeansModel kmeans=null;
  Scope.enter();
  try {
    tfr=parse_test_file("smalldata/iris/iris_wheader.csv");
    DKV.put(tfr);
    KMeansModel.KMeansParameters parms=new KMeansModel.KMeansParameters();
    parms._train=tfr._key;
    parms._seed=0xdecaf;
    parms._k=3;
    parms._nfolds=3;
    KMeans job=new KMeans(parms);
    kmeans=job.trainModel().get();
    checkConsistency(kmeans);
    ModelMetricsClustering mm=(ModelMetricsClustering)kmeans._output._cross_validation_metrics;
    assertEquals(_ref_betweenss,mm._betweenss,1e-8);
    assertEquals(_ref_tot_withinss,mm._tot_withinss,1e-8);
    assertEquals(_ref_totss,mm._totss,1e-6);
    for (int i=0; i < parms._k; ++i) {
      Assert.assertTrue(MathUtils.compare(((ModelMetricsClustering)kmeans._output._training_metrics)._withinss[i],_ref_withinss[i],1e-6,1e-6));
      Assert.assertEquals(((ModelMetricsClustering)kmeans._output._training_metrics)._size[i],_ref_size[i]);
    }
    job.remove();
  }
  finally {
    if (tfr != null)     tfr.remove();
    if (vfr != null)     vfr.remove();
    if (kmeans != null) {
      kmeans.deleteCrossValidationModels();
      kmeans.delete();
    }
    Scope.exit();
  }
}
