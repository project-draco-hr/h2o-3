def col_names_check():
    iris_wheader = h2o.import_file(pyunit_utils.locate('smalldata/iris/iris_wheader.csv'))
    assert (iris_wheader.col_names == ['sepal_len', 'sepal_wid', 'petal_len', 'petal_wid', 'class']), 'Expected {0} for column names but got {1}'.format(['sepal_len', 'sepal_wid', 'petal_len', 'petal_wid', 'class'], iris_wheader.col_names)
    iris = h2o.import_file(pyunit_utils.locate('smalldata/iris/iris.csv'))
    assert (iris.col_names == ['C1', 'C2', 'C3', 'C4', 'C5']), 'Expected {0} for column names but got {1}'.format(['C1', 'C2', 'C3', 'C4', 'C5'], iris.col_names)
    df = h2o.H2OFrame(zip(*np.random.randn(100, 4).tolist()), column_names=list('ABCD'), column_types=(['enum'] * 4))
    df.head()
    assert (df.col_names == list('ABCD')), 'Expected {} for column names but got {}'.format(list('ABCD'), df.col_names)
    assert (df.types == {'A': 'enum', 'C': 'enum', 'B': 'enum', 'D': 'enum', }), 'Expected {} for column types but got {}'.format({'A': 'enum', 'C': 'enum', 'B': 'enum', 'D': 'enum', }, df.types)
    df = h2o.H2OFrame(zip(*np.random.randn(100, 4).tolist()))
    df.head()
    assert (df.col_names == ['C1', 'C2', 'C3', 'C4']), 'Expected {} for column names but got {}'.format(['C1', 'C2', 'C3', 'C4'], df.col_names)
    assert (df.types == {'C3': 'real', 'C2': 'real', 'C1': 'real', 'C4': 'real', }), 'Expected {} for column types but got {}'.format({'C3': 'real', 'C2': 'real', 'C1': 'real', 'C4': 'real', }, df.types)
    df = h2o.H2OFrame({'B': ['a', 'a', 'b', 'NA', 'NA'], })
    df.head()
    assert (df.col_names == ['B']), 'Expected {} for column names but got {}'.format(['B'], df.col_names)
    df = h2o.H2OFrame({'B': ['a', 'a', 'b', 'NA', 'NA'], }, column_names=['X'])
    df.head()
    assert (df.col_names == ['X']), 'Expected {} for column names but got {}'.format(['X'], df.col_names)
