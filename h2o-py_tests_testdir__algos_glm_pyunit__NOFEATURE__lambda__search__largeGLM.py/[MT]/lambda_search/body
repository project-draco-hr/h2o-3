def lambda_search(ip, port):
    prostate = h2o.import_file(h2o.locate('smalldata/logreg/prostate.csv'))
    prostate_nosearch = h2o.glm(x=prostate[2:9], y=prostate[1], training_frame=prostate.hex, family='binomial', nlambdas=5, lambda_search=False, n_folds=2)
    params_nosearch = prostate_nosearch.params()
    try:
        prostate_nosearch.getGLMLambdaModel(0.5)
        assert False, 'expected an error'
    except EnvironmentError:
        assert True
    prostate_search = h2o.glm(x=prostate[2:9], y=prostate[1], training_frame=prostate.hex, family='binomial', nlambdas=5, lambda_search=True, n_folds=2)
    params_search = prostate_search.params()
    random_lambda = random.choice(prostate_search.lambda_all())
    random_model = prostate_search.getGLMLambdaModel(random_lambda)
    assert (random_model.getLambda() == random_lambda), 'expected equal lambdas'
    best_model = prostate_search.getGLMLambdaModel(params_search.bestlambda())
    assert (best_model.model() == prostate_search.model()), 'expected models to be equal'
