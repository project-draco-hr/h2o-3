{
  Grid grid=null;
  Frame fr=null;
  Frame init=ArrayUtils.frame(ard(ard(5.0,3.4,1.5,0.2),ard(7.0,3.2,4.7,1.4),ard(6.5,3.0,5.8,2.2)));
  try {
    fr=parse_test_file("smalldata/iris/iris_wheader.csv");
    fr.remove("class").remove();
    DKV.put(fr);
    HashMap<String,Object[]> hyperParms=new HashMap<>();
    hyperParms.put("_k",new Integer[]{3});
    hyperParms.put("_init",new KMeans.Initialization[]{KMeans.Initialization.Random,KMeans.Initialization.PlusPlus,KMeans.Initialization.User,KMeans.Initialization.Furthest});
    hyperParms.put("_seed",new Long[]{123456789L});
    KMeansModel.KMeansParameters params=new KMeansModel.KMeansParameters();
    params._train=fr._key;
    params._user_points=init._key;
    GridSearch gs=GridSearch.startGridSearch(params,hyperParms,KMEANS_MODEL_FACTORY);
    grid=(Grid)gs.get();
    Integer numModels=grid.getModels().length;
    System.out.println("Grid consists of " + numModels + " models");
    assertTrue(numModels == 4);
  }
  finally {
    if (fr != null) {
      fr.remove();
    }
    if (init != null) {
      init.remove();
    }
    if (grid != null) {
      grid.remove();
    }
  }
}
