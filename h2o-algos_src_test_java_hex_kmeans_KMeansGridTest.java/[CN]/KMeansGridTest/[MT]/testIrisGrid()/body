{
  Grid<KMeansModel.KMeansParameters> grid=null;
  Frame fr=null;
  try {
    fr=parse_test_file("smalldata/iris/iris_wheader.csv");
    HashMap<String,Object[]> hyperParms=new HashMap<>();
    Integer[] legalKOpts=new Integer[]{1,2,3,4,5};
    Integer[] illegalKOpts=new Integer[]{0};
    hyperParms.put("_k",ArrayUtils.join(legalKOpts,illegalKOpts));
    hyperParms.put("_init",new KMeans.Initialization[]{KMeans.Initialization.Random,KMeans.Initialization.PlusPlus,KMeans.Initialization.Furthest});
    hyperParms.put("_seed",new Long[]{1L,123456789L,987654321L});
    String[] hyperParamNames=hyperParms.keySet().toArray(new String[hyperParms.size()]);
    Arrays.sort(hyperParamNames);
    int hyperSpaceSize=ArrayUtils.crossProductSize(hyperParms);
    KMeansModel.KMeansParameters params=new KMeansModel.KMeansParameters();
    params._train=fr._key;
    Job<Grid> gs=GridSearch.startGridSearch(null,params,hyperParms);
    grid=(Grid<KMeansModel.KMeansParameters>)gs.get();
    Assert.assertEquals("Size of grid should match to size of hyper space",hyperSpaceSize,grid.getModelCount() + grid.getFailureCount());
    String[] gridHyperNames=grid.getHyperNames();
    Arrays.sort(gridHyperNames);
    Assert.assertArrayEquals("Hyper parameters names should match!",hyperParamNames,gridHyperNames);
    Map<String,Set<Object>> usedModelParams=GridTestUtils.initMap(hyperParamNames);
    Model[] ms=grid.getModels();
    for (    Model m : ms) {
      KMeansModel kmm=(KMeansModel)m;
      System.out.println(kmm._output._tot_withinss + " " + Arrays.deepToString(ArrayUtils.zip(grid.getHyperNames(),grid.getHyperValues(kmm._parms))));
      GridTestUtils.extractParams(usedModelParams,kmm._parms,hyperParamNames);
    }
    hyperParms.put("_k",legalKOpts);
    GridTestUtils.assertParamsEqual("Grid models parameters have to cover specified hyper space",hyperParms,usedModelParams);
    Map<String,Set<Object>> failedHyperParams=GridTestUtils.initMap(hyperParamNames);
    ;
    for (    Model.Parameters failedParams : grid.getFailedParameters()) {
      GridTestUtils.extractParams(failedHyperParams,(KMeansModel.KMeansParameters)failedParams,hyperParamNames);
    }
    hyperParms.put("_k",illegalKOpts);
    GridTestUtils.assertParamsEqual("Failed model parameters have to correspond to specified hyper space",hyperParms,failedHyperParams);
  }
  finally {
    if (fr != null) {
      fr.remove();
    }
    if (grid != null) {
      grid.remove();
    }
  }
}
