{
  super.init(expensive);
switch (_parms._loss) {
case AUTO:
    _parms._convert_to_enum=couldBeBool(_response);
case bernoulli:
  if (_parms._convert_to_enum && _nclass != 2 && !couldBeBool(_response))   error("_loss","Binomial requires the response to be a 2-class categorical");
 else   if (_response != null) {
    double mean=_response.mean();
    _initialPrediction=Math.log(mean / (1.0f - mean));
  }
_parms._convert_to_enum=true;
break;
case multinomial:
_parms._convert_to_enum=true;
break;
case gaussian:
if (_nclass != 1) error("_loss","Gaussian requires the response to be numeric");
_parms._convert_to_enum=false;
break;
default :
error("_loss","Loss must be specified");
}
if (!(0. < _parms._learn_rate && _parms._learn_rate <= 1.0)) error("_learn_rate","learn_rate must be between 0 and 1");
}
