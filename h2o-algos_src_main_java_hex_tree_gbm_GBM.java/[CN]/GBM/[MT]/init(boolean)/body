{
  super.init(expensive);
switch (_parms._loss) {
case AUTO:
    break;
case bernoulli:
  if (_nclass != 2)   error("_loss","Bernoulli requires the response to be a 2-class categorical");
 else   if (_response != null) {
    double mean=_response.mean();
    _initialPrediction=Math.log(mean / (1.0f - mean));
  }
case multinomial:
if (!_parms._convert_to_enum && _nclass == 1) error("_convert_to_enum","Classification requires the response to be an enum");
break;
case gaussian:
if (_nclass != 1) error("_loss","Gaussian requires the response to be numeric");
if (_parms._convert_to_enum) error("_convert_to_enum","Regression requires the response to not be an enum");
break;
default :
error("_loss","Loss must be specified");
}
if (!(0. < _parms._learn_rate && _parms._learn_rate <= 1.0)) error("_learn_rate","learn_rate must be between 0 and 1");
}
