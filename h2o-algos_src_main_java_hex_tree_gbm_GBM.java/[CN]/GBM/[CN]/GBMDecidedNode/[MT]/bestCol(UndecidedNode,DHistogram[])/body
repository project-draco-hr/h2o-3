{
  DTree.Split best=new DTree.Split(-1,-1,null,(byte)0,Float.MAX_VALUE,Float.MAX_VALUE,Float.MAX_VALUE,0L,0L,0,0);
  if (hs == null)   return best;
  for (int i=0; i < hs.length; i++) {
    if (hs[i] == null || hs[i].nbins() <= 1)     continue;
    DTree.Split s=hs[i].scoreMSE(i,_tree._min_rows);
    if (s == null)     continue;
    if (best == null || s.se() < best.se())     best=s;
    if (s.se() <= 0)     break;
  }
  return best;
}
