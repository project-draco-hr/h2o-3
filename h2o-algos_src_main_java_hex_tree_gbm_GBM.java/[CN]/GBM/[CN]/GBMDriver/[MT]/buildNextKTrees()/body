{
  final DTree[] ktrees=new DTree[_nclass];
  int[] leafs=new int[_nclass];
  growTrees(ktrees,leafs);
  GammaPass gp=new GammaPass(ktrees,leafs,_parms._distribution).doAll(_train);
  fitBestConstants(ktrees,leafs,gp);
  if (_parms._distribution == Distribution.Family.gamma || _parms._distribution == Distribution.Family.poisson || _parms._distribution == Distribution.Family.tweedie) {
    ComputeMinMax minMax=new ComputeMinMax(leafs[0],ktrees[0].len()).doAll(_train);
    truncatePreds(ktrees,leafs,_parms._distribution,minMax._mins,minMax._maxs);
  }
  new AddTreeContributions(ktrees).doAll(_train);
  _model._output.addKTrees(ktrees);
}
