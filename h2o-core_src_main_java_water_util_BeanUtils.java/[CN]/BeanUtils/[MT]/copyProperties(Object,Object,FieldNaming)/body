{
  if (null == dest || null == origin)   return;
  Map<String,Field> dest_fields=new HashMap<>();
  Map<String,Field> origin_fields=new HashMap<>();
  for (  Field f : dest.getClass().getFields())   dest_fields.put(f.getName(),f);
  for (  Field f : origin.getClass().getFields())   origin_fields.put(f.getName(),f);
  for (  Map.Entry<String,Field> entry : origin_fields.entrySet()) {
    String origin_name=entry.getKey();
    Field f=entry.getValue();
    String dest_name=null;
    if (field_naming == FieldNaming.CONSISTENT) {
      dest_name=origin_name;
    }
 else     if (field_naming == FieldNaming.DEST_HAS_UNDERSCORES) {
      dest_name="_" + origin_name;
    }
 else     if (field_naming == FieldNaming.ORIGIN_HAS_UNDERSCORES) {
      dest_name=origin_name.substring(1);
    }
    try {
      if (dest_fields.containsKey(dest_name)) {
        dest_fields.get(dest_name).set(dest,f.get(origin));
      }
    }
 catch (    IllegalAccessException e) {
      Log.err("Illegal access exception trying to copy field: " + origin_name + " of class: "+ origin.getClass()+ " to field: "+ dest_name+ " of class: "+ dest.getClass());
    }
  }
}
