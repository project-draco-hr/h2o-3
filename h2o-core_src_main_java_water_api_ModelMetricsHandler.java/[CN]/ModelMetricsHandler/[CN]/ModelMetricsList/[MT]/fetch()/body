{
  final Key[] modelMetricsKeys=KeySnapshot.globalSnapshot().filter(new KeySnapshot.KVFilter(){
    @Override public boolean filter(    KeySnapshot.KeyInfo k){
      try {
        if (!Value.isSubclassOf(k._type,ModelMetrics.class))         return false;
        ModelMetrics mm=DKV.getGet(k._key);
        if (_model != null && !mm.isForModel((Model)DKV.getGet(_model._key)))         return false;
        if (_frame != null && !mm.isForFrame((Frame)DKV.getGet(_frame._key)))         return false;
      }
 catch (      NullPointerException|ClassCastException ex) {
        return false;
      }
      return true;
    }
  }
).keys();
  _model_metrics=new ModelMetrics[modelMetricsKeys.length];
  for (int i=0; i < modelMetricsKeys.length; i++)   _model_metrics[i]=DKV.getGet(modelMetricsKeys[i]);
  return this;
}
