{
  if (null == s.model)   throw new H2OIllegalArgumentException("model","predict",s.model);
  if (null == DKV.get(s.model.name))   throw new H2OKeyNotFoundArgumentException("model","predict",s.model.name);
  if (null == s.frame)   throw new H2OIllegalArgumentException("frame","predict",s.frame);
  if (null == DKV.get(s.frame.name))   throw new H2OKeyNotFoundArgumentException("frame","predict",s.frame.name);
  ModelMetricsList parms=s.createAndFillImpl();
  Frame fr=parms._model.score(parms._frame,parms._destination_key);
  DKV.remove(fr._key);
  ModelMetricsListSchemaV3 mm=this.fetch(version,s);
  if (null == mm)   mm=new ModelMetricsListSchemaV3();
  if (null == mm.model_metrics || 0 == mm.model_metrics.length) {
    Log.warn("Score() did not return a ModelMetrics for model: " + s.model + " on frame: "+ s.frame);
  }
  return mm;
}
