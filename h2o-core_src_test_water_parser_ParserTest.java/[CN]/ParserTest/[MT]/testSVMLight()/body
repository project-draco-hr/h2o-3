{
  String[] dataset=new String[]{"1 2:.2 5:.5 9:.9\n-1 1:.1 4:.4 8:.8\n","1 2:.2 5:.5 9:.9\n1 3:.3 6:.6\n","-1 7:.7 8:.8 9:.9\n1 20:2.\n","+1 1:.1 5:.5 6:.6 10:1\n1 19:1.9\n","1 2:.2 5:.5 9:.9\n-1 1:.1 4:.4 8:.8\n","1 2:.2 5:.5 9:.9\n1 3:.3 6:.6\n","-1 7:.7 8:.8 9:.9\n1 20:2.\n","+1 1:.1 5:.5 6:.6 10:1\n1 19:1.9\n","1 2:.2 5:.5 9:.9\n-1 1:.1 4:.4 8:.8\n","1 2:.2 5:.5 9:.9\n1 3:.3 6:.6\n","-1 7:.7 8:.8 9:.9\n1 20:2.\n","+1 1:.1 5:.5 6:.6 10:1\n1 19:1.9\n"};
  double[][] exp=new double[][]{ard(1.,.0,.2,.0,.0,.5,.0,.0,.0,.9,0,0,0,0,0,0,0,0,0,.0,.0),ard(-1.,.1,.0,.0,.4,.0,.0,.0,.8,.0,0,0,0,0,0,0,0,0,0,.0,.0),ard(1.,.0,.2,.0,.0,.5,.0,.0,.0,.9,0,0,0,0,0,0,0,0,0,.0,.0),ard(1.,.0,.0,.3,.0,.0,.6,.0,.0,.0,0,0,0,0,0,0,0,0,0,.0,.0),ard(-1.,.0,.0,.0,.0,.0,.0,.7,.8,.9,0,0,0,0,0,0,0,0,0,.0,.0),ard(1.,.0,.0,.0,.0,.0,.0,.0,.0,.0,0,0,0,0,0,0,0,0,0,.0,2.0),ard(1.,.1,.0,.0,.0,.5,.6,.0,.0,.0,1,0,0,0,0,0,0,0,0,.0,.0),ard(1.,.0,.0,.0,.0,.0,.0,.0,.0,.0,0,0,0,0,0,0,0,0,0,1.9,.0),ard(1.,.0,.2,.0,.0,.5,.0,.0,.0,.9,0,0,0,0,0,0,0,0,0,.0,.0),ard(-1.,.1,.0,.0,.4,.0,.0,.0,.8,.0,0,0,0,0,0,0,0,0,0,.0,.0),ard(1.,.0,.2,.0,.0,.5,.0,.0,.0,.9,0,0,0,0,0,0,0,0,0,.0,.0),ard(1.,.0,.0,.3,.0,.0,.6,.0,.0,.0,0,0,0,0,0,0,0,0,0,.0,.0),ard(-1.,.0,.0,.0,.0,.0,.0,.7,.8,.9,0,0,0,0,0,0,0,0,0,.0,.0),ard(1.,.0,.0,.0,.0,.0,.0,.0,.0,.0,0,0,0,0,0,0,0,0,0,.0,2.0),ard(1.,.1,.0,.0,.0,.5,.6,.0,.0,.0,1,0,0,0,0,0,0,0,0,.0,.0),ard(1.,.0,.0,.0,.0,.0,.0,.0,.0,.0,0,0,0,0,0,0,0,0,0,1.9,.0),ard(1.,.0,.2,.0,.0,.5,.0,.0,.0,.9,0,0,0,0,0,0,0,0,0,.0,.0),ard(-1.,.1,.0,.0,.4,.0,.0,.0,.8,.0,0,0,0,0,0,0,0,0,0,.0,.0),ard(1.,.0,.2,.0,.0,.5,.0,.0,.0,.9,0,0,0,0,0,0,0,0,0,.0,.0),ard(1.,.0,.0,.3,.0,.0,.6,.0,.0,.0,0,0,0,0,0,0,0,0,0,.0,.0),ard(-1.,.0,.0,.0,.0,.0,.0,.7,.8,.9,0,0,0,0,0,0,0,0,0,.0,.0),ard(1.,.0,.0,.0,.0,.0,.0,.0,.0,.0,0,0,0,0,0,0,0,0,0,.0,2.0),ard(1.,.1,.0,.0,.0,.5,.6,.0,.0,.0,1,0,0,0,0,0,0,0,0,.0,.0),ard(1.,.0,.0,.0,.0,.0,.0,.0,.0,.0,0,0,0,0,0,0,0,0,0,1.9,.0)};
  StringBuilder sb=new StringBuilder();
  for (  String ds : dataset)   sb.append(ds).append("\n");
  Key k=makeByteVec(sb.toString());
  Key r1=Key.make("r1");
  ParseDataset2.parse(r1,k);
  testParsed(r1,exp);
}
