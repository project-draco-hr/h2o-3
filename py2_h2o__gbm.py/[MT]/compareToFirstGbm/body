def compareToFirstGbm(self, key, glm, firstglm):
    verboseprint('compareToFirstGbm key:', key)
    verboseprint('compareToFirstGbm glm[key]:', glm[key])
    if (type(glm[key]) is list):
        kList = glm[key]
        firstkList = firstglm[key]
    elif (type(glm[key]) is dict):
        raise Exception(('compareToFirstGLm: Not expecting dict for ' + key))
    else:
        kList = [glm[key]]
        firstkList = [firstglm[key]]
    for (k, firstk) in zip(kList, firstkList):
        delta = (0.1 * abs(float(firstk)))
        msg = ((('Too large a delta (' + str(delta)) + ') comparing current and first for: ') + key)
        self.assertAlmostEqual(float(k), float(firstk), delta=delta, msg=msg)
        self.assertGreaterEqual(abs(float(k)), 0.0, (str(k) + ' abs not >= 0.0 in current'))
