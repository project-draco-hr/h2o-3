{
  if (_taskInfo._allIn)   return null;
  int selected=0;
  int[] cols=null;
  if (_parms._alpha[0] > 0) {
    final double rhs=_parms._alpha[0] * (2 * l1 - l2);
    cols=MemoryManager.malloc4(_dinfo.fullN());
    int j=0;
    int[] oldActiveCols=_taskInfo._activeCols;
    if (oldActiveCols == null)     oldActiveCols=new int[0];
    int C=_parms._family == Family.multinomial ? _nclass : 1;
    int P=_dinfo.fullN() + 1;
    for (int i=0; i < _dinfo.fullN(); ++i) {
      for (int c=0; c < C; ++c)       if ((j < oldActiveCols.length && i == oldActiveCols[j]) || grad[i + c * P] > rhs || grad[i + c * P] < -rhs) {
        cols[selected++]=i;
        if (j < oldActiveCols.length && i == oldActiveCols[j])         ++j;
        break;
      }
    }
  }
  if (_parms._alpha[0] == 0 || selected == _dinfo.fullN()) {
    _taskInfo._allIn=true;
    _activeData=_dinfo;
    LogInfo("All " + _dinfo.fullN() + " coefficients are active");
    return null;
  }
 else {
    LogInfo(selected + " / " + _dinfo.fullN()+ " cols are active");
    return Arrays.copyOf(cols,selected);
  }
}
