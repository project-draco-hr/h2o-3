{
  double[] stddev=new double[]{1.5748783,0.9948694,0.5971291,0.4164494};
  double[][] eigvec=ard(ard(-0.5358995,0.4181809,-0.3412327,0.64922780),ard(-0.5831836,0.1879856,-0.2681484,-0.74340748),ard(-0.2781909,-0.8728062,-0.3780158,0.13387773),ard(-0.5434321,-0.1673186,0.8177779,0.08902432));
  long seed=1234;
  GLRMModel model=null;
  Frame train=null;
  GLRMParameters parms;
  Map<Double,Double> sd_map=new TreeMap<>();
  Map<Double,Double> ev_map=new TreeMap<>();
  StringBuilder sb=new StringBuilder();
  for (  double missing_fraction : new double[]{0,0.1,0.25,0.5,0.75,0.9}) {
    try {
      Scope.enter();
      train=parse_test_file(Key.make("arrests.hex"),"smalldata/pca_test/USArrests.csv");
      if (missing_fraction > 0) {
        Frame frtmp=new Frame(Key.make(),train.names(),train.vecs());
        DKV.put(frtmp._key,frtmp);
        FrameUtils.MissingInserter j=new FrameUtils.MissingInserter(frtmp._key,seed,missing_fraction);
        j.execImpl();
        j.get();
        DKV.remove(frtmp._key);
      }
      parms=new GLRMParameters();
      parms._train=train._key;
      parms._k=train.numCols();
      parms._gamma=0;
      parms._transform=DataInfo.TransformType.STANDARDIZE;
      parms._max_iterations=1000;
      parms._seed=seed;
      parms._recover_pca=true;
      GLRM job=new GLRM(parms);
      try {
        model=job.trainModel().get();
        Log.info(100 * missing_fraction + "% missing values: Objective = " + model._output._objective);
        double sd_err=errStddev(stddev,model._output._std_deviation) / parms._k;
        double ev_err=errEigvec(eigvec,model._output._eigenvectors_raw) / parms._k;
        Log.info("Avg SSE in Std Dev = " + sd_err + "\tAvg SSE in Eigenvectors = "+ ev_err);
        sd_map.put(missing_fraction,sd_err);
        ev_map.put(missing_fraction,ev_err);
      }
 catch (      Throwable t) {
        t.printStackTrace();
        throw new RuntimeException(t);
      }
 finally {
        job.remove();
      }
      Scope.exit();
    }
 catch (    Throwable t) {
      t.printStackTrace();
      throw new RuntimeException(t);
    }
 finally {
      if (train != null)       train.delete();
      if (model != null) {
        model._parms._loading_key.get().delete();
        model.delete();
      }
    }
  }
  sb.append("Missing Fraction --> Avg SSE in Std Dev\n");
  for (  String s : Arrays.toString(sd_map.entrySet().toArray()).split(","))   sb.append(s.replace("="," --> ")).append("\n");
  sb.append("\n");
  sb.append("Missing Fraction --> Avg SSE in Eigenvectors\n");
  for (  String s : Arrays.toString(ev_map.entrySet().toArray()).split(","))   sb.append(s.replace("="," --> ")).append("\n");
  Log.info(sb.toString());
}
