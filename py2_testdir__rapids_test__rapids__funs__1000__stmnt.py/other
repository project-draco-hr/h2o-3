import unittest, random, sys, time
sys.path.extend(['.', '..', '../..', 'py'])
import h2o2 as h2o
import h2o_browse as h2b, h2o_exec as h2e, h2o_import as h2i
from h2o_xl import Def, Fcn, Assign, KeyIndexed
from copy import copy
print 'Trying a different way, listing Rapids objects, rather than .ast() strings'
keyString = 'abdefghijklmnopqrstuvzabdefghijklmnopqrstuvz'
keyString += 'abdefghijklmnopqrstuvzabdefghijklmnopqrstuvz'
keyString += 'abdefghijklmnopqrstuvzabdefghijklmnopqrstuvz'
funsList = [Def('anon', 'x', [Assign(key, Fcn('var', 'x', None, False, None), do=False) for key in keyString], [Assign(key, Fcn('sum', KeyIndexed('x', col=0), False), do=False) for key in keyString], [Assign(key, Fcn('max', KeyIndexed('x', col=0), False), do=False) for key in keyString], [Assign(key, Fcn('min', KeyIndexed('x', col=0), False), do=False) for key in keyString], [Assign(key, Fcn('xorsum', KeyIndexed('x', col=0), False), do=False) for key in keyString], [Assign(key, Fcn('sd', KeyIndexed('x', col=0), False), do=False) for key in keyString], [Assign(key, Fcn('ncol', KeyIndexed('x', col=0)), do=False) for key in keyString], [Assign(key, Fcn('is.factor', KeyIndexed('x', col=0)), do=False) for key in keyString], [Assign(key, Fcn('any.factor', KeyIndexed('x', col=0)), do=False) for key in keyString], [Assign(key, Fcn('length', KeyIndexed('x', col=0)), do=False) for key in keyString], [Assign(key, Fcn('sin', KeyIndexed('x', col=0)), do=False) for key in keyString], [Assign(key, Fcn('asin', KeyIndexed('x', col=0)), do=False) for key in keyString], [Assign(key, Fcn('sinh', KeyIndexed('x', col=0)), do=False) for key in keyString], [Assign(key, Fcn('cos', KeyIndexed('x', col=0)), do=False) for key in keyString], [Assign(key, Fcn('acos', KeyIndexed('x', col=0)), do=False) for key in keyString], [Assign(key, Fcn('tan', KeyIndexed('x', col=0)), do=False) for key in keyString], [Assign(key, Fcn('atan', KeyIndexed('x', col=0)), do=False) for key in keyString], [Assign(key, Fcn('tanh', KeyIndexed('x', col=0)), do=False) for key in keyString], Fcn('var', 'x', None, False, None))]
if (__name__ == '__main__'):
    h2o.unit_main()
