def offset_poisson():
    insurance = h2o.import_file(pyunit_utils.locate('smalldata/glm_test/insurance.csv'))
    insurance['offset'] = insurance['Holders'].log()
    gbm = h2o.gbm(x=insurance[0:3], y=insurance['Claims'], distribution='poisson', ntrees=600, max_depth=1, min_rows=1, learn_rate=0.1, offset_column='offset', training_frame=insurance)
    predictions = gbm.predict(insurance)
    assert (abs(((-2.003262) - gbm._model_json['output']['init_f'])) < 1e-05), 'expected init_f to be {0}, but got {1}'.format((-2.003262), gbm._model_json['output']['init_f'])
    assert (abs((49.23437 - predictions.mean()[0])) < 0.0001), 'expected prediction mean to be {0}, but got {1}'.format(49.23437, predictions.mean()[0])
    assert (abs((1.077275 - predictions.min())) < 0.0001), 'expected prediction min to be {0}, but got {1}'.format(1.077275, predictions.min())
    assert (abs((398.0608 - predictions.max())) < 0.01), 'expected prediction max to be {0}, but got {1}'.format(398.0608, predictions.max())
