def test_xl_basic(self):
    bucket = 'smalldata'
    csvPathname = 'iris/iris_wheader.csv'
    hexDF = 'v'
    parseResult = h2i.import_parse(bucket=bucket, path=csvPathname, schema='put', hex_key=hexDF)
    a = DF()
    print 'Does the lastExecResult stash work?', dump_json(h2o_xl.Xbase.lastExecResult)
    inspect = h2o_cmd.runInspect(key=a)
    print 'inspect a', dump_json(inspect)
    b = DF()
    inspect = h2o_cmd.runInspect(key=b)
    print 'inspect b', dump_json(inspect)
    a <<= 0
    b <<= 0
    c = DF()
    c[0] <<= (a + b)
    inspect = h2o_cmd.runInspect(key=c)
    print 'inspect c', dump_json(inspect)
    a = DF('a')
    b = DF('b')
    c = DF('c')
    inspect = h2o_cmd.runInspect(key=c)
    print 'inspect c', dump_json(inspect)
    c[0] <<= (a[0] + b[0])
    inspect = h2o_cmd.runInspect(key=c)
    print 'inspect c', dump_json(inspect)
    c[0] <<= (a[0] - b[0])
    c[0] <<= (a[0] * b[0])
    c[0] <<= (a[0] - b[0])
    inspect = h2o_cmd.runInspect(key=c)
    print 'inspect c', dump_json(inspect)
    c[0] <<= ((a[0] & b[0]) | a[0])
    inspect = h2o_cmd.runInspect(key=c)
    print 'inspect c', dump_json(inspect)
    print '\nDoes the keyWriteHistoryList work?'
    for k in Xbase.keyWriteHistoryList:
        print k
    h2o.check_sandbox_for_errors()
