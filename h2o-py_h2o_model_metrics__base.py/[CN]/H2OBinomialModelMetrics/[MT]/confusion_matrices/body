def confusion_matrices(self, thresholds=None):
    '\n    Each threshold defines a confusion matrix. For each threshold in the thresholds list, return a 2x2 list.\n\n    :param thresholds: A list of thresholds.\n    :return: A list of 2x2-lists: [, ..., [ [tns,fps], [fns,tps] ], ..., ]\n    '
    if (not thresholds):
        thresholds = [self.find_threshold_by_max_metric('f1')]
    if (not isinstance(thresholds, list)):
        raise ValueError('thresholds parameter must be a list (i.e. [0.01, 0.5, 0.99])')
    thresh2d = self._metric_json['thresholds_and_metric_scores']
    tidx = thresh2d.col_header.index('tps')
    fidx = thresh2d.col_header.index('fps')
    p = self._metric_json['max_criteria_and_metric_scores'].cell_values[(tidx - 1)][2]
    n = self._metric_json['max_criteria_and_metric_scores'].cell_values[(fidx - 1)][2]
    cms = []
    for t in thresholds:
        idx = self.find_idx_by_threshold(t)
        row = thresh2d.cell_values[idx]
        tps = row[tidx]
        fps = row[fidx]
        cms.append([[(n - fps), fps], [(p - tps), tps]])
    return cms
