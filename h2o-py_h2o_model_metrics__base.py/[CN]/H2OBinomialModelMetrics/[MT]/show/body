def show(self):
    '\n    Display a short summary of the binomial metrics.\n    :return: None\n    '
    print 
    print ('H2OBinomialMetrics: ' + self._algo)
    reported_on = '** Reported on {} data. **'
    if self._on_train:
        print reported_on.format('train')
    elif self._on_valid:
        print reported_on.format('validation')
    else:
        print reported_on.format('test')
    print 
    print ('MSE: ' + str(self.mse()))
    print ('R^2: ' + str(self.r2()))
    print ('LogLoss: ' + str(self.logloss()))
    print ('AUC: ' + str(self.auc()))
    print ('Gini: ' + str(self.giniCoef()))
    if (self._metric_json['__meta']['schema_type'] == 'ModelMetricsRegressionGLM'):
        print ('Null degrees of freedom: ' + str(self.null_degrees_of_freedom()))
        print ('Residual degrees of freedom: ' + str(self.residual_degrees_of_freedom()))
        print ('Null deviance: ' + str(self.null_deviance()))
        print ('Residual deviance: ' + str(self.residual_deviance()))
        print ('AIC: ' + str(self.aic()))
    print self._metric_json['max_criteria_and_metric_scores']
