{
  String[] cnames=new String[]{"timestamp","duration","iteration","log_likelihood","objective"};
  String[] ctypes=new String[]{"string","string","int","double","double"};
  String[] cformats=new String[]{"%s","%s","%d","%.5f","%.5f"};
  if (_lambda_times != null) {
    cnames=ArrayUtils.append(cnames,new String[]{"lambdaId","time per lambda","Number of Predictors","Explained Deviance (train)","Explained Deviance (test)"});
    ctypes=ArrayUtils.append(ctypes,new String[]{"int","int","int","double","double"});
    cformats=ArrayUtils.append(cformats,new String[]{"%d","%d","%d","%.3f","%.3f"});
  }
  TwoDimTable res=new TwoDimTable("Scoring History","",new String[_scoring_iters.length],cnames,ctypes,cformats,"");
  int j=0;
  DateTimeFormatter fmt=DateTimeFormat.forPattern("yyyy-MM-dd HH:mm:ss");
  for (int i=0; i < _scoring_iters.length; ++i) {
    int col=0;
    res.set(i,col++,fmt.print(_scoring_times[i]));
    res.set(i,col++,PrettyPrint.msecs(_scoring_times[i] - _scoring_times[0],true));
    res.set(i,col++,_scoring_iters[i]);
    res.set(i,col++,_likelihoods[i]);
    res.set(i,col++,_objectives[i]);
    if (_lambda_iters != null && j < _lambda_iters.length && _scoring_iters[i] == _lambda_iters[j]) {
      res.set(i,col++,_scoring_lambda[j]);
      res.set(i,col++,_lambda_times[j]);
      res.set(i,col++,_predictors[j]);
      res.set(i,col++,_explained_dev_train[j]);
      if (_explained_dev_val != null && j < _explained_dev_val.length)       res.set(i,col++,_explained_dev_val[j]);
      j++;
    }
  }
  return res;
}
