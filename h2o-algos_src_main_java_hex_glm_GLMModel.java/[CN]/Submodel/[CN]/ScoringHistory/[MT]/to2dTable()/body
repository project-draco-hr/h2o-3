{
  String[] cnames=new String[]{"iteration","time [ms]"," -log(l)","objective"};
  String[] ctypes=new String[]{"int","int","double","double"};
  String[] cformats=new String[]{"%d","%d","%.5f","%.5f"};
  if (_lambda_times != null) {
    cnames=ArrayUtils.append(cnames,new String[]{"lambdaId","time per lambda"," Explained Deviance (train)","Explained Deviance (test)"});
    ctypes=ArrayUtils.append(ctypes,new String[]{"int","int","double","double"});
    cformats=ArrayUtils.append(cformats,new String[]{"%d","%d","%.3f","%.3f"});
  }
  TwoDimTable res=new TwoDimTable("Scoring History","",new String[_scoring_iters.length],cnames,ctypes,cformats,"");
  int j=0;
  for (int i=0; i < _scoring_iters.length; ++i) {
    res.set(i,0,_scoring_iters[i]);
    res.set(i,1,_scoring_times[i]);
    res.set(i,2,_likelihoods[i]);
    res.set(i,3,_objectives[i]);
    if (_lambda_iters != null && _scoring_iters[i] == _lambda_iters[j]) {
      res.set(i,4,_scoring_lambda[j]);
      res.set(i,5,_lambda_times[j]);
      res.set(i,6,_explained_dev_train[j]);
      if (_explained_dev_val != null && j < _explained_dev_val.length)       res.set(i,7,_explained_dev_val[j]);
      j++;
    }
  }
  return res;
}
