{
  double eta=0.0;
  final double[] b=beta();
  for (int i=0; i < dinfo()._catOffsets.length - 1; ++i) {
    int ival=(int)data[i];
    if (ival != data[i])     throw new IllegalArgumentException("categorical value out of range");
    ival+=dinfo()._catOffsets[i];
    if (!_parms._use_all_factor_levels)     --ival;
    if (ival >= 0 && ival < dinfo()._catOffsets[i + 1])     eta+=b[ival];
  }
  int noff=dinfo().numStart() - dinfo()._cats;
  for (int i=dinfo()._cats; i < b.length - 1 - noff; ++i)   eta+=b[noff + i] * data[i];
  eta+=b[b.length - 1];
  double mu=_parms.linkInv(eta);
  preds[0]=mu;
  if (_parms._family == Family.binomial) {
    if (Double.isNaN(mu)) {
      preds[0]=Double.NaN;
      preds[1]=Double.NaN;
      preds[2]=Double.NaN;
    }
 else {
      preds[0]=(mu >= _output._threshold ? 1 : 0);
      preds[1]=1.0 - mu;
      preds[2]=mu;
    }
  }
  return preds;
}
