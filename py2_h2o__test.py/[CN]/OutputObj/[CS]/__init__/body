def __init__(self, output, name, noPrint=False):
    assert isinstance(output, dict), 'top level json given to OutputObj should be dict'
    for (k1, v1) in output.iteritems():
        if (not isinstance(v1, dict)):
            setattr(self, k1, v1)
        else:
            for (k2, v2) in v1.iteritems():
                if isinstance(v2, dict):
                    print ('Warning: the json object has dict. at 3rd level' + 'Keeping those as json-like dicts. never check at >3')
                    setattr(self.k1, k2, v2)
    self.name = name
    if (not noPrint):
        for (k, v) in self:
            if (k == 'parameters'):
                print "Not showing 'parameters'"
            elif (k == 'data'):
                print "Not showing 'data'"
            elif (k == 'frame'):
                print "Not showing 'frame'"
            elif (k == 'model'):
                print "Not showing 'model'"
            elif (k == 'columns'):
                print "Not showing 'columns'"
            elif (isinstance(v, list) and (len(v) > 20)):
                print self.name, k, v
            else:
                print self.name, k, dump_json(v)
