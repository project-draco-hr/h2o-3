def __init__(self, output, name, noPrint=False):
    super(OutputObj, self).__init__()
    assert isinstance(output, dict), 'top level json given to OutputObj should be dict'
    aa = json.dumps(output)
    bb = json.loads(aa, object_hook=AttrDict)
    self.update(bb)
    self.name = name
    if (not noPrint):
        for (k, v) in self.iteritems():
            if (k == 'parameters'):
                print "Not showing 'parameters'"
            elif (k == 'data'):
                print "Not showing 'data'"
            elif (k == 'frame'):
                print "Not showing 'frame'"
            elif (k == 'model'):
                print "Not showing 'model'"
            elif (k == 'columns'):
                print "Not showing 'columns'"
            elif (isinstance(v, list) and (len(v) > 20)):
                print self.name, k, v
            else:
                print self.name, k, dump_json(v)
