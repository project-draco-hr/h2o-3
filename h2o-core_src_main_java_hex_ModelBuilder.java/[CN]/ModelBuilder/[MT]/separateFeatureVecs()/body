{
  int res=0;
  if (_parms._weights_column != null) {
    Vec w=_train.remove(_parms._weights_column);
    if (w == null)     error("_weights_column","Offset column '" + _parms._weights_column + "' not found in the training frame");
 else {
      if (!w.isNumeric())       error("_weights_column","Invalid weights column '" + _parms._weights_column + "', weights must be numeric");
      _weights=w;
      if (w.min() < 0)       error("_weights_columns","Weights must be >= 0");
      if (w.max() == 0)       error("_weights_columns","Max. weight must be > 0");
      _train.add(_parms._weights_column,w);
      ++res;
    }
  }
  if (_parms._offset_column != null) {
    Vec o=_train.remove(_parms._offset_column);
    if (o == null)     error("_offset_column","Offset column '" + _parms._offset_column + "' not found in the training frame");
 else {
      if (!o.isNumeric())       error("_offset_column","Invalid offset column '" + _parms._offset_column + "', offset must be numeric");
      _offset=o;
      if (_weights == _offset)       error("_offset_column","Offset must be different from weights");
      _train.add(_parms._offset_column,o);
      ++res;
    }
  }
  if (isSupervised() && _parms._response_column != null) {
    _response=_train.remove(_parms._response_column);
    if (_response == null) {
      if (isSupervised())       error("_response_column","Response column '" + _parms._response_column + "' not found in the training frame");
    }
 else {
      _train.add(_parms._response_column,_response);
      ++res;
    }
  }
  return res;
}
