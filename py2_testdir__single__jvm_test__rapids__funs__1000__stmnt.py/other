import unittest, random, sys, time
sys.path.extend(['.', '..', '../..', 'py'])
import h2o, h2o_browse as h2b, h2o_exec as h2e, h2o_import as h2i
from h2o_xexec import Def, Fcn, Assign, Frame
print 'Trying a different way, listing Rapids objects, rather than .ast() strings'
keyString = 'abdefghijklmnopqrstuvzabdefghijklmnopqrstuvz'
funsList = [Def('anon', 'x', [Assign(key, Fcn('var', 'x', None, False, None)) for key in keyString], [Assign(key, Fcn('sum', Frame('x', col=0), False)) for key in keyString], [Assign(key, Fcn('max', Frame('x', col=0), False)) for key in keyString], [Assign(key, Fcn('min', Frame('x', col=0), False)) for key in keyString], [Assign(key, Fcn('xorsum', Frame('x', col=0), False)) for key in keyString], [Assign(key, Fcn('sd', Frame('x', col=0), False)) for key in keyString], [Assign(key, Fcn('ncol', Frame('x', col=0))) for key in keyString], [Assign(key, Fcn('is.factor', Frame('x', col=0))) for key in keyString], [Assign(key, Fcn('any.factor', Frame('x', col=0))) for key in keyString], [Assign(key, Fcn('length', Frame('x', col=0))) for key in keyString], [Assign(key, Fcn('sin', Frame('x', col=0))) for key in keyString], [Assign(key, Fcn('asin', Frame('x', col=0))) for key in keyString], [Assign(key, Fcn('sinh', Frame('x', col=0))) for key in keyString], [Assign(key, Fcn('cos', Frame('x', col=0))) for key in keyString], [Assign(key, Fcn('acos', Frame('x', col=0))) for key in keyString], [Assign(key, Fcn('tan', Frame('x', col=0))) for key in keyString], [Assign(key, Fcn('atan', Frame('x', col=0))) for key in keyString], [Assign(key, Fcn('tanh', Frame('x', col=0))) for key in keyString], Fcn('var', 'x', None, False, None))]
if (__name__ == '__main__'):
    h2o.unit_main()
