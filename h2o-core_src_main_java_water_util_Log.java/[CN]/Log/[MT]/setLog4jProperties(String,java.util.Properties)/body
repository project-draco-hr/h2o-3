{
  LOG_DIR=logDir;
  String logPathFileName=getLogPathFileNameStem();
  String appenders=new String[]{"TRACE, R6","TRACE, R5, R6","TRACE, R4, R5, R6","TRACE, R3, R4, R5, R6","TRACE, R2, R3, R4, R5, R6","TRACE, R1, R2, R3, R4, R5, R6"}[_level];
  p.setProperty("log4j.logger.water.default",appenders);
  p.setProperty("log4j.additivity.water.default","false");
  p.setProperty("log4j.appender.R1","org.apache.log4j.RollingFileAppender");
  p.setProperty("log4j.appender.R1.Threshold","TRACE");
  p.setProperty("log4j.appender.R1.File",logPathFileName + "-1-trace.log");
  p.setProperty("log4j.appender.R1.MaxFileSize","1MB");
  p.setProperty("log4j.appender.R1.MaxBackupIndex","3");
  p.setProperty("log4j.appender.R1.layout","org.apache.log4j.PatternLayout");
  p.setProperty("log4j.appender.R1.layout.ConversionPattern","%m%n");
  p.setProperty("log4j.appender.R2","org.apache.log4j.RollingFileAppender");
  p.setProperty("log4j.appender.R2.Threshold","DEBUG");
  p.setProperty("log4j.appender.R2.File",logPathFileName + "-2-debug.log");
  p.setProperty("log4j.appender.R2.MaxFileSize","3MB");
  p.setProperty("log4j.appender.R2.MaxBackupIndex","3");
  p.setProperty("log4j.appender.R2.layout","org.apache.log4j.PatternLayout");
  p.setProperty("log4j.appender.R2.layout.ConversionPattern","%m%n");
  p.setProperty("log4j.appender.R3","org.apache.log4j.RollingFileAppender");
  p.setProperty("log4j.appender.R3.Threshold","INFO");
  p.setProperty("log4j.appender.R3.File",logPathFileName + "-3-info.log");
  p.setProperty("log4j.appender.R3.MaxFileSize","2MB");
  p.setProperty("log4j.appender.R3.MaxBackupIndex","3");
  p.setProperty("log4j.appender.R3.layout","org.apache.log4j.PatternLayout");
  p.setProperty("log4j.appender.R3.layout.ConversionPattern","%m%n");
  p.setProperty("log4j.appender.R4","org.apache.log4j.RollingFileAppender");
  p.setProperty("log4j.appender.R4.Threshold","WARN");
  p.setProperty("log4j.appender.R4.File",logPathFileName + "-4-warn.log");
  p.setProperty("log4j.appender.R4.MaxFileSize","256KB");
  p.setProperty("log4j.appender.R4.MaxBackupIndex","3");
  p.setProperty("log4j.appender.R4.layout","org.apache.log4j.PatternLayout");
  p.setProperty("log4j.appender.R4.layout.ConversionPattern","%m%n");
  p.setProperty("log4j.appender.R5","org.apache.log4j.RollingFileAppender");
  p.setProperty("log4j.appender.R5.Threshold","ERROR");
  p.setProperty("log4j.appender.R5.File",logPathFileName + "-5-error.log");
  p.setProperty("log4j.appender.R5.MaxFileSize","256KB");
  p.setProperty("log4j.appender.R5.MaxBackupIndex","3");
  p.setProperty("log4j.appender.R5.layout","org.apache.log4j.PatternLayout");
  p.setProperty("log4j.appender.R5.layout.ConversionPattern","%m%n");
  p.setProperty("log4j.appender.R6","org.apache.log4j.RollingFileAppender");
  p.setProperty("log4j.appender.R6.Threshold","FATAL");
  p.setProperty("log4j.appender.R6.File",logPathFileName + "-6-fatal.log");
  p.setProperty("log4j.appender.R6.MaxFileSize","256KB");
  p.setProperty("log4j.appender.R6.MaxBackupIndex","3");
  p.setProperty("log4j.appender.R6.layout","org.apache.log4j.PatternLayout");
  p.setProperty("log4j.appender.R6.layout.ConversionPattern","%m%n");
  p.setProperty("log4j.logger.water.api.RequestServer","TRACE, HTTPD");
  p.setProperty("log4j.additivity.water.api.RequestServer","false");
  p.setProperty("log4j.appender.HTTPD","org.apache.log4j.RollingFileAppender");
  p.setProperty("log4j.appender.HTTPD.Threshold","TRACE");
  p.setProperty("log4j.appender.HTTPD.File",logPathFileName + "-httpd.log");
  p.setProperty("log4j.appender.HTTPD.MaxFileSize","1MB");
  p.setProperty("log4j.appender.HTTPD.MaxBackupIndex","3");
  p.setProperty("log4j.appender.HTTPD.layout","org.apache.log4j.PatternLayout");
  p.setProperty("log4j.appender.HTTPD.layout.ConversionPattern","%d{ISO8601} %m%n");
  p.setProperty("log4j.logger.org.apache.http","WARN");
  p.setProperty("log4j.logger.com.amazonaws","WARN");
  p.setProperty("log4j.logger.org.apache.hadoop","WARN");
  p.setProperty("log4j.logger.org.jets3t.service","WARN");
  p.setProperty("log4j.logger.org.reflections.Reflections","ERROR");
  p.setProperty("log4j.logger.com.brsanthu.googleanalytics","ERROR");
  p.setProperty("log4j.logger.org.apache.hadoop.util.NativeCodeLoader","ERROR");
}
