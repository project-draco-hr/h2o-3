{
  if (response_rates == null)   return null;
  TwoDimTable table=new TwoDimTable("Gains/Lift Table","Avg response rate: " + PrettyPrint.formatPct(avg_response_rate),new String[_groups],new String[]{"Group","Lower Threshold","Cumulative Data Fraction","Response Rate","Cumulative Response Rate","Capture Rate","Cumulative Capture Rate","Lift","Cumulative Lift","Gain","Cumulative Gain"},new String[]{"int","double","double","double","double","double","double","double","double","double","double"},new String[]{"%d","%.8f","%5f","%5f","%5f","%5f","%5f","%5f","%5f","%5f","%5f"},"");
  double sum_e_i=0;
  double sum_n_i=0;
  double P=avg_response_rate;
  double N=_preds.length();
  double E=N * P;
  for (int i=0; i < events.length; ++i) {
    long e_i=events[i];
    long n_i=observations[i];
    double p_i=response_rates[i];
    sum_e_i+=e_i;
    sum_n_i+=n_i;
    double lift=p_i / P;
    double sum_lift=sum_e_i / sum_n_i / P;
    table.set(i,0,i + 1);
    table.set(i,1,_quantiles[i]);
    table.set(i,2,sum_n_i / N);
    table.set(i,3,p_i);
    table.set(i,4,sum_e_i / sum_n_i);
    table.set(i,5,e_i / E);
    table.set(i,6,sum_e_i / E);
    table.set(i,7,lift);
    table.set(i,8,sum_lift);
    table.set(i,9,100 * (lift - 1));
    table.set(i,10,100 * (sum_lift - 1));
  }
  return this.table=table;
}
