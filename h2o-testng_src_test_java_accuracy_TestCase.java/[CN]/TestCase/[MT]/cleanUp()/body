{
  AccuracyTestingUtil.info("Removing all objects.");
  trainingDataSet.closeFrame();
  testingDataSet.closeFrame();
  Futures fs=new Futures();
  for (  Job j : Job.jobs()) {
    j.cancel();
    j.remove(fs);
  }
  fs.blockForPending();
  new MRTask(){
    @Override public byte priority(){
      return H2O.GUI_PRIORITY;
    }
    @Override public void setupLocal(){
      H2O.raw_clear();
      water.fvec.Vec.ESPC.clear();
    }
  }
.doAllNodes();
  H2O.getPM().getIce().cleanUp();
  AccuracyTestingUtil.info("Finished removing objects.");
}
