{
  NaiveBayesModel model=null;
  Frame train=null, score=null;
  final int[] cats=new int[]{1,3,4,5};
  try {
    Scope.enter();
    train=parse_test_file(Key.make("prostate.hex"),"smalldata/logreg/prostate.csv");
    for (int i=0; i < cats.length; i++)     Scope.track(train.replace(cats[i],train.vec(cats[i]).toCategoricalVec())._key);
    train.remove("ID").remove();
    DKV.put(train._key,train);
    NaiveBayesParameters parms=new NaiveBayesParameters();
    parms._train=train._key;
    parms._laplace=0;
    parms._response_column=train._names[0];
    parms._compute_metrics=true;
    model=new NaiveBayes(parms).trainModel().get();
    score=model.score(train);
    Assert.assertTrue(model.testJavaScoring(train,score,1e-6));
  }
  finally {
    if (train != null)     train.delete();
    if (score != null)     score.delete();
    if (model != null)     model.delete();
    Scope.exit();
  }
}
