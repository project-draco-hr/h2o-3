def test_random_grid_search_for_glm():
    '\n    Create and instantiate classes, call test methods to test randomize grid search for GLM Gaussian\n    and Binomial families.\n\n    :return: None\n    '
    test_glm_gaussian_random_grid = Test_glm_random_grid_search('gaussian')
    test_glm_gaussian_random_grid.test1_glm_random_grid_search_model_number('mse(xval=True)')
    test_glm_gaussian_random_grid.test2_glm_random_grid_search_max_model()
    test_glm_gaussian_random_grid.test3_glm_random_grid_search_max_runtime_secs()
    test_glm_gaussian_random_grid.test4_glm_random_grid_search_metric('MSE', False)
    test_glm_gaussian_random_grid.test4_glm_random_grid_search_metric('r2', True)
    test_glm_binomial_random_grid = Test_glm_random_grid_search('binomial')
    test_glm_binomial_random_grid.test1_glm_random_grid_search_model_number('logloss(xval=True)')
    test_glm_binomial_random_grid.test2_glm_random_grid_search_max_model()
    test_glm_binomial_random_grid.test3_glm_random_grid_search_max_runtime_secs()
    test_glm_binomial_random_grid.test4_glm_random_grid_search_metric('logloss', False)
    test_glm_binomial_random_grid.test4_glm_random_grid_search_metric('AUC', True)
    if ((test_glm_binomial_random_grid.test_failed > 0) or (test_glm_gaussian_random_grid.test_failed > 0)):
        sys.exit(1)
