def frames(self, key=None, timeoutSecs=10, **kwargs):
    if (not ((key is None) or isinstance(key, (basestring, Key)))):
        raise Exception(('frames: key should be string or Key type %s %s' % (type(key), key)))
    params_dict = {'find_compatible_models': 0, 'row_offset': 0, 'row_count': 5, }
    '\n    Return a single Frame or all of the Frames in the h2o cluster.  The\n    frames are contained in a list called "frames" at the top level of the\n    result.  Currently the list is unordered.\n    TODO:\n    When find_compatible_models is implemented then the top level \n    dict will also contain a "models" list.\n    '
    h2o_methods.check_params_update_kwargs(params_dict, kwargs, 'frames', False)
    if key:
        if isinstance(key, Key):
            keyStr = key.frame
        else:
            keyStr = key
        result = self.do_json_request(('3/Frames.json/' + keyStr), timeout=timeoutSecs, params=params_dict)
    else:
        result = self.do_json_request('3/Frames.json', timeout=timeoutSecs, params=params_dict)
    return result
