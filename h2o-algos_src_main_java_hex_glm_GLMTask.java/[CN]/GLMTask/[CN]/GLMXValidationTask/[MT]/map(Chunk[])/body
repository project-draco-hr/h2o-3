{
  _xvals=new GLMValidation[_xmodels.length];
  for (int i=0; i < _xmodels.length; ++i)   _xvals[i]=new GLMValidation(null,_xmodels[i]._ymu,_xmodels[i]._parms,_xmodels[i]._output.rank(),_thresholds);
  final int nrows=chunks[0]._len;
  double[] row=MemoryManager.malloc8d(_xmodels[0]._output._names.length);
  float[] preds=MemoryManager.malloc4f(_xmodels[0]._parms._family == Family.binomial ? 3 : 1);
  OUTER:   for (int i=0; i < nrows; ++i) {
    if (chunks[chunks.length - 1].isNA(i))     continue;
    for (int j=0; j < chunks.length - 1; ++j) {
      if (chunks[j].isNA(i))       continue OUTER;
      row[j]=chunks[j].atd(i);
    }
    ++_nobs;
    final int mid=i % _xmodels.length;
    final GLMModel model=_xmodels[mid];
    final GLMValidation val=_xvals[mid];
    model.score0(row,preds);
    double response=chunks[chunks.length - 1].at8(i);
    val.add(response,model._parms._family == Family.binomial ? preds[2] : preds[0]);
  }
}
