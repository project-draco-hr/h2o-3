{
  if (_jobKey == null || Job.isRunning(_jobKey)) {
    ArrayUtils.add(_xy,git._xy);
    if (_computeGram)     _gram.add(git._gram);
    _yy+=git._yy;
    _nobs+=git._nobs;
    if (_validate)     _val.add(git._val);
    if (_computeGradient)     ArrayUtils.add(_ginfo._gradient,git._ginfo._gradient);
    if (_validate && _glm._family == Family.binomial) {
      _newThresholds[0]=ArrayUtils.join(_newThresholds[0],git._newThresholds[0]);
      _newThresholds[1]=ArrayUtils.join(_newThresholds[1],git._newThresholds[1]);
      if (_newThresholds[0].length >= 2 * N_THRESHOLDS) {
        for (int i=0; i < 2 * N_THRESHOLDS; i+=2)         _newThresholds[0][i >> 1]=_newThresholds[0][i];
      }
      if (_newThresholds[0].length > N_THRESHOLDS)       _newThresholds[0]=Arrays.copyOf(_newThresholds[0],N_THRESHOLDS);
      if (_newThresholds[1].length >= 2 * N_THRESHOLDS) {
        for (int i=0; i < 2 * N_THRESHOLDS; i+=2)         _newThresholds[1][i >> 1]=_newThresholds[1][i];
      }
      if (_newThresholds[1].length > N_THRESHOLDS)       _newThresholds[1]=Arrays.copyOf(_newThresholds[1],N_THRESHOLDS);
    }
    super.reduce(git);
  }
}
