{
  Chunk filterChunk=chunks[chunks.length - 1];
  boolean[] skip=MemoryManager.mallocZ(chunks[0]._len);
  for (int i=0; i < chunks.length - 1; ++i) {
    for (int r=chunks[i].nextNZ(-1); r < chunks[i]._len; r=chunks[i].nextNZ(r)) {
      skip[r]|=chunks[i].isNA(r);
    }
  }
  Chunk response=chunks[chunks.length - 2];
  for (int r=0; r < response._len; ++r) {
    if (filterChunk.at8(r) == 0)     continue;
    if (!skip[r] && !response.isNA(r)) {
      double d=response.atd(r);
      _ymu+=d;
      if (d < _yMin)       _yMin=d;
      if (d > _yMax)       _yMax=d;
      ++_nobs;
    }
  }
  _ymu/=_nobs;
  for (int i=0; i < skip.length; ++i)   filterChunk.set(i,skip[i] ? 0 : 1);
}
