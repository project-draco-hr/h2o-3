{
  Row row=_dinfo.newDenseRow();
  double[] g=_gradient;
  double[] b=_beta;
  for (int rid=0; rid < chks[0]._len; ++rid) {
    if (skp[rid])     continue;
    row=_dinfo.extractDenseRow(chks,rid,row);
    double y=-1 + 2 * row.response(0);
    if (row.bad)     continue;
    ++_nobs;
    double eta=row.innerProduct(b) + row.offset;
    double gval;
    double d=1 + Math.exp(-y * eta);
    _likelihood+=Math.log(d);
    gval=-y * (1 - 1.0 / d);
    for (int i=0; i < row.nBins; ++i)     g[row.binIds[i]]+=gval;
    int off=_dinfo.numStart();
    for (int j=0; j < _dinfo._nums; ++j)     g[j + off]+=row.numVals[j] * gval;
    if (_dinfo._intercept)     g[g.length - 1]+=gval;
  }
}
