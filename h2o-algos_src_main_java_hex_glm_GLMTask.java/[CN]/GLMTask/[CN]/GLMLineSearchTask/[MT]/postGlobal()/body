{
  double l2pen=.5 * (1 - _alpha) * _lambda;
  double l1pen=_alpha * _lambda;
  int N=_beta.length - (_dinfo._intercept ? 1 : 0);
  double b2=ArrayUtils.l2norm2(_beta,_dinfo._intercept);
  double d2=ArrayUtils.l2norm2(_direction,_dinfo._intercept);
  double bd=0;
  for (int i=0; i < _beta.length - (_dinfo._intercept ? 1 : 0); ++i)   bd+=_beta[i] * _direction[i];
  double t=1;
  for (int i=0; i < _objVals.length; ++i) {
    double l1norm=0;
    if (_alpha > 0) {
      for (int j=0; j < N; ++j) {
        double b=_beta[j] + t * _direction[j];
        if (b >= 0)         l1norm+=b;
 else         l1norm-=b;
      }
    }
    _objVals[i]=_objVals[i] * _reg + l2pen * (b2 + t * t * d2 + 2 * t * bd) + l1pen * l1norm;
    t*=_step;
  }
}
