{
  super.map(chunks);
  _z=MemoryManager.malloc8d(_dinfo.fullN());
  Chunk response=chunks[chunks.length - 2];
  Chunk filter=chunks[chunks.length - 1];
  for (int i=0; i < _dinfo._cats; ++i) {
    for (int r=chunks[i].nextNZ(-1); r < chunks[i]._len; r=chunks[i].nextNZ(r)) {
      int off;
      if (filter.at8(r) == 1 && (off=_dinfo.getCategoricalId(i,(int)chunks[i].at8(r))) != -1)       _z[off]+=(response.atd(r) - _ymu) * _gPrimeMu;
    }
  }
  final int numStart=_dinfo.numStart();
  for (int i=0; i < _dinfo._nums; ++i)   for (int r=chunks[i].nextNZ(-1); r < chunks[i]._len; ++r)   if (filter.at8(r) == 1)   _z[i + numStart]+=(response.atd(r) - _ymu) * _gPrimeMu * chunks[i].atd(r);
}
