{
  double[] weights=null;
  if (_weightId != -1) {
    weights=MemoryManager.malloc8d(chks[_weightId]._len);
    chks[_weightId].getDoubles(weights,0,weights.length);
    chks=ArrayUtils.remove(chks,_weightId);
  }
  _varSum=MemoryManager.malloc8d(_mean.length);
  double[] vals=MemoryManager.malloc8d(chks[0]._len);
  int[] ids=MemoryManager.malloc4(chks[0]._len);
  for (int c=0; c < _mean.length; ++c) {
    double mu=_mean[c];
    int n=chks[c].asSparseDoubles(vals,ids);
    double s=0;
    for (int i=0; i < n; ++i) {
      double d=vals[i];
      if (Double.isNaN(d))       continue;
      d=d - mu;
      if (_weightId != -1)       s+=weights[ids[i]] * d * d;
 else       s+=d * d;
    }
    _varSum[c]=s;
  }
}
