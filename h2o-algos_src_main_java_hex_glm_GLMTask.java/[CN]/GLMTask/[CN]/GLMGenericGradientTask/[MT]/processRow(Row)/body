{
  double eta=row.innerProduct(_beta) + _sparseOffset + row.offset;
  double mu=_glmf.linkInv(eta);
  double[] g=_gradient;
  _likelihood+=row.weight * _glmf.likelihood(row.response(0),mu);
  double var=_glmf.variance(mu);
  if (var < 1e-6)   var=1e-6;
  double gval=row.weight * (mu - row.response(0)) / (var * _glmf.linkDeriv(mu));
  for (int i=0; i < row.nBins; ++i)   g[row.binIds[i]]+=gval;
  int off=_dinfo.numStart();
  for (int j=0; j < _dinfo._nums; ++j)   g[j + off]+=row.numVals[j] * gval;
  if (_dinfo._intercept)   g[g.length - 1]+=gval;
}
