{
  double[] eta=MemoryManager.malloc8d(chks[0]._len);
  double[] b=_beta;
  for (int i=0; i < _dinfo._cats; ++i) {
    Chunk c=chks[i];
    for (int r=0; r < c._len; ++r) {
      if (skip[r] || c.isNA(r)) {
        skip[r]=true;
        continue;
      }
      int off=_dinfo.getCategoricalId(i,(int)c.at8(r));
      if (off != -1)       eta[r]+=b[off];
    }
  }
  final int numStart=_dinfo.numStart();
  if (_dinfo._normMul != null && _dinfo._normSub != null) {
    double off=0;
    for (int i=0; i < _dinfo._nums; ++i)     off-=b[numStart + i] * _dinfo._normSub[i] * _dinfo._normMul[i];
    for (int r=0; r < chks[0]._len; ++r)     eta[r]+=off;
  }
  for (int i=0; i < _dinfo._nums; ++i) {
    Chunk c=chks[i + _dinfo._cats];
    for (int r=c.nextNZ(-1); r < c._len; r=c.nextNZ(r)) {
      if (skip[r] || c.isNA(r)) {
        skip[r]=true;
        continue;
      }
      double d=c.atd(r);
      if (_dinfo._normMul != null)       d*=_dinfo._normMul[i];
      eta[r]+=b[numStart + i] * d;
    }
  }
  return eta;
}
