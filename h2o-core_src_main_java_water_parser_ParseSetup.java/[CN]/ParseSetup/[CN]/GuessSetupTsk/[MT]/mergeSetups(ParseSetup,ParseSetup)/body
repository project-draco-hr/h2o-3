{
  if (setupA == null)   return setupB;
  ParseSetup mergedSetup=setupA;
  mergedSetup._check_header=unifyCheckHeader(setupA._check_header,setupB._check_header);
  mergedSetup._separator=unifyColumnSeparators(setupA._separator,setupB._separator);
  mergedSetup._number_columns=unifyColumnCount(setupA._number_columns,setupB._number_columns);
  mergedSetup._column_names=unifyColumnNames(setupA._column_names,setupB._column_names);
  if (setupA._parse_type == ParserType.ARFF && setupB._parse_type == ParserType.CSV)   ;
 else   if (setupA._parse_type == ParserType.CSV && setupB._parse_type == ParserType.ARFF) {
    mergedSetup._parse_type=ParserType.ARFF;
    mergedSetup._column_types=setupB._column_types;
  }
 else   if (setupA._parse_type == setupB._parse_type) {
    mergedSetup._column_previews=PreviewParseWriter.unifyColumnPreviews(setupA._column_previews,setupB._column_previews);
  }
 else   throw new ParseDataset.H2OParseException("File type mismatch. Cannot parse files of type " + setupA._parse_type + " and "+ setupB._parse_type+ " as one dataset.");
  if (mergedSetup._data.length < PreviewParseWriter.MAX_PREVIEW_LINES) {
    int n=mergedSetup._data.length;
    int m=Math.min(PreviewParseWriter.MAX_PREVIEW_LINES,n + setupB._data.length - 1);
    mergedSetup._data=Arrays.copyOf(mergedSetup._data,m);
    System.arraycopy(setupB._data,1,mergedSetup._data,n,m - n);
  }
  mergedSetup._errs=ArrayUtils.append(setupA._errs,setupB._errs);
  if (mergedSetup._errs.length > 20)   mergedSetup._errs=Arrays.copyOf(mergedSetup._errs,20);
  return mergedSetup;
}
