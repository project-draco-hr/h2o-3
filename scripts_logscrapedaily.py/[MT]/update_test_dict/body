def update_test_dict(each_line):
    '\n    Extract unit tests information from the jenkins job console output.  It will save this\n    information in g_failed_jobs list and setup a place holder for saving the bad java\n    messages/message types in g_failed_job_java_messages, g_failed_job_java_message_types.\n\n    Parameters\n    ----------\n\n    each_line :  str\n        contains a line read in from jenkins console\n\n    :return: bool to determine if text mining should continue on the jenkins console text\n    '
    global g_ignore_test_names
    global g_failed_jobs
    global g_failed_job_java_messages
    global g_failure_occurred
    temp_strings = each_line.split()
    if ((len(temp_strings) >= 5) and ('FAIL' in each_line) and ('FAILURE' not in each_line)):
        test_name = temp_strings[(-2)]
        g_failed_jobs.append(test_name)
        g_failed_job_java_messages.append([])
        g_failed_job_java_message_types.append([])
        g_failure_occurred = True
    return True
