def find_node_name(each_line, temp_func_list):
    '\n    Find the slave machine where a Jenkins job was executed on.  It will save this\n    information in g_failed_test_info_dict.  In addition, it will\n    delete this particular function handle off the temp_func_list as we do not need\n    to perform this action again.\n\n    Parameters\n    ----------\n\n    each_line :  str\n        contains a line read in from jenkins console\n    temp_func_list :  list of Python function handles\n        contains a list of functions that we want to invoke to extract information from\n        the Jenkins console text.\n\n    :return: bool to determine if text mining should continue on the jenkins console text\n    '
    global g_node_name
    global g_failed_test_info_dict
    if (g_node_name in each_line):
        temp_strings = each_line.split()
        [start, found, endstr] = each_line.partition(g_node_name)
        if found:
            temp_strings = endstr.split()
            g_failed_test_info_dict['6.node_name'] = extract_true_string(temp_strings[1])
            temp_func_list.remove(find_node_name)
    return True
