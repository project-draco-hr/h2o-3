def associate_test_with_java(testname, java_message, java_message_type):
    '\n    When a new unit test is started as indicated in the java_*_0.out.txt file,\n    update the data structures that are keeping track of unit tests being run and\n    bad java messages/messages types associated with each unit test.  Since a new\n    unit test is being started, save all the bad java messages associated with\n    the previous unit test and start a new set for the new unit test.\n\n    Parameters\n    ----------\n    testname :  str\n        previous unit test testname\n    java_message :  list of str\n        bad java messages associated with testname\n    java_message_type :  list of str\n        bad java message types associated with testname\n\n    :return :  none\n    '
    global g_failed_jobs
    global g_failed_job_java_messages
    global g_failed_job_java_message_types
    global g_success_jobs
    global g_success_job_java_messages
    global g_success_job_java_message_types
    if (len(java_message) > 0):
        if (testname in g_failed_jobs):
            message_index = g_failed_jobs.index(testname)
            g_failed_job_java_messages[message_index] = java_message
            g_failed_job_java_message_types[message_index] = java_message_type
        else:
            g_success_jobs.append(testname)
            g_success_job_java_messages.append(java_message)
            g_success_job_java_message_types.append(java_message_type)
