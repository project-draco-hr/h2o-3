{
  return new SparseIterator(new Value(){
    @Override public final long asLong(){
      long v=getIValue(_off);
      if (v == NAS[(_valsz >>> 1) - 1])       throw new IllegalArgumentException("at8 but value is missing");
      return v;
    }
    @Override public final double asDouble(){
      long v=getIValue(_off);
      return (v == NAS[_valsz_log - 1]) ? Double.NaN : v;
    }
    @Override public final boolean isNA(){
      long v=getIValue(_off);
      return (v == NAS[_valsz_log]);
    }
  }
);
}
