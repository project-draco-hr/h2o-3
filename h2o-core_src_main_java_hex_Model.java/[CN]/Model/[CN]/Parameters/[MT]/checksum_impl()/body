{
  long xs=0x600D;
  int count=0;
  Field[] fields=Weaver.getWovenFields(this.getClass());
  Arrays.sort(fields,new Comparator<Field>(){
    public int compare(    Field field1,    Field field2){
      return field1.getName().compareTo(field2.getName());
    }
  }
);
  for (  Field f : fields) {
    final long P=MathUtils.PRIMES[count % MathUtils.PRIMES.length];
    Class<?> c=f.getType();
    if (c.isArray()) {
      try {
        f.setAccessible(true);
        if (f.get(this) != null) {
          if (c.getComponentType() == Integer.TYPE) {
            int[] arr=(int[])f.get(this);
            xs^=(0xDECAF + P * (long)Arrays.hashCode(arr));
          }
 else           if (c.getComponentType() == Float.TYPE) {
            float[] arr=(float[])f.get(this);
            xs^=(0xDECAF + P * (long)Arrays.hashCode(arr));
          }
 else           if (c.getComponentType() == Double.TYPE) {
            double[] arr=(double[])f.get(this);
            xs^=(0xDECAF + P * (long)Arrays.hashCode(arr));
          }
 else           if (c.getComponentType() == Long.TYPE) {
            long[] arr=(long[])f.get(this);
            xs^=(0xDECAF + P * (long)Arrays.hashCode(arr));
          }
 else {
            Object[] arr=(Object[])f.get(this);
            xs^=(0xDECAF + P * (long)Arrays.deepHashCode(arr));
          }
        }
 else {
          xs^=(0xDECAF + P);
        }
      }
 catch (      IllegalAccessException e) {
        throw new RuntimeException(e);
      }
catch (      ClassCastException t) {
        throw H2O.fail();
      }
    }
 else {
      try {
        f.setAccessible(true);
        if (f.get(this) != null) {
          xs^=(0x1337 + P * (long)(f.get(this)).hashCode());
        }
 else {
          xs^=(0x1337 + P);
        }
      }
 catch (      IllegalAccessException e) {
        throw new RuntimeException(e);
      }
    }
    count++;
  }
  xs^=train().checksum() * (_valid == null ? 17 : valid().checksum());
  return xs;
}
