{
  Frame adaptFr=new Frame(fr);
  final boolean computeMetrics=(!isSupervised() || (adaptFr.vec(_output.responseName()) != null && !adaptFr.vec(_output.responseName()).isBad()));
  adaptTestForTrain(adaptFr,true,computeMetrics);
  Frame output=predictScoreImpl(fr,adaptFr,destination_key,j);
  Vec predicted=output.vecs()[0];
  String mdomain[]=predicted.domain();
  if (_output.isClassifier() && computeMetrics) {
    if (false) {
      assert(mdomain != null);
      ModelMetrics mm=ModelMetrics.getFromDKV(this,fr);
      ConfusionMatrix cm=mm.cm();
      if (cm != null && cm._domain != null)       if (cm._cm.length < _parms._max_confusion_matrix_size) {
        Log.info(cm.table().toString(1));
      }
      if (mm.hr() != null) {
        Log.info(getHitRatioTable(mm.hr()));
      }
    }
    Vec actual=fr.vec(_output.responseName());
    if (actual != null) {
      String sdomain[]=actual.domain();
      if (sdomain != null && mdomain != sdomain && !Arrays.equals(mdomain,sdomain))       output.replace(0,new CategoricalWrappedVec(actual.group().addVec(),actual._rowLayout,sdomain,predicted._key));
    }
  }
  cleanup_adapt(adaptFr,fr);
  return output;
}
