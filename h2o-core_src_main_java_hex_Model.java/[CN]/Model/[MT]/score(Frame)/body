{
  Frame adaptFr=new Frame(fr);
  Vec actual=_output.isClassifier() ? fr.vec(_output.responseName()) : null;
  adaptTestForTrain(adaptFr,true);
  Frame output=scoreImpl(fr,adaptFr);
  Vec predicted=output.vecs()[0];
  String mdomain[]=predicted.domain();
  if (_output.isClassifier())   assert(mdomain != null);
  ConfusionMatrix cm=ModelMetrics.getFromDKV(this,fr)._cm;
  if (cm._domain != null) {
    assert(java.util.Arrays.deepEquals(cm._domain,mdomain));
    cm._cmTable=cm.toTable();
    if (cm._arr.length < _parms._max_confusion_matrix_size)     water.util.Log.info(cm._cmTable.toString(1));
  }
  if (_output.isClassifier()) {
    String sdomain[]=actual.domain();
    if (sdomain != null && mdomain != sdomain && !Arrays.equals(mdomain,sdomain))     output.replace(0,new EnumWrappedVec(actual.group().addVec(),actual.get_espc(),sdomain,predicted._key));
  }
  Vec[] vecs=adaptFr.vecs();
  for (int i=0; i < vecs.length; i++)   if (fr.find(vecs[i]) != -1)   vecs[i]=null;
  adaptFr.delete();
  return output;
}
