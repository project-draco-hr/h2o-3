def test_rapids_cbind_vec(self):
    bucket = 'smalldata'
    csvPathname = 'iris/iris_wheader.csv'
    hexKey = 'r1'
    parseResult = h2i.import_parse(bucket=bucket, path=csvPathname, schema='put', hex_key=hexKey)
    keys = []
    maxx = 29
    for trial in [int(100000000.0)]:
        length = trial
        execExpr = ('(= !v (c {(: #0 #%s)})' % (length - 1))
        start = time.time()
        (execResult, result) = h2e.exec_expr(h2o.nodes[0], execExpr, resultKey=None, timeoutSecs=10)
        elapsed1 = (time.time() - start)
        if execResult['num_rows']:
            keys.append(execExpr)
        xList = []
        eList = []
        fList = []
        for trial2 in range(0, 14):
            col = (2 ** trial2)
            vString = ' '.join(['$v' for x in range(col)])
            execExpr = ('(= !v2 (cbind %s))' % vString)
            start = time.time()
            (execResult, result) = h2e.exec_expr(h2o.nodes[0], execExpr, resultKey=None, timeoutSecs=10)
            elapsed2 = (time.time() - start)
            if execResult['num_rows']:
                keys.append(execExpr)
            if (1 == 0):
                start = time.time()
                execExpr = '(sum $v2 $TRUE)'
                (execResult, result) = h2e.exec_expr(h2o.nodes[0], execExpr, resultKey=None, timeoutSecs=60)
                elapsed1 = (time.time() - start)
            xList.append(col)
            eList.append(elapsed1)
            fList.append(elapsed2)
    if (1 == 1):
        xLabel = 'col'
        eLabel = 'elapsed (sum)'
        fLabel = 'elapsed (cbind cols)'
        eListTitle = ''
        fListTitle = ''
        h2o_gbm.plotLists(xList, xLabel, eListTitle, eList, eLabel, fListTitle, fList, fLabel)
    print '\nExpressions that created keys'
    for k in keys:
        print k
    h2o.check_sandbox_for_errors()
