{
  FrameAssertion[] assertions=new FrameAssertion[]{new GenFrameAssertion("enumTypes.avro",TestUtil.ari(1,100)){
    String[] categories=AvroFileGenerator.generateSymbols(10);
    @Override protected File prepareFile() throws IOException {
      return AvroFileGenerator.generateEnumTypes(file,nrows(),categories);
    }
    @Override void check(    Frame f){
      assertArrayEquals("Column names need to match!",ar("CEnum"),f.names());
      assertArrayEquals("Column types need to match!",ar(Vec.T_CAT),f.types());
      assertArrayEquals("Category names need to match!",categories,f.vec(0).domain());
      int numOfCategories=categories.length;
      int nrows=nrows();
      for (int row=1; row < nrows; row++) {
        assertEquals("Value in column CString",row % numOfCategories,(int)f.vec(0).at(row));
      }
    }
  }
};
  for (int i=0; i < assertions.length; ++i) {
    assertFrameAsserion(assertions[i]);
  }
}
