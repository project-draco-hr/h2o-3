def match(self, table, nomatch=0):
    '\n    Makes a vector of the positions of (first) matches of its first argument in its second.\n    :return: bit H2OVec\n    '
    rtable = ''
    if hasattr(table, '__iter__'):
        if all([isinstance(t, (int, float)) for t in table]):
            rtable += '(list'
            for t in table:
                rtable += (' #' + str(t))
            rtable += ')'
        elif all([isinstance(t, str) for t in table]):
            rtable += '(slist'
            for t in table:
                rtable += ((' "' + str(t)) + '"')
            rtable += ')'
    elif isinstance(table, (int, float)):
        rtable += ('#' + str(table))
    elif isinstance(table, str):
        rtable += (('"' + table) + '"')
    else:
        raise ValueError('`table` must be a scaler (str, int, float), or a iterable of scalers of the same type.')
    tmp_key = H2OFrame.py_tmp_key()
    expr = '(= !{} (match %{} {} #{} ()))'.format(tmp_key, self.key(), rtable, nomatch)
    return H2OFrame._get_frame_from_rapids_string(expr, tmp_key, [])
