def show(self, noprint=False):
    '\n    Pretty print this H2OVec, or return values up to an iterator on an enclosing Frame\n\n    :param noprint: A boolean stating whether to print or to return data.\n    :return: If noprint is False, then self._expr is returned.\n    '
    if noprint:
        return self._expr.show(noprint=True)
    else:
        to_show = [[v] for v in self._expr.show(noprint=True)]
        nrows = (min(11, (len(to_show) + 1)) - 1)
        for i in range(1, min(11, (len(to_show) + 1)), 1):
            to_show[(i - 1)].insert(0, i)
        header = (((self._name + ' (first ') + str(nrows)) + ' row(s))')
        header = ['Row ID', header]
        h2o.H2ODisplay(to_show, header)
