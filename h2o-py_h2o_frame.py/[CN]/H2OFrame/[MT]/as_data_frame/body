def as_data_frame(self, use_pandas=True):
    "\n    Obtain the dataset as a python-local object (pandas frame if possible, list otherwise)\n\n    :param use_pandas: A flag specifying whether or not to attempt to coerce to Pandas.\n    :return: A local python object containing this H2OFrame instance's data.s\n    "
    self._eager()
    url = (((((('http://' + h2o.H2OConnection.ip()) + ':') + str(h2o.H2OConnection.port())) + '/3/DownloadDataset?frame_id=') + urllib.quote(self._id)) + '&hex_string=false')
    response = urllib2.urlopen(url)
    if (h2o.can_use_pandas() and use_pandas):
        import pandas
        return pandas.read_csv(response, low_memory=False)
    else:
        cr = csv.reader(response)
        rows = []
        for row in cr:
            rows.append(([''] if (row == []) else row))
        return rows
