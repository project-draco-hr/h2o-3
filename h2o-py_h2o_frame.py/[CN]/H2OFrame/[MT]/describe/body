def describe(self):
    '\n    Generate an in-depth description of this H2OFrame.\n\n    The description is a tabular print of the type, min, max, sigma, number of zeros,\n    and number of missing elements for each H2OVec in this H2OFrame.\n\n    :return: None (print to stdout)\n    '
    if ((self._vecs is None) or (self._vecs == [])):
        raise ValueError('Frame Removed')
    thousands_sep = h2o.H2ODisplay.THOUSANDS
    print 'Rows:', thousands_sep.format(len(self._vecs[0])), 'Cols:', thousands_sep.format(len(self))
    chunk_summary_tmp_key = H2OFrame.send_frame(self)
    chunk_dist_sum = h2o.frame(chunk_summary_tmp_key)['frames'][0]
    dist_summary = chunk_dist_sum['distribution_summary']
    chunk_summary = chunk_dist_sum['chunk_summary']
    h2o.removeFrameShallow(chunk_summary_tmp_key)
    chunk_summary.show()
    dist_summary.show()
    self.summary()
