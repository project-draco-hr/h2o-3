def __getitem__(self, i):
    if isinstance(i, int):
        return self._vecs[i]
    if isinstance(i, str):
        for v in self._vecs:
            if (i == v.name()):
                return v
        raise ValueError((('Name ' + i) + ' not in Frame'))
    if isinstance(i, slice):
        return H2OFrame(vecs=self._vecs[i])
    if isinstance(i, H2OVec):
        if (len(i) != len(self._vecs[0])):
            raise ValueError(((('len(vec)=' + len(self._vecs[0])) + ' cannot be broadcast across len(i)=') + len(i)))
        return H2OFrame(vecs=[x.row_select(i) for x in self._vecs])
    if isinstance(i, list):
        vecs = []
        for it in i:
            if isinstance(it, int):
                vecs += [self._vecs[it]]
                continue
            if isinstance(it, str):
                has_vec = False
                for v in self._vecs:
                    if (it == v.name()):
                        has_vec = True
                        vecs += [v]
                if (not has_vec):
                    raise ValueError((('Name ' + it) + ' not in Frame'))
        return H2OFrame(vecs=vecs)
    raise NotImplementedError
