def ifelse(self, yes, no):
    'Equivalent to [y if t else n for t,y,n in zip(self,yes,no)]\n\n    Based on the booleans in the test vector, the output has the values of the\n    yes and no vectors interleaved (or merged together).  All Frames must have\n    the same row count.  Single column frames are broadened to match wider\n    Frames.  Scalars are allowed, and are also broadened to match wider frames.\n    :param test: Frame of values treated as booleans; may be a single column\n    :param yes: Frame to use if [test] is true ; may be a scalar or single column\n    :param no:  Frame to use if [test] is false; may be a scalar or single column\n    :return: A H2OFrame\n    '
    return H2OFrame._expr(expr=ExprNode('ifelse', self, yes, no))
