def transpose(self):
    '\n    :return: The transpose of the H2OFrame.\n    '
    if ((self._vecs is None) or (self._vecs == [])):
        raise ValueError('Frame Removed')
    key = self.send_frame()
    tmp_key = H2OFrame.py_tmp_key()
    expr = '(= !{} (t %{}))'.format(tmp_key, key)
    h2o.rapids(expr)
    h2o.removeFrameShallow(key)
    j = h2o.frame(tmp_key)
    fr = j['frames'][0]
    rows = fr['rows']
    veckeys = fr['vec_ids']
    cols = fr['columns']
    colnames = [col['label'] for col in cols]
    vecs = H2OVec.new_vecs(zip(colnames, veckeys), rows)
    h2o.removeFrameShallow(tmp_key)
    return H2OFrame(vecs=vecs)
