def tail(self, rows=10, cols=200, show=False, as_pandas=False):
    "\n    Analgous to R's `tail` call on a data.frame. Display a digestible chunk of the H2OFrame starting from the end.\n\n    :param rows: Number of rows to display.\n    :param cols: Number of columns to display.\n    :return: None\n    "
    self._eager()
    nrows = min(self.nrow, rows)
    ncols = min(self.ncol, cols)
    start_idx = max((self.nrow - nrows), 0)
    tail = self[start_idx:(start_idx + nrows), :ncols]
    res = tail.as_data_frame(False)
    colnames = res.pop(0)
    if show:
        self._do_show(as_pandas, res, colnames)
    return tail
