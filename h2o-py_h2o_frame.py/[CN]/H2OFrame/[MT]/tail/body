def tail(self, rows=10, cols=200, **kwargs):
    nrows = min(self.nrow(), rows)
    ncols = min(self.ncol(), cols)
    colnames = self.names()[0:ncols]
    exprs = [self[c][(self.nrow() - nrows):self.nrow()] for c in range(ncols)]
    print 'Last', str(nrows), 'rows and first', str(ncols), 'columns: '
    if (nrows != 1):
        fr = H2OFrame.py_tmp_key()
        cbind = (('(= !' + fr) + ' (cbind %')
        cbind += (' %'.join([expr.eager() for expr in exprs]) + '))')
        res = h2o.rapids(cbind)
        h2o.remove(fr)
        tail_rows = [range(((self.nrow() - nrows) + 1), (self.nrow() + 1), 1)]
        tail_rows += [rows[0:nrows] for rows in res['head'][0:ncols]]
        tail = zip(*tail_rows)
        print tabulate.tabulate(tail, headers=(['Row ID'] + colnames))
    else:
        print tabulate.tabulate([([self.nrow()] + [expr.eager() for expr in exprs])], headers=(['Row ID'] + colnames))
    print 
