def tail(self, rows=10, cols=200):
    "\n    Analogous to R's `tail` call on a data.frame.\n\n    Parameters\n    ----------\n      rows : int, default 10\n      cols : int, default 200\n\n    Returns\n    -------\n      H2OFrame having shape (min(self.nrow, rows), min(self.ncol, cols)).\n    "
    nrows = min(self.nrow, rows)
    ncols = min(self.ncol, cols)
    start_idx = (self.nrow - nrows)
    return self[start_idx:(start_idx + nrows), :ncols]
