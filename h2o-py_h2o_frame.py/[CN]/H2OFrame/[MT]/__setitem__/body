def __setitem__(self, b, c):
    "\n    Replace a column in an H2OFrame.\n\n    :param b: A 0-based index or a column name.\n    :param c: The vector that 'b' is replaced with.\n    :return: Returns this H2OFrame.\n    "
    col_expr = None
    row_expr = None
    colname = None
    if isinstance(b, basestring):
        if (b in self.col_names):
            col_expr = self.col_names.index(b)
        else:
            col_expr = self._ncols
            colname = b
    elif isinstance(b, int):
        col_expr = b
    elif isinstance(b, tuple):
        col_expr = b[1]
        row_expr = b[0]
        if isinstance(col_expr, basestring):
            if (col_expr not in self.col_names):
                colname = col_expr
                col_expr = self._ncols
        elif isinstance(col_expr, slice):
            if ((col_expr.start is None) and (col_expr.stop is None)):
                col_expr = slice(0, self.ncol)
        elif (col_expr == (-1)):
            col_expr = slice(0, self.ncol)
    elif isinstance(b, H2OFrame):
        row_expr = b
    else:
        row_expr = slice(0, self.nrow)
    if (row_expr is None):
        row_expr = slice(0, self.nrow)
    if (col_expr is None):
        col_expr = slice(0, self.ncol)
    src = (c._frame() if isinstance(c, H2OFrame) else (float('nan') if (c is None) else c))
    expr = (ExprNode('=', self, src, col_expr, row_expr) if (colname is None) else ExprNode('=', self, src, col_expr, row_expr, colname))
    h2o.rapids(ExprNode._collapse_sb(expr._eager()), self._id)
    self._update()
