def _parse(self, rawkey, destination_frame='', header=None, separator=None, column_names=None, column_types=None, na_strings=None):
    setup = h2o.parse_setup(rawkey, destination_frame, header, separator, column_names, column_types, na_strings)
    p = {'destination_frame': _py_tmp_key(), 'parse_type': None, 'separator': None, 'single_quotes': None, 'check_header': None, 'number_columns': None, 'chunk_size': None, 'delete_on_done': True, 'blocking': False, 'column_types': None, }
    if setup['column_names']:
        p['column_names'] = None
    if setup['na_strings']:
        p['na_strings'] = None
    p.update({k: v for (k, v) in setup.iteritems() if (k in p)})
    p['source_frames'] = [h2o._quoted(src['name']) for src in setup['source_frames']]
    h2o.H2OJob(h2o.H2OConnection.post_json(url_suffix='Parse', **p), 'Parse').poll()
    self._id = p['destination_frame']
    self._update()
