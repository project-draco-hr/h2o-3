def summary(self):
    'Generate summary of the frame on a per column basis.'
    self._eager()
    fr_sum = h2o.H2OConnection.get_json((('Frames/' + urllib.quote(self._id)) + '/summary'))['frames'][0]
    type = ['type']
    mins = ['mins']
    mean = ['mean']
    maxs = ['maxs']
    sigma = ['sigma']
    zeros = ['zero_count']
    miss = ['missing_count']
    for v in fr_sum['columns']:
        type.append(v['type'])
        mins.append((v['mins'][0] if (v is not None) else v['mins']))
        mean.append(v['mean'])
        maxs.append((v['maxs'][0] if (v is not None) else v['maxs']))
        sigma.append(v['sigma'])
        zeros.append(v['zero_count'])
        miss.append(v['missing_count'])
    table = [type, mins, maxs, mean, sigma, zeros, miss]
    headers = self.names
    h2o.H2ODisplay(table, ([''] + headers), 'Column-by-Column Summary')
