def stratified_split(self, test_frac=0.2, seed=(-1)):
    '\n    Construct a column that can be used to perform a random stratified split.\n\n    Parameters\n    ----------\n      test_frac : float, default=0.2\n        The fraction of rows that will belong to the "test".\n      seed      : int\n        For seeding the random splitting.\n\n    Returns\n    -------\n      A categorical column of two levels "train" and "test".\n\n    Examples\n    --------\n      >>> my_stratified_split = my_frame["response"].stratified_split(test_frac=0.3,seed=12349453)\n      >>> train = my_frame[my_stratified_split=="train"]\n      >>> test  = my_frame[my_stratified_split=="test"]\n\n      # check the distributions among the initial frame, and the train/test frames match\n      >>> my_frame["response"].table()["Count"] / my_frame["response"].table()["Count"].sum()\n      >>> train["response"].table()["Count"] / train["response"].table()["Count"].sum()\n      >>> test["response"].table()["Count"] / test["response"].table()["Count"].sum()\n    '
    return self._newExpr('h2o.random_stratified_split', self, test_frac, seed)
