@staticmethod
def _handle_python_dicts(python_obj):
    for k in python_obj:
        v = python_obj[k]
        if isinstance(v, (tuple, list)):
            if H2OFrame._is_list_of_lists(v):
                raise ValueError('Values in the dictionary must be flattened!')
    python_obj = {k: (v if hasattr(v, '__iter__') else [v]) for (k, v) in python_obj.iteritems()}
    header = python_obj.keys()
    is_valid = all([re.match('^[a-zA-Z_][a-zA-Z0-9_.]*$', col) for col in header])
    if (not is_valid):
        raise ValueError('Did not get a valid set of column names! Must match the regular expression: ^[a-zA-Z_][a-zA-Z0-9_.]*$ ')
    rows = map(list, itertools.izip_longest(*python_obj.values()))
    data_to_write = [dict(zip(header, row)) for row in rows]
    return (header, data_to_write)
