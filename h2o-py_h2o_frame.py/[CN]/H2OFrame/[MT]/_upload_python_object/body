def _upload_python_object(self, python_obj, destination_frame=u'', header=((-1), 0, 1), separator=u'', column_names=None, column_types=None, na_strings=None):
    if isinstance(python_obj, (list, tuple)):
        (col_header, data_to_write) = _handle_python_lists(python_obj, header)
    elif isinstance(python_obj, (dict, collections.OrderedDict)):
        (col_header, data_to_write) = _handle_python_dicts(python_obj)
    elif (can_use_numpy() and can_use_pandas()):
        import numpy
        import pandas
        if isinstance(python_obj, numpy.ndarray):
            (col_header, data_to_write) = _handle_numpy_array(python_obj, header)
        elif isinstance(python_obj, pandas.DataFrame):
            (col_header, data_to_write) = _handle_pandas_data_frame(python_obj, header)
        else:
            raise ValueError((u'`python_obj` must be a tuple, list, dict, collections.OrderedDict, numpy.ndarray, or pandas.DataFrame. Got: ' + str(type(python_obj))))
    elif can_use_numpy():
        import numpy
        if isinstance(python_obj, numpy.ndarray):
            (col_header, data_to_write) = _handle_numpy_array(python_obj, header)
        else:
            raise ValueError((u'`python_obj` must be a tuple, list, dict, collections.OrderedDict, numpy.ndarray, or pandas.DataFrame. Got: ' + str(type(python_obj))))
    elif can_use_pandas():
        import pandas
        if isinstance(python_obj, pandas.DataFrame):
            (col_header, data_to_write) = _handle_pandas_data_frame(python_obj, header)
        else:
            raise ValueError((u'`python_obj` must be a tuple, list, dict, collections.OrderedDict, numpy.ndarray, or pandas.DataFrame. Got: ' + str(type(python_obj))))
    else:
        raise ValueError((u'`python_obj` must be a tuple, list, dict, collections.OrderedDict, numpy.ndarray, or pandas.DataFrame. Got: ' + str(type(python_obj))))
    if ((col_header is None) or (data_to_write is None)):
        raise ValueError(u'No data to write')
    (tmp_handle, tmp_path) = tempfile.mkstemp(suffix=u'.csv')
    tmp_file = os.fdopen(tmp_handle, u'w')
    csv_writer = csv.DictWriter(tmp_file, fieldnames=col_header, restval=None, dialect=u'excel', extrasaction=u'ignore', delimiter=',', quoting=csv.QUOTE_ALL)
    csv_writer.writeheader()
    header = 1
    if (column_names is None):
        column_names = col_header
    csv_writer.writerows(data_to_write)
    tmp_file.close()
    self._upload_parse(tmp_path, destination_frame, header, separator, column_names, column_types, na_strings)
    os.remove(tmp_path)
