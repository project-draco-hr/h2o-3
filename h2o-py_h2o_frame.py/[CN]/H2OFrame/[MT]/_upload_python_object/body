def _upload_python_object(self, python_obj, destination_frame=None, header=0, separator=u',', column_names=None, column_types=None, na_strings=None):
    assert_is_type(python_obj, list, tuple, dict, numpy_ndarray, pandas_dataframe)
    processor = (_handle_pandas_data_frame if is_type(python_obj, pandas_dataframe) else (_handle_numpy_array if is_type(python_obj, numpy_ndarray) else (_handle_python_dicts if is_type(python_obj, dict) else _handle_python_lists)))
    (col_header, data_to_write) = processor(python_obj, header)
    if ((col_header is None) or (data_to_write is None)):
        raise H2OValueError(u'No data to write')
    if (not column_names):
        column_names = col_header
    (tmp_handle, tmp_path) = tempfile.mkstemp(suffix=u'.csv')
    tmp_file = os.fdopen(tmp_handle, u'w')
    csv_writer = csv.writer(tmp_file, dialect=u'excel', quoting=csv.QUOTE_NONNUMERIC)
    csv_writer.writerow(column_names)
    for row in data_to_write:
        csv_writer.writerow([row.get(k, None) for k in col_header])
    tmp_file.close()
    self._upload_parse(tmp_path, destination_frame, 1, separator, column_names, column_types, na_strings)
    os.remove(tmp_path)
