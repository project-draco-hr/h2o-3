def _handle_text_key(self, text_key):
    '\n    Handle result of upload_file\n    :param test_key: A key pointing to raw text to be parsed\n    :return: Part of the H2OFrame constructor.\n    '
    setup = h2o.parse_setup(text_key)
    parse = h2o.parse(setup, H2OFrame.py_tmp_key(), first_line_is_header=1)
    self._id = parse['destination_frame']['name']
    self._col_names = cols = (parse['column_names'] if parse['column_names'] else [('C' + str(x)) for x in range(1, (len(parse['vec_ids']) + 1))])
    self._ncols = len(cols)
    self._nrows = rows = parse['rows']
    self._computed = True
    thousands_sep = h2o.H2ODisplay.THOUSANDS
    print 'Uploaded {} into cluster with {} rows and {} cols'.format(text_key, thousands_sep.format(rows), thousands_sep.format(len(cols)))
