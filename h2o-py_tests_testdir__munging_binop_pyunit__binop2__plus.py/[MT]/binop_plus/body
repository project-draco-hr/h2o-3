def binop_plus(ip, port):
    h2o.init(ip, port)
    iris = h2o.import_frame(path=h2o.locate('smalldata/iris/iris_wheader.csv'))
    (rows, cols) = iris.dim()
    iris.show()
    res = (iris + 5)
    (res_rows, res_cols) = res.dim()
    h2o_sums = []
    assert ((res_rows == rows) and (res_cols == cols)), 'dimension mismatch'
    for (x, y) in zip([sum([res[c][r].eager() for r in range(rows)]) for c in range((cols - 1))], [1626.5, 1208.1, 1313.8, 929.8]):
        assert (abs((x - y)) < 1e-07), 'unexpected column sums.'
    res = (5 + iris)
    (res_rows, res_cols) = res.dim()
    assert ((res_rows == rows) and (res_cols == cols)), 'dimension mismatch'
    try:
        res = (iris + iris[0])
        assert False, 'expected error. objects of different dimensions not supported.'
    except EnvironmentError:
        pass
    try:
        res = (iris[2] + iris)
        assert False, 'expected error. objects of different dimensions not supported.'
    except EnvironmentError:
        pass
    res = (iris[0] + iris[1])
    res.show()
    assert (abs((sum([res[i].eager() for i in range(rows)]) - 1334.6)) < 1e-07), 'expected different sum'
    res = (((iris[0] + iris[1]) + iris[2]) + iris[3])
    res.show()
    assert (abs((sum([res[i].eager() for i in range(rows)]) - 2078.2)) < 1e-07), 'expected different sum'
    res = (iris + iris)
    (res_rows, res_cols) = res.dim()
    assert ((res_rows == rows) and (res_cols == cols)), 'dimension mismatch'
    res = (iris[0:2] + iris[1:3])
    (res_rows, res_cols) = res.dim()
    assert ((res_rows == rows) and (res_cols == 2)), 'dimension mismatch'
    try:
        res = (iris + iris[0:3])
        assert False, 'expected error. frames are different dimensions.'
    except EnvironmentError:
        pass
