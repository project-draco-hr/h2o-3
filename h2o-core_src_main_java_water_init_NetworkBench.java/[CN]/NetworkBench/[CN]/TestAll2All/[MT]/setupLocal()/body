{
  _time=new long[H2O.CLOUD.size()][];
  final int myId=H2O.SELF.index();
  _time[myId]=new long[H2O.CLOUD.size()];
  addToPendingCount(H2O.CLOUD.size() - 1);
  for (int i=0; i < H2O.CLOUD.size(); ++i) {
    if (i != myId) {
      final int fi=i;
      H2O.submitTask(new H2OCountedCompleter(this){
        long t1;
        @Override public void compute2(){
          t1=System.currentTimeMillis();
          addToPendingCount(_msgCnt - 1);
          for (int j=0; j < _msgCnt; ++j)           new RPC(H2O.CLOUD._memary[fi],new SendRandomBytesTsk(_msgSz)).addCompleter(this).call();
        }
        @Override public void onCompletion(        CountedCompleter cc){
          long t2=System.currentTimeMillis();
          _time[myId][fi]=(t2 - t1);
        }
      }
);
    }
  }
}
