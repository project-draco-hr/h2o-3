def reconstruct(self, test_data, reverse_transform=False):
    'Reconstruct the training data from the GLRM model and impute all missing values.\n\n        Parameters\n        ----------\n          test_data : H2OFrame\n            The dataset upon which the H2O GLRM model was trained.\n          reverse_transform : logical\n            Whether the transformation of the training data during model-building should be reversed on the reconstructed frame.\n\n        Returns\n        -------\n          Return the approximate reconstruction of the training data.\n        '
    if ((test_data is None) or (test_data.nrow == 0)):
        raise ValueError('Must specify test data')
    j = H2OConnection.post_json(((('Predictions/models/' + self.model_id) + '/frames/') + test_data.frame_id), reconstruct_train=True, reverse_transform=reverse_transform)
    return h2o.get_frame(j['model_metrics'][0]['predictions']['frame_id']['name'])
