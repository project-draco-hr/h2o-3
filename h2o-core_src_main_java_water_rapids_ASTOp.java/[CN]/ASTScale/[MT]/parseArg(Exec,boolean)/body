{
  if (center) {
    if (!E.skipWS().hasNext())     throw new IllegalArgumentException("End of input unexpected. Badly formed AST.");
    String[] centers=E.peek() == '{' ? E.xpeek('{').parseString('}').split(";") : null;
    if (centers == null) {
      AST a;
      try {
        a=E._env.lookup((ASTId)E.skipWS().parse());
      }
 catch (      ClassCastException e) {
        e.printStackTrace();
        throw new IllegalArgumentException("Expected to get an ASTId. Badly formed AST.");
      }
      try {
        _center=((ASTNum)a).dbl() == 1;
        _centers=null;
      }
 catch (      ClassCastException e) {
        e.printStackTrace();
        throw new IllegalArgumentException("Expected to get a number for the `center` argument.");
      }
    }
 else {
      for (int i=0; i < centers.length; ++i)       centers[i]=centers[i].replace("\"","").replace("\'","");
      _centers=new double[centers.length];
      for (int i=0; i < centers.length; ++i)       _centers[i]=Double.valueOf(centers[i]);
    }
  }
 else {
    if (!E.skipWS().hasNext())     throw new IllegalArgumentException("End of input unexpected. Badly formed AST.");
    String[] centers=E.peek() == '{' ? E.xpeek('{').parseString('}').split(";") : null;
    if (centers == null) {
      AST a;
      try {
        a=E._env.lookup((ASTId)E.skipWS().parse());
      }
 catch (      ClassCastException e) {
        e.printStackTrace();
        throw new IllegalArgumentException("Expected to get an ASTId. Badly formed AST.");
      }
      try {
        _scale=((ASTNum)a).dbl() == 1;
        _scales=null;
      }
 catch (      ClassCastException e) {
        e.printStackTrace();
        throw new IllegalArgumentException("Expected to get a number for the `scale` argument.");
      }
    }
 else {
      for (int i=0; i < centers.length; ++i)       centers[i]=centers[i].replace("\"","").replace("\'","");
      _scales=new double[centers.length];
      for (int i=0; i < centers.length; ++i)       _scales[i]=Double.valueOf(centers[i]);
    }
  }
}
