{
  Frame act=e.popAry();
  Frame pre=e.popAry();
  OMatrixTask t=new OMatrixTask(_nclass).doAll((act.add(pre)));
  final int[][] O=t._O;
  double numerator=0;
  double denominator=0;
  for (int i=0; i < _nclass; ++i)   for (int j=0; j < _nclass; ++j) {
    double w_ij=(double)((i - j) * (i - j)) / (double)((_nclass - 1) * (_nclass - 1));
    double e_ij=(double)(t._aHist[i] * t._pHist[j]) / (double)act.numRows();
    numerator+=w_ij * O[i][j];
    denominator+=w_ij * e_ij;
  }
  e.push(new ValNum(1 - numerator / denominator));
}
