{
  AST ary=E.parse();
  AST a=E.parse();
  if (a instanceof ASTNum)   _const=((ASTNum)a)._d;
 else   throw new IllegalArgumentException("`constant` is expected to be a literal number. Got: " + a.getClass());
  a=E.parse();
  if (a instanceof ASTId) {
    AST b=E._env.lookup((ASTId)a);
    if (b instanceof ASTNum)     _narm=((ASTNum)b)._d == 1;
 else     throw new IllegalArgumentException("`na.rm` is expected to be oen of %TRUE, %FALSE, %T, %F. Got: " + ((ASTId)a)._id);
  }
  _combine_method=QuantileModel.CombineMethod.valueOf(E.nextStr().toUpperCase());
  E.eatEnd();
  ASTMad res=(ASTMad)clone();
  res._asts=new AST[]{ary};
  return res;
}
