{
  Frame f=e.popAry();
  if (f.numRows() == 1 && f.numCols() > 1) {
    double[] in=new double[f.numCols()];
    for (int i=0; i < in.length; ++i)     in[i]=f.vecs()[i].at(0);
    double[] out=map(null,in,null,null);
    Futures fs=new Futures();
    Key key=Vec.VectorGroup.VG_LEN1.addVecs(1)[0];
    AppendableVec v=new AppendableVec(key);
    NewChunk chunk=new NewChunk(v,0);
    for (    double d : out)     chunk.addNum(d);
    chunk.close(0,fs);
    Vec vec=v.close(fs);
    fs.blockForPending();
    Frame fr2=new Frame(vec);
    e.pushAry(fr2);
    return;
  }
  Frame f2=new MRTask(){
    @Override public void map(    Chunk c,    NewChunk nc){
      long start=c.start();
      for (int i=0; i < c._len; ++i)       if (c.at8(i) == 1)       nc.addNum(1 + start + i);
    }
  }
.doAll(1,f.anyVec()).outputFrame();
  e.pushAry(f2);
}
