{
  Frame f=e.popAry();
  Futures fs=new Futures();
  Key[] keys=Vec.VectorGroup.VG_LEN1.addVecs(f.numCols());
  Vec[] vecs=new Vec[keys.length];
  int max=0;
  for (int i=0; i < f.numCols(); ++i)   if (f.vec(i).isEnum())   if (max < f.vec(i).domain().length)   max=f.vec(i).domain().length;
  for (int i=0; i < f.numCols(); ++i) {
    AppendableVec v=new AppendableVec(keys[i]);
    NewChunk nc=new NewChunk(v,0);
    String[] dom=f.vec(i).domain();
    int numToPad=dom == null ? max : max - dom.length;
    if (dom != null)     for (int j=0; j < dom.length; ++j)     nc.addNum(j);
    for (int j=0; j < numToPad; ++j)     nc.addNA();
    nc.close(0,fs);
    vecs[i]=v.close(fs);
    vecs[i].setDomain(dom);
  }
  fs.blockForPending();
  Frame fr2=new Frame(Key.make(),null,vecs);
  DKV.put(fr2);
  e.pushAry(fr2);
}
