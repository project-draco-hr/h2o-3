{
  Frame f=e.popAry();
  Vec v;
  if (f.numCols() != 1)   throw new IllegalArgumentException("Must give a single numeric column.");
  if (f.anyVec().isEnum()) {
    v=Vec.makeSeq(0,(long)f.anyVec().domain().length,true);
    v.setDomain(f.anyVec().domain());
    DKV.put(v);
  }
 else {
    UniqTask t=new UniqTask().doAll(f);
    int nUniq=t._uniq.size();
    final ASTGroupBy.G[] uniq=t._uniq.keySet().toArray(new ASTGroupBy.G[nUniq]);
    v=Vec.makeZero(nUniq);
    new MRTask(){
      @Override public void map(      Chunk c){
        int start=(int)c.start();
        for (int i=0; i < c._len; ++i)         c.set(i,uniq[i + start]._ds[0]);
      }
    }
.doAll(v);
  }
  e.pushAry(new Frame(v));
}
