{
  Frame f=e.popAry();
  final int n=_n;
  Frame f2=new MRTask(){
    @Override public void map(    Chunk[] c,    NewChunk nc){
      int[] votes=new int[n + 1];
      for (int row=0; row < c[0]._len; ++row) {
        for (int i=0; i < votes.length; ++i)         votes[i]=0;
        for (int col=0; col < c.length; ++col) {
          votes[(int)c[col].at8(row)]++;
        }
        int i=0;
        int max=votes[i];
        int iter=0;
        while (iter < votes.length) {
          if (votes[iter] > max) {
            max=votes[i];
            i=iter;
          }
          iter++;
        }
        nc.addNum(i);
      }
    }
  }
.doAll(1,f).outputFrame();
  e.pushAry(f2);
}
