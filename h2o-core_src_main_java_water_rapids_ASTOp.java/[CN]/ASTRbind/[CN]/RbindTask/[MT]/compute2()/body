{
  addToPendingCount(_vecs.length - 1);
  boolean isEnum=_vecs[0].domain() != null;
  int[][] emaps=new int[_vecs.length][];
  if (isEnum) {
    HashMap<String,Integer> dmap=new HashMap<>();
    int c=0;
    for (int i=0; i < _vecs.length; ++i) {
      if (_vecs[i].get_type() == Vec.T_BAD)       continue;
      emaps[i]=new int[_vecs[i].domain().length];
      for (int j=0; j < emaps[i].length; ++j)       if (!dmap.containsKey(_vecs[i].domain()[j]))       dmap.put(_vecs[i].domain()[j],emaps[i][j]=c++);
 else       emaps[i][j]=dmap.get(_vecs[i].domain()[j]);
    }
    _dom=new String[dmap.size()];
    HashMap<Integer,String> inv=(HashMap<Integer,String>)invert(dmap);
    for (int s=0; s < _dom.length; ++s)     _dom[s]=inv.get(s);
  }
  int offset=0;
  for (int i=0; i < _vecs.length; ++i) {
    new RbindMRTask(this,emaps[i],_v,offset).asyncExec(_vecs[i]);
    offset+=_vecs[i].nChunks();
  }
}
