{
  ArrayList<AST> dblarys=new ArrayList<>();
  AST ary=E.parse();
  if (ary instanceof ASTId)   ary=Env.staticLookup((ASTId)ary);
  dblarys.add(ary);
  AST a;
  boolean broke=false;
  while (E.skipWS().hasNext()) {
    a=E.parse();
    if (a instanceof ASTId) {
      AST ast=E._env.lookup((ASTId)a);
      if (ast instanceof ASTFrame || ast instanceof ASTRaft) {
        dblarys.add(a);
      }
 else {
        broke=true;
        break;
      }
    }
 else     if (a instanceof ASTFrame || a instanceof ASTSlice || a instanceof ASTBinOp|| a instanceof ASTUniOp|| a instanceof ASTReducerOp|| a instanceof ASTRaft) {
      dblarys.add(a);
    }
 else {
      broke=true;
      break;
    }
  }
  if (broke)   E.rewind();
  Collections.reverse(dblarys);
  ASTRbind res=(ASTRbind)clone();
  res._asts=dblarys.toArray(new AST[argcnt=dblarys.size()]);
  return res;
}
