{
  String[][] dom=new String[1][];
  dom[0]=domain;
  final byte _type=vv.get_type();
  return new MRTask(){
    @Override public void map(    Chunk c,    NewChunk nc){
      ValueString vstr=new ValueString();
      for (int i=0; i < c._len; ++i) {
switch (_type) {
case Vec.T_BAD:
          break;
case Vec.T_STR:
        nc.addStr(c.atStr(vstr,i));
      break;
case Vec.T_UUID:
    nc.addUUID(c,i);
  break;
case Vec.T_NUM:
case Vec.T_ENUM:
case Vec.T_TIME:
nc.addNum(c.atd(i));
break;
default :
if (_type > Vec.T_TIME && _type <= Vec.T_TIMELAST) nc.addNum(c.atd(i));
 else throw new IllegalArgumentException("Unsupported vector type: " + _type);
break;
}
}
}
}
.doAll(1,vv).outputFrame(null,dom).anyVec();
}
