{
  if (env.isNum())   return;
  Frame fr=env.popAry();
  if (fr.numCols() > 1 && fr.numRows() > 1)   throw new IllegalArgumentException("mean does not apply to multiple cols.");
  for (  Vec v : fr.vecs())   if (v.isEnum())   throw new IllegalArgumentException("mean only applies to numeric vector.");
  if (fr.numCols() > 1) {
    double mean=0;
    for (    Vec v : fr.vecs())     mean+=v.at(0);
    env.push(new ValNum(mean / fr.numCols()));
  }
 else {
    MeanNARMTask t=new MeanNARMTask(_narm).doAll(fr.anyVec()).getResult();
    if (t._rowcnt == 0 || Double.isNaN(t._sum)) {
      double ave=Double.NaN;
      env.push(new ValNum(ave));
    }
 else {
      double ave=t._sum / t._rowcnt;
      env.push(new ValNum(ave));
    }
  }
}
