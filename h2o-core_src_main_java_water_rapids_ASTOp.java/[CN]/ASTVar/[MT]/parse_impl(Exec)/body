{
  AST ary=E.parse();
  if (ary instanceof ASTId)   ary=Env.staticLookup((ASTId)ary);
  AST y=E.skipWS().parse();
  if (y instanceof ASTString && ((ASTString)y)._s.equals("null")) {
    _ynull=true;
    y=ary;
  }
 else   if (y instanceof ASTId)   y=Env.staticLookup((ASTId)y);
  AST a=E._env.lookup((ASTId)E.skipWS().parse());
  try {
    _narm=((ASTNum)a).dbl() == 1;
  }
 catch (  ClassCastException e) {
    e.printStackTrace();
    throw new IllegalArgumentException("Argument `na.rm` expected to be a number.");
  }
  ASTString use;
  try {
    use=(ASTString)E.skipWS().parse();
  }
 catch (  ClassCastException e) {
    e.printStackTrace();
    throw new IllegalArgumentException("Argument `use` expected to be a string.");
  }
  ASTVar res=(ASTVar)clone();
  res._asts=new AST[]{use,y,ary};
  return res;
}
