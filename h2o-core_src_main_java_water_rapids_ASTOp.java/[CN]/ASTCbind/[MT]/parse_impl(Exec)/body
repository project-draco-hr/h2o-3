{
  ArrayList<AST> dblarys=new ArrayList<>();
  AST ary=E.parse();
  if (ary instanceof ASTId)   ary=Env.staticLookup((ASTId)ary);
  dblarys.add(ary);
  AST a=null;
  boolean broke=false;
  while (E.skipWS().hasNext()) {
    a=E.parse();
    if (a instanceof ASTId) {
      AST ast=E._env.lookup((ASTId)a);
      if (ast instanceof ASTFrame) {
        dblarys.add(a);
      }
 else {
        broke=true;
        break;
      }
    }
 else     if (a instanceof ASTFrame || a instanceof ASTSlice || a instanceof ASTBinOp|| a instanceof ASTUniPrefixOp|| a instanceof ASTUniOp|| a instanceof ASTReducerOp) {
      dblarys.add(a);
    }
 else {
      broke=true;
      break;
    }
  }
  if (broke) {
    if (a == null)     E.rewind();
 else     E.rewind(a);
  }
  AST[] arys=new AST[argcnt=dblarys.size()];
  for (int i=0; i < dblarys.size(); i++)   arys[i]=dblarys.get(i);
  ASTCbind res=(ASTCbind)clone();
  res._asts=arys;
  return res;
}
