{
  Frame f=parse_test_file(Key.make("iris.csv"),"smalldata/iris/iris.csv");
  long numRows=f.numRows();
  Assert.assertEquals(150,numRows);
  try {
    SplitFrame sf=new SplitFrame(f,new double[]{0.5,0.5},new Key[]{Key.make("train.hex"),Key.make("test.hex")});
    sf.exec().get();
    Assert.assertTrue("The job is not in STOPPED state, but in ",sf._job.isStopped());
    Key[] ksplits=sf._destination_frames;
    Frame[] fsplits=new Frame[ksplits.length];
    for (int i=0; i < ksplits.length; i++)     fsplits[i]=DKV.get(ksplits[i]).get();
    Assert.assertEquals("Number of splits",2,ksplits.length);
    Assert.assertEquals("1. split 75rows",75,fsplits[0].numRows());
    Assert.assertEquals("2. split 75rows",75,fsplits[1].numRows());
    fsplits[0].delete();
    fsplits[1].delete();
  }
  finally {
    f.delete();
  }
}
