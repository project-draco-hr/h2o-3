{
  Frame f=createFrame(fname,chunkLayout,data);
  double[] ratios=ard(0.5f);
  Frame[] splits=null;
  long len=ArrayUtils.sum(chunkLayout);
  Assert.assertEquals("Number of rows should match to chunk layout.",len,f.numRows());
  String[] split0=new String[(int)len / 2];
  String[] split1=new String[(int)(len - split0.length)];
  int idx=0;
  for (  String[] d : data) {
    for (    String s : d)     if (idx < split0.length)     split0[idx++]=s;
 else     split1[idx++ - split0.length]=s;
  }
  try {
    FrameSplitter fs=new FrameSplitter(f,ratios,generateNumKeys(f._key,ratios.length + 1),null);
    H2O.submitTask(fs).join();
    splits=fs.getResult();
    assertValues(splits[0],split0);
    assertValues(splits[1],split1);
  }
  finally {
    f.delete();
    if (splits != null)     for (    Frame sf : splits)     if (sf != null)     sf.delete();
  }
}
