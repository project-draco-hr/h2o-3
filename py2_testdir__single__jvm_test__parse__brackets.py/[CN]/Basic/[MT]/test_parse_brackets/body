def test_parse_brackets(self):
    SYNDATASETS_DIR = h2o.make_syn_dir()
    tryList = [(10, 1000, 'cA', 200, 200), (10, 2000, 'cA', 200, 200), (10, 4000, 'cA', 200, 200)]
    for (rowCount, colCount, hex_key, timeoutSecs, timeoutSecs2) in tryList:
        SEEDPERFILE = random.randint(0, sys.maxint)
        csvFilename = (((((('syn_' + str(SEEDPERFILE)) + '_') + str(rowCount)) + 'x') + str(colCount)) + '.csv')
        csvPathname = ((SYNDATASETS_DIR + '/') + csvFilename)
        print '\nCreating random', csvPathname
        write_syn_dataset(csvPathname, rowCount, colCount, SEEDPERFILE)
        parseResult = h2i.import_parse(path=csvPathname, schema='local', hex_key=hex_key, timeoutSecs=timeoutSecs, doSummary=False, column_names=None, intermediateResults=DO_INTERMEDIATE_RESULTS)
        pA = h2o_cmd.ParseObj(parseResult, expectedNumRows=rowCount, expectedNumCols=colCount)
        print pA.numRows
        print pA.numCols
        print pA.parse_key
        iA = h2o_cmd.InspectObj(pA.parse_key, expectedNumRows=rowCount, expectedNumCols=colCount, expectedMissinglist=[])
        print 'Skipping the delete keys for now'
        if (1 == 0):
            h2i.delete_keys_at_all_nodes()
