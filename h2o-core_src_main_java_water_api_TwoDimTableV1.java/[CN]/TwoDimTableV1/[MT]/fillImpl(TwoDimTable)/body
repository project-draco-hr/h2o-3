{
  final int rows=data[0].length;
  assert(rows == rowcount);
  final int cols=data.length + 1;
  String tableHeader=name;
  String colHeaderForRowHeaders=columns[0].name;
  String[] rowHeaders=new String[rows];
  for (int r=0; r < rows; ++r) {
    rowHeaders[r]=data[0][r];
  }
  String[] colHeaders=new String[cols];
  colHeaders[0]="";
  for (int c=1; c < cols; ++c) {
    colHeaders[c]=columns[c].name;
  }
  String[] colTypes=new String[cols];
  colTypes[0]="";
  for (int c=1; c < cols; ++c) {
    colTypes[c]=columns[c].type;
  }
  String[] colFormats=new String[cols];
  colFormats[0]="%s";
  for (int c=1; c < cols; ++c) {
    colFormats[c]=columns[c].format;
  }
  String[][] strCellValues=new String[rows][cols];
  double[][] dblCellValues=new double[rows][cols];
  for (int r=0; r < data[0].length; ++r) {
    for (int c=0; c < data.length; ++c) {
      try {
        if (columns[c].format == "string") {
          strCellValues[r][c]=data[c][r];
        }
 else         if (columns[c].format == "double") {
          dblCellValues[r][c]=Double.parseDouble(data[c][r]);
        }
 else         if (columns[c].format == "float") {
          dblCellValues[r][c]=Float.parseFloat(data[c][r]);
        }
 else         if (columns[c].format == "integer") {
          dblCellValues[r][c]=Integer.parseInt(data[c][r]);
        }
 else         if (columns[c].format == "long") {
          dblCellValues[r][c]=Long.parseLong(data[c][r]);
        }
 else         throw H2O.unimpl();
      }
 catch (      ClassCastException e) {
        throw new RuntimeException(e);
      }
    }
  }
  return new TwoDimTable(tableHeader,rowHeaders,colHeaders,colTypes,colFormats,colHeaderForRowHeaders,strCellValues,dblCellValues);
}
