{
  Val val=stk.track(asts[1].exec(env));
switch (val.type()) {
case Val.NUM:
    return new ValNum(op(val.getNum()));
case Val.FRM:
  Frame fr=val.getFrame();
return new ValFrame(new MRTask(){
  @Override public void map(  Chunk cs[],  NewChunk ncs[]){
    for (int col=0; col < cs.length; col++) {
      Chunk c=cs[col];
      NewChunk nc=ncs[col];
      for (int i=0; i < c._len; i++)       nc.addNum(c.isNA(i) ? 1 : 0);
    }
  }
}
.doAll(fr.numCols(),fr).outputFrame());
case Val.STR:
return new ValNum(val.getStr() == null ? 1 : 0);
default :
throw H2O.unimpl("is.na unimpl: " + val.getClass());
}
}
