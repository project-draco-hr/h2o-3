{
  long needed=(long)sizeHint - _bb.remaining() + _bb.capacity();
  if (needed > Integer.MAX_VALUE) {
    throw new IllegalArgumentException("Cannot allocate more than 2GB array: sizeHint=" + sizeHint + ", "+ "needed="+ needed+ ", bb.remaining()="+ _bb.remaining()+ ", bb.capacity()="+ _bb.capacity());
  }
  if ((_h2o == null && _chan == null) || (_bb.hasArray() && needed < MTU)) {
    byte[] ary=_bb.array();
    int newLen=(int)Math.min(1L << (water.util.MathUtils.log2(needed) + 1),Integer.MAX_VALUE - 1L);
    int oldpos=_bb.position();
    _bb=ByteBuffer.wrap(MemoryManager.arrayCopyOfRange(ary,0,newLen),oldpos,newLen - oldpos).order(ByteOrder.nativeOrder());
  }
 else   if (_bb.capacity() != BBP_BIG._size) {
    int oldPos=_bb.position();
    _bb.flip();
    _bb=BBP_BIG.make().put(_bb);
    _bb.position(oldPos);
  }
  return _bb;
}
