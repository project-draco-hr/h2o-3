{
  String typeCast=_inTypes[ArrayUtils.indexOf(_inNames,_oldCol)].equals("Numeric") ? "double" : "String";
  if (_multiColReturn) {
    StringBuilder sb=new StringBuilder("    @Override public RowData transform(RowData row) {\n" + (paramIsRow() ? addRowParam() : "") + "     "+ _newColTypes+ "[] res = GenMunger."+ lookup(_fun)+ "(("+ typeCast+ ")row.get(\""+ _oldCol+ "\"), _params);\n");
    for (int i=0; i < _newCol.length; i++)     sb.append("      row.put(\"" + _newCol[i] + "\", res["+ i+ "]);\n");
    sb.append("      return row;\n" + "    }\n");
    return sb.toString();
  }
 else {
    return "    @Override public RowData transform(RowData row) {\n" + (paramIsRow() ? addRowParam() : "") + "      "+ _newColTypes+ " res = GenMunger."+ lookup(_fun)+ "(("+ typeCast+ ")row.get(\""+ _oldCol+ "\"), _params);\n"+ "      row.put(\""+ _newCol[0]+ "\", res);\n"+ "      return row;\n"+ "    }\n";
  }
}
