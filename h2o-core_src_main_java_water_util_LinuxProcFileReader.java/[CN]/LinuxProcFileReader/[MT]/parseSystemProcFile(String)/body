{
  if (s == null)   return;
  BufferedReader reader=new BufferedReader(new StringReader(s));
  try {
    String line=reader.readLine();
    Matcher m=sysTicksPattern.matcher(line);
    if (!m.matches())     return;
    int matchGroupBase=0;
    long systemUserTicks=0;
    long systemSystemTicks=0;
    long systemOtherTicks=0;
    systemUserTicks+=Long.parseLong(m.group(1 + matchGroupBase));
    systemOtherTicks+=Long.parseLong(m.group(2 + matchGroupBase));
    systemSystemTicks+=Long.parseLong(m.group(3 + matchGroupBase));
    _systemIdleTicks=Long.parseLong(m.group(4 + matchGroupBase));
    systemOtherTicks+=Long.parseLong(m.group(5 + matchGroupBase));
    systemSystemTicks+=Long.parseLong(m.group(6 + matchGroupBase));
    systemSystemTicks+=Long.parseLong(m.group(7 + matchGroupBase));
    _systemTotalTicks=systemUserTicks + systemOtherTicks + systemSystemTicks+ _systemIdleTicks;
    int cpu=0;
    line=reader.readLine();
    while (line != null) {
      m=cpuTicksPattern.matcher(line);
      if (!m.matches())       break;
      matchGroupBase=1;
      long cpuUserTicks=0;
      long cpuSystemTicks=0;
      long cpuOtherTicks=0;
      long cpuIdleTicks=0;
      cpuUserTicks+=Long.parseLong(m.group(1 + matchGroupBase));
      cpuOtherTicks+=Long.parseLong(m.group(2 + matchGroupBase));
      cpuSystemTicks+=Long.parseLong(m.group(3 + matchGroupBase));
      cpuIdleTicks+=Long.parseLong(m.group(4 + matchGroupBase));
      cpuOtherTicks+=Long.parseLong(m.group(5 + matchGroupBase));
      cpuSystemTicks+=Long.parseLong(m.group(6 + matchGroupBase));
      cpuSystemTicks+=Long.parseLong(m.group(7 + matchGroupBase));
      CPUTICKS[cpu][0]=cpuUserTicks;
      CPUTICKS[cpu][1]=cpuSystemTicks;
      CPUTICKS[cpu][2]=cpuOtherTicks;
      CPUTICKS[cpu][3]=cpuIdleTicks;
      cpu++;
      line=reader.readLine();
    }
  }
 catch (  IOException _) {
  }
}
