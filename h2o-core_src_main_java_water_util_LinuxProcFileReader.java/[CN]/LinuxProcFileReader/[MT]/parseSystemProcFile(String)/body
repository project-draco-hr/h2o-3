{
  if (s == null)   return;
  try {
    BufferedReader reader=new BufferedReader(new StringReader(s));
    String line=reader.readLine();
{
      Pattern p=Pattern.compile("cpu\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+).*");
      Matcher m=p.matcher(line);
      boolean b=m.matches();
      if (!b) {
        return;
      }
      int matchGroupBase=0;
      long systemUserTicks=0;
      long systemSystemTicks=0;
      long systemOtherTicks=0;
      _systemIdleTicks=0;
      systemUserTicks+=Long.parseLong(m.group(1 + matchGroupBase));
      systemOtherTicks+=Long.parseLong(m.group(2 + matchGroupBase));
      systemSystemTicks+=Long.parseLong(m.group(3 + matchGroupBase));
      _systemIdleTicks+=Long.parseLong(m.group(4 + matchGroupBase));
      systemOtherTicks+=Long.parseLong(m.group(5 + matchGroupBase));
      systemSystemTicks+=Long.parseLong(m.group(6 + matchGroupBase));
      systemSystemTicks+=Long.parseLong(m.group(7 + matchGroupBase));
      _systemTotalTicks=systemUserTicks + systemOtherTicks + systemSystemTicks+ _systemIdleTicks;
    }
    _cpuTicks=new ArrayList<long[]>();
    line=reader.readLine();
    while (line != null) {
      Pattern p=Pattern.compile("cpu(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+).*");
      Matcher m=p.matcher(line);
      boolean b=m.matches();
      if (!b) {
        break;
      }
      int matchGroupBase=1;
      long cpuUserTicks=0;
      long cpuSystemTicks=0;
      long cpuOtherTicks=0;
      long cpuIdleTicks=0;
      cpuUserTicks+=Long.parseLong(m.group(1 + matchGroupBase));
      cpuOtherTicks+=Long.parseLong(m.group(2 + matchGroupBase));
      cpuSystemTicks+=Long.parseLong(m.group(3 + matchGroupBase));
      cpuIdleTicks+=Long.parseLong(m.group(4 + matchGroupBase));
      cpuOtherTicks+=Long.parseLong(m.group(5 + matchGroupBase));
      cpuSystemTicks+=Long.parseLong(m.group(6 + matchGroupBase));
      cpuSystemTicks+=Long.parseLong(m.group(7 + matchGroupBase));
      long[] oneCpuTicks={cpuUserTicks,cpuSystemTicks,cpuOtherTicks,cpuIdleTicks};
      _cpuTicks.add(oneCpuTicks);
      line=reader.readLine();
    }
  }
 catch (  Exception ignore) {
  }
}
