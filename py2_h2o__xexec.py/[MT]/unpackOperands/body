def unpackOperands(operands, parent=None, item=True, lastOpr=None):
    lastOpr = None

    def addItem(opr):
        global lastOpr
        if (isinstance(opr, Else) and (not (lastOpr and isinstance(lastOpr, If)))):
            raise Exception('%s unpackOperands, Else without open If, %s', (parent, opr))
        if item:
            operandList.append(Item(opr))
        else:
            operandList.append(opr)
        lastOpr = opr
    if (operands is None):
        raise Exception(('%s unpackOperands no operands: %s' % (parent, operands)))
    operandList = []
    if isinstance(operands, (list, tuple)):
        for opr in operands:
            if (not isinstance(opr, (list, tuple))):
                addItem(opr)
            else:
                for opr2 in opr:
                    addItem(opr2)
    else:
        addItem(operands)
    if ((operandList is None) or (len(operandList) == 0)):
        raise Exception(('%s unpackOperands operandList is None or empty: %s' % (parent, operandList)))
    if parent:
        print ('%s: %s' % (parent, map(str, operandList)))
    return operandList
