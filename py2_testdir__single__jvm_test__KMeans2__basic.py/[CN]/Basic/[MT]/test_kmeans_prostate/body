def test_kmeans_prostate(self):
    importFolderPath = 'logreg'
    csvFilename = 'prostate.csv'
    hex_key = 'prostate.hex'
    csvPathname = ((importFolderPath + '/') + csvFilename)
    parseResult = h2i.import_parse(bucket='smalldata', path=csvPathname, hex_key=hex_key, checkHeader=1, timeoutSecs=180, doSummary=False)
    (numRows, numCols, parse_key) = h2o_cmd.infoFromParse(parseResult)
    inspectResult = h2o_cmd.runInspect(key=parse_key)
    (missingList, labelList, numRows, numCols) = h2o_cmd.infoFromInspect(inspectResult)
    expected = [([0.37, 65.77, 1.07, 2.23, 1.11, 10.49, 4.24, 6.31], 215, 36955), ([0.36, 66.44, 1.09, 2.21, 1.06, 10.84, 34.16, 6.31], 136, 46045), ([0.83, 66.17, 1.21, 2.86, 1.34, 73.3, 15.57, 7.31], 29, 33412)]
    allowedDelta = (0.01, 0.01, 0.01)
    labelListUsed = list(labelList)
    labelListUsed.remove('ID')
    numColsUsed = (numCols - 1)
    for trial in range(5):
        kmeansSeed = random.randint(0, sys.maxint)
        parameters = {'validation_frame': parse_key, 'ignored_columns': '[ID]', 'score_each_iteration': False, 'K': 3, 'max_iters': 500, 'normalize': False, 'seed': kmeansSeed, 'init': 'PlusPlus', }
        model_key = 'prostate_k.hex'
        kmeansResult = h2o.n0.build_model(algo='kmeans', destination_key=model_key, training_frame=parse_key, parameters=parameters, timeoutSecs=10)
        modelResult = h2o.n0.models(key=model_key)
        h2o_cmd.runStoreView()
        (tuplesSorted, iters, mse, names) = h2o_kmeans.simpleCheckKMeans(self, modelResult, parameters, numRows, numColsUsed, labelListUsed)
        (ids, mses, rows, clusters) = zip(*tuplesSorted)
