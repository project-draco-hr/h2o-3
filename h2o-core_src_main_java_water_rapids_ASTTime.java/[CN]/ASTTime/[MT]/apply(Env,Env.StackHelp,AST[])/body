{
  Val val=asts[1].exec(env);
switch (val.type()) {
case Val.NUM:
    double d=val.getNum();
  return new ValNum(Double.isNaN(d) ? d : op(new MutableDateTime(0),d));
case Val.FRM:
Frame fr=stk.track(val).getFrame();
if (fr.numCols() > 1) throw water.H2O.unimpl();
return new ValFrame(new MRTask(){
@Override public void map(Chunk chk,NewChunk cres){
MutableDateTime mdt=new MutableDateTime(0,ParseTime.getTimezone());
for (int i=0; i < chk._len; i++) cres.addNum(chk.isNA(i) ? Double.NaN : op(mdt,chk.at8(i)));
}
}
.doAll_numericResult(1,fr).outputFrame(fr._names,factors()));
default :
throw water.H2O.fail();
}
}
