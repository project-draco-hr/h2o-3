{
  int nodeidx=s.nodeidx;
  if ((nodeidx < -1) || (nodeidx >= H2O.CLOUD.size())) {
    throw new IllegalArgumentException("node does not exist");
  }
  String filename=s.name;
  if (filename != null) {
    if (filename.contains(File.separator)) {
      throw new IllegalArgumentException("filename may not contain File.separator character");
    }
  }
  GetLogTask t=new GetLogTask();
  t.name=filename;
  if (nodeidx == -1) {
    try {
      t.doIt();
    }
 catch (    Exception e) {
      Log.err(e);
    }
  }
 else {
    Log.trace("GetLogTask starting to node " + nodeidx + "...");
    H2ONode node=H2O.CLOUD._memary[nodeidx];
    new RPC<>(node,t).call().get();
    Log.trace("GetLogTask completed to node " + nodeidx);
  }
  if (!t.success) {
    throw new RuntimeException("GetLogTask failed");
  }
  s.log=t.log;
  return s;
}
