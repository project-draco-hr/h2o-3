{
  chunk_counts=new long[chunkTypes.length];
  chunk_byte_sizes=new long[chunkTypes.length];
  byte_size_per_node=new long[H2O.CLOUD.size()];
  for (  Chunk c : cs) {
    boolean found=false;
    for (int j=0; j < chunkTypes.length; ++j) {
      if (c.getClass().getSimpleName().equals(chunkTypes[j] + "Chunk")) {
        found=true;
        chunk_counts[j]++;
        chunk_byte_sizes[j]+=c.byteSize();
        byte_size_per_node[H2O.SELF.index()]+=c.byteSize();
      }
    }
    if (!found) {
      throw H2O.unimpl();
    }
  }
}
