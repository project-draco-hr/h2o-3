{
  Schema.Type typ=s.getType();
switch (typ) {
case BOOLEAN:
case INT:
case LONG:
case FLOAT:
case DOUBLE:
case ENUM:
case STRING:
case NULL:
    return true;
case UNION:
  List<Schema> unionSchemas=s.getTypes();
if (unionSchemas.size() == 1) {
  return isSupportedSchema(unionSchemas.get(0));
}
 else if (unionSchemas.size() == 2) {
  Schema s1=unionSchemas.get(0);
  Schema s2=unionSchemas.get(1);
  return s1.getType().equals(Schema.Type.NULL) && isSupportedSchema(s2) || s2.getType().equals(Schema.Type.NULL) && isSupportedSchema(s1);
}
default :
return false;
}
}
