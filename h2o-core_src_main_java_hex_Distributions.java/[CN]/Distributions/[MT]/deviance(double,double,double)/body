{
switch (distribution) {
case AUTO:
case gaussian:
    f=link(f);
  return w * (y - f) * (y - f);
case bernoulli:
f=link(f);
return -2 * w * (y * f - log(1 + exp(f)));
case poisson:
f=link(f);
return -2 * w * (y * f - exp(f));
case gamma:
f=link(f);
return 2 * w * (y * exp(-f) + f);
case tweedie:
assert(p > 1 && p < 2);
f=link(f);
return 2 * w * (Math.pow(y,2 - p) / ((1 - p) * (2 - p)) - y * exp(f * (1 - p)) / (1 - p) + exp(f * (2 - p)) / (2 - p));
default :
throw H2O.unimpl();
}
}
