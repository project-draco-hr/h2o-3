{
  final long checksum=params.checksum();
  Key<Model> key=grid.getModelKey(checksum);
  if (key != null) {
    if (DKV.get(key) == null) {
      Log.info("GridSearch.buildModel(): model with these parameters was built but removed, rebuilding; checksum: " + checksum);
    }
 else {
      Log.info("GridSearch.buildModel(): model with these parameters already exists, skipping; checksum: " + checksum);
      return key.get();
    }
  }
  final Key<Model>[] modelKeys=KeySnapshot.globalSnapshot().filter(new KeySnapshot.KVFilter(){
    @Override public boolean filter(    KeySnapshot.KeyInfo k){
      return Value.isSubclassOf(k._type,Model.class) && ((Model)k._key.get())._parms.checksum() == checksum;
    }
  }
).keys();
  if (modelKeys.length > 0) {
    grid.putModel(checksum,modelKeys[0]);
    return modelKeys[0].get();
  }
  Key<Model> result=Key.make(protoModelKey + paramsIdx);
  Model m=(Model)startBuildModel(result,params,grid).dest().get();
  grid.putModel(checksum,result);
  return m;
}
