{
  Model model=null;
  String protoModelKey=_hyperSpaceWalker.getParams()._model_id == null ? grid._key + "_model_" : _hyperSpaceWalker.getParams()._model_id.toString() + H2O.calcNextUniqueModelId("") + "_";
  try {
    HyperSpaceWalker.HyperSpaceIterator<MP> it=_hyperSpaceWalker.iterator();
    int counter=0;
    while (it.hasNext(model)) {
      if (_job.stop_requested())       return;
      MP params;
      try {
        params=it.nextModelParameters(model);
        try {
          model=buildModel(params,grid,counter++,protoModelKey);
        }
 catch (        RuntimeException e) {
          Log.warn("Grid search: model builder for parameters " + params + " failed! Exception: ",e);
          grid.appendFailedModelParameters(params,e);
        }
      }
 catch (      IllegalArgumentException e) {
        Log.warn("Grid search: construction of model parameters failed! Exception: ",e);
        Object[] rawParams=it.getCurrentRawParameters();
        grid.appendFailedModelParameters(rawParams,e);
      }
 finally {
        _job.update(1);
        grid.update(_job);
      }
    }
  }
  finally {
    grid.unlock(_job);
  }
}
