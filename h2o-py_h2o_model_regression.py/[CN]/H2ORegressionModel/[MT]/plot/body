def plot(self, timestep=u'AUTO', metric=u'AUTO', **kwargs):
    u'\n        Plots training set (and validation set if available) scoring history for an H2ORegressionModel. The timestep and metric\n        arguments are restricted to what is available in its scoring history.\n\n        :param timestep: A unit of measurement for the x-axis.\n        :param metric: A unit of measurement for the y-axis.\n        :return: A scoring history plot.\n        '
    if (self._model_json[u'algo'] in (u'deeplearning', u'drf', u'gbm')):
        if (metric == u'AUTO'):
            metric = u'rmse'
        elif (metric not in (u'rmse', u'deviance', u'mae')):
            raise ValueError(u'metric for H2ORegressionModel must be one of: AUTO, rmse, deviance, or mae')
    self._plot(timestep=timestep, metric=metric, **kwargs)
