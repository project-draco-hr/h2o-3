{
  int origLength=origPoints.length;
  if (newLength <= origLength || origLength <= 1)   return origPoints;
  int extraPoints=newLength - origLength;
  int extraPointsPerBin=extraPoints / (origLength - 1);
  double[] res=new double[newLength];
  int pos=0;
  int rem=extraPoints - extraPointsPerBin * (origLength - 1);
  for (int i=0; i < origLength - 1; ++i) {
    double startPos=origPoints[i];
    double delta=origPoints[i + 1] - startPos;
    int ext=extraPointsPerBin + (i < rem ? 1 : 0);
    res[pos++]=startPos;
    for (int j=0; j < ext; ++j)     res[pos++]=startPos + (j + 0.5) / ext * delta;
  }
  res[pos]=origPoints[origLength - 1];
  return res;
}
