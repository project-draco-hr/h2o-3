{
  try {
    startTransaction(request.getHeader("User-Agent"));
    String uri=request.getServletPath();
    Properties headers=new Properties();
    Enumeration<String> en=request.getHeaderNames();
    while (en.hasMoreElements()) {
      String key=en.nextElement();
      String value=request.getHeader(key);
      headers.put(key,value);
    }
    Properties parms=new Properties();
    Map<String,String[]> parameterMap;
    parameterMap=request.getParameterMap();
    for (    Map.Entry<String,String[]> entry : parameterMap.entrySet()) {
      String key=entry.getKey();
      String[] values=entry.getValue();
      for (      String value : values) {
        parms.put(key,value);
      }
    }
    NanoHTTPD.Response resp=water.api.RequestServer.SERVER.serve(uri,method,headers,parms);
    String choppedNanoStatus=resp.status.substring(0,3);
    assert(choppedNanoStatus.length() == 3);
    int sc=Integer.parseInt(choppedNanoStatus);
    setResponseStatus(response,sc);
    response.setContentType(resp.mimeType);
    Properties header=resp.header;
    Enumeration<Object> en2=header.keys();
    while (en2.hasMoreElements()) {
      String key=(String)en2.nextElement();
      String value=header.getProperty(key);
      response.setHeader(key,value);
    }
    OutputStream os=response.getOutputStream();
    InputStream is=resp.data;
    FileUtils.copyStream(is,os,1024);
  }
  finally {
    logRequest(method,request,response);
    if (H2O.getShutdownRequested()) {
      H2O.shutdown(0);
    }
    endTransaction();
  }
}
