def __init__(self, lhs=None, rhs=None, do=True, timeoutSecs=30):
    debugprint(('Assign enter. lhs %s %s' % (type(lhs), lhs)))
    if (lhs is None):
        lhs = Key()
        debugprint(('Assign: creating Key for lhs: %s' % lhs))
    elif (not isinstance(lhs, (Key, KeyIndexed, basestring))):
        raise Exception(('Assign: lhs not Key/KeyIndexed/string or None %s %s' % (type(lhs), lhs)))
    super(Assign, self).__init__(lhs)
    if isinstance(lhs, basestring):
        frame = lhs
    else:
        frame = lhs.frame
    legalKey(frame, 'Assign')
    self.frame = frame
    self.lhs = lhs
    self.rhs = Item(rhs, listOk=True)
    self.funs = False
    debugprint(('Assign lhs: %s' % self.lhs))
    debugprint(('Assign rhs: %s' % self.rhs))
    if do:
        self.do()
        self.assignDone = True
        if (not isinstance(lhs, basestring)):
            lhs.assignDone = True
    return None
