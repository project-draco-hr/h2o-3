def __init__(self, lhs=None, rhs=None, timeoutSecs=30):
    debugprint(('Assign enter. lhs %s %s' % (type(lhs), lhs)))
    if (lhs is None):
        lhs = Key()
    elif (not isinstance(lhs, (Key, KeyIndexed, basestring))):
        raise Exception(('Assign: lhs not Key/KeyIndexed/string or None %s %s' % (type(lhs), lhs)))
    super(Assign, self).__init__(lhs)
    if isinstance(lhs, basestring):
        frame = lhs
    else:
        frame = lhs.frame
    legalKey(frame, 'Assign')
    self.frame = frame
    self.lhs = lhs
    if isinstance(rhs, (list, tuple)):
        if (len(rhs) > 1024):
            raise Exception(('Key is trying to index a h2o frame with a really long list (>1024)' + ("Probably don't want that? %s" % rhs)))
        self.rhs = Col(Seq(rhs))
    else:
        self.rhs = Item(rhs)
    self.funs = False
    debugprint(('Assign lhs: %s' % self.lhs))
    debugprint(('Assign rhs: %s' % self.rhs))
    self.do()
    return None
