def __init__(self, function='sum', *operands):
    super(Fcn, self).__init__()
    operandList = unpackOperands(operands, parent='Fcn operands')
    debugprint(('Fcn %s has %s operands' % (function, len(operands))))
    if (function in xFcnXlate):
        function = xFcnXlate[function]
    required = legalFunction(function)
    if (required == 0):
        print ('Fcn legalFunction not found...maybe future defined user function?: %s' % function)
    if (False and (len(operandList) != required) and (required < 3) and (function != 'cbind')):
        raise Exception(('Fcn wrong # of operands: %s %s' % (required, len(operandList))))
    self.operandList = operandList
    self.function = function
    debugprint('Fcn:', str(self))
    self.refcntInc()
    self.assignIfRoot()
