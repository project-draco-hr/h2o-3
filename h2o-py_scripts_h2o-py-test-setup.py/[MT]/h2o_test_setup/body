def h2o_test_setup(sys_args):
    h2o_py_dir = os.path.realpath(os.path.join(os.path.dirname(os.path.realpath(__file__)), '..'))
    h2o_docs_dir = os.path.realpath(os.path.join(os.path.dirname(os.path.realpath(__file__)), '..', '..', 'h2o-docs'))
    parse_args(sys_args)
    if _IS_IPYNB_:
        try:
            imp.find_module('h2o')
            import h2o
        except ImportError:
            print 'The h2o module has not been installed on this system. Cannot execute the H2O ipynb without it!'
    elif _IS_PYDEMO_:
        raise (NotImplementedError, 'pydemos are not supported at this time')
    elif _IS_PYUNIT_:
        sys.path.insert(1, h2o_py_dir)
        import h2o
    elif _IS_PYBOOKLET_:
        raise (NotImplementedError, 'pybooklets are not supported at this time')
    else:
        raise (EnvironmentError, 'Unrecognized test type. Must be of type ipynb, pydemo, pyunit, or pybooklet, but got: {0}'.format(_TEST_NAME_))
    print '[{0}] {1}\n'.format(strftime('%Y-%m-%d %H:%M:%S', gmtime()), 'Connect to h2o on IP: {0} PORT: {1}'.format(_H2O_IP_, _H2O_PORT_))
    h2o.init(ip=_H2O_IP_, port=_H2O_PORT_, strict_version_check=False)
    h2o.log_and_echo('------------------------------------------------------------')
    h2o.log_and_echo('')
    h2o.log_and_echo(('STARTING TEST: ' + _TEST_NAME_))
    h2o.log_and_echo('')
    h2o.log_and_echo('------------------------------------------------------------')
    h2o.remove_all()
    if _IS_IPYNB_:
        sys.path.insert(1, h2o_py_dir)
        from tests import pydemo_utils
        pydemo_utils.ipy_notebook_exec(_TEST_NAME_)
    elif _IS_PYUNIT_:
        with open(_TEST_NAME_, 'r') as t:
            pyunit = t.read()
        pyunit_c = compile(pyunit, '<string>', 'exec')
        p = {}
        exec pyunit_c in p
        p['pyunit_test']()
