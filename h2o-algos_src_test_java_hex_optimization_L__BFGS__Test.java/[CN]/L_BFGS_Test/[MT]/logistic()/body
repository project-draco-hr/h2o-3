{
  Key parsedKey=Key.make("prostate");
  DataInfo dinfo=null;
  try {
    GLMParameters glmp=new GLMParameters(Family.binomial);
    Frame source=parse_test_file(parsedKey,"smalldata/glm_test/prostate_cat_replaced.csv");
    source.add("CAPSULE",source.remove("CAPSULE"));
    source.remove("ID").remove();
    Frame valid=new Frame(source._names.clone(),source.vecs().clone());
    dinfo=new DataInfo(Key.make(),source,valid,1,false,DataInfo.TransformType.STANDARDIZE,DataInfo.TransformType.NONE);
    DKV.put(dinfo._key,dinfo);
    GLMGradientSolver solver=new GLMGradientSolver(glmp,dinfo,1e-5,source.vec("CAPSULE").mean(),source.numRows());
    L_BFGS_Params lp=new L_BFGS_Params();
    lp._gradEps=1e-8;
    L_BFGS.Result r=L_BFGS.solve(dinfo.fullN() + 1,solver,lp);
    GLMGradientInfo ginfo=(GLMGradientInfo)r.ginfo;
    assertEquals(378.34,ginfo._val.residualDeviance(),1e-1);
  }
  finally {
    if (dinfo != null)     DKV.remove(dinfo._key);
    Value v=DKV.get(parsedKey);
    if (v != null) {
      v.<Frame>get().delete();
    }
  }
}
