{
  SB model=new SB();
  bodySb.i().p("java.util.Arrays.fill(preds,0);").nl();
  final int cats=_output._ncats;
  final int nums=_output._nnums;
  bodySb.i().p("final int nstart = CATOFFS[CATOFFS.length-1];").nl();
  bodySb.i().p("for(int i = 0; i < ").p(_parms._k).p("; i++) {").nl();
  bodySb.i(1).p("for(int j = 0; j < ").p(cats).p("; j++) {").nl();
  bodySb.i(2).p("int c = (int) data[PERMUTE[j]];").nl();
  bodySb.i(2).p("if(c > CATOFFS[j+1]-CATOFFS[j]-1) continue;").nl();
  bodySb.i(2).p("preds[i] += EIGVECS[CATOFFS[j]+c][i];").nl();
  bodySb.i(1).p("}").nl();
  bodySb.i(1).p("for(int j = 0; j < ").p(nums).p("; j++) {").nl();
  bodySb.i(2).p("preds[i] += (data[PERMUTE[j" + (cats > 0 ? "+" + cats : "") + "]]-NORMSUB[j])*NORMMUL[j]*EIGVECS[j"+ (cats > 0 ? "+ nstart" : "")+ "][i];").nl();
  bodySb.i(1).p("}").nl();
  bodySb.i().p("}").nl();
  fileCtxSb.p(model);
}
