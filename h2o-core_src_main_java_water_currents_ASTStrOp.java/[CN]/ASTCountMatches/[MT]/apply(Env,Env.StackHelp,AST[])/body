{
  Frame fr=stk.track(asts[1].exec(env)).getFrame();
  String pattern=asts[2].exec(env).getStr();
  if (fr.numCols() != 1)   throw new IllegalArgumentException("countmatches requires a single column.");
  final int[] matchCounts=countMatches(fr.anyVec().domain(),pattern);
  Frame fr2=new MRTask(){
    @Override public void map(    Chunk[] cs,    NewChunk[] ncs){
      Chunk c=cs[0];
      for (int i=0; i < c._len; ++i) {
        if (!c.isNA(i)) {
          int idx=(int)c.at8(i);
          ncs[0].addNum(matchCounts[idx]);
        }
 else         ncs[i].addNA();
      }
    }
  }
.doAll(1,fr).outputFrame(null,null,null);
  return new ValFrame(fr);
}
