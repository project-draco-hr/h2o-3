{
  if (parms.containsKey("hyper_parameters")) {
    Map<String,Object> m=water.util.JSONUtils.parse(parms.getProperty("hyper_parameters"));
    hyper_parameters=new IcedHashMap<>();
    for (    Map.Entry<String,Object> e : m.entrySet()) {
      Object o=e.getValue();
      Object[] o2=o instanceof List ? ((List)o).toArray() : new Object[]{o};
      hyper_parameters.put(e.getKey(),o2);
    }
    parms.remove("hyper_parameters");
  }
  if (parms.containsKey("strategy")) {
    strategy=Strategy.valueOf(parms.getProperty("strategy"));
    parms.remove("strategy");
  }
  if (parms.containsKey("max_models")) {
    max_models=Integer.valueOf(parms.getProperty("max_models"));
    parms.remove("max_models");
  }
  if (parms.containsKey("max_time_ms")) {
    max_time_ms=Integer.valueOf(parms.getProperty("max_time_ms"));
    parms.remove("max_time_ms");
  }
  if (parms.containsKey("seed")) {
    seed=Long.valueOf(parms.getProperty("seed"));
    parms.remove("seed");
  }
  if (parms.containsKey("grid_id")) {
    grid_id=new KeyV3.GridKeyV3(Key.<Grid>make(parms.getProperty("grid_id")));
    parms.remove("grid_id");
  }
  this.parameters.fillFromParms(parms,false);
  return (S)this;
}
