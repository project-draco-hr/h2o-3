def process(self):
    f = open(self.file_name, 'r')
    allowed_regex_list = ['^\\* using log directory', '^\\* using R version', '^\\* using R version', '^\\* using platform', '^\\* using session charset', '^\\* using option .*', '^\\* checking .* \\.\\.\\. OK', '^\\* checking extension type \\.\\.\\. Package', '^\\* this is package', '^\\* checking CRAN incoming feasibility \\.\\.\\. WARNING', '^Maintainer:', '^New maintainer:', '^\\s*Tom Kraljevic', 'Insufficient package version .*', '^\\Days since last update: .*', '^Old maintainer\\(s\\):', '^\\s*Anqi Fu', '^NOTE: There was 1 note.', '^New submission', '^Package was archived on CRAN', '^CRAN repository db overrides:', '^  X-CRAN-Comment: Archived on 2014-09-23 as did not comply with CRAN', '^    policies on use of multiple threads.', '^\\* checking installed package size ... NOTE', '^  installed size is .*Mb', '^  sub-directories of 1Mb or more:', '^    java  .*Mb', '^NOTE: There were 2 notes.', "^Package has FOSS license, installs .class/.jar but has no 'java' directory.", '^\\* DONE']
    s = f.readline()
    while (len(s) > 0):
        self.lineno = (self.lineno + 1)
        allowed = False
        for regex in allowed_regex_list:
            match_groups = re.search(regex, s)
            if (match_groups is not None):
                allowed = True
                break
        if (not allowed):
            self.parse_error('Illegal output found', s, f)
        s = f.readline()
