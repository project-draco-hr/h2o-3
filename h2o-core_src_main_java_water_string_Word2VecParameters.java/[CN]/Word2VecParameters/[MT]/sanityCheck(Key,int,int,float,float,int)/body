{
  Frame fr=vocabKey.get();
  if (fr == null) {
    Log.err("Key used for word count frame, pointed to no frame.");
    return false;
  }
  if (fr.numCols() != 2) {
    Log.err("Frame passed for the word count, contained the incorrect number of columns.  Expected 2, found " + fr.numCols());
    return false;
  }
  if (fr.numRows() > Integer.MAX_VALUE) {
    Log.err("Vocab size exceeds current limit of " + Integer.MAX_VALUE + ".  Whew, that's a lot of words!  "+ "Consider stemming, or tell developers to upgrade to handle larger vocabularies.");
    return false;
  }
  if (vecSize > MAX_VEC_SIZE) {
    _vecSize=MAX_VEC_SIZE;
    Log.warn("Requested vector size of " + vecSize + " in Word2Vec, exceeds limit of "+ MAX_VEC_SIZE+ ".  Using "+ MAX_VEC_SIZE+ "instead.");
  }
  if (winSize < 1) {
    Log.err("Negative window size not allowed for Word2Vec.  Expected value > 0, received " + winSize);
    return false;
  }
  if (sentSampleRate < 0.0) {
    Log.err("Negative sentence sample rate not allowed for Word2Vec.  Expected a value > 0.0, received " + sentSampleRate);
    return false;
  }
  if (learningRate < 0.0) {
    Log.err("Negative learning rate not allowed for Word2Vec.  Expected a value > 0.0, received " + learningRate);
    return false;
  }
  if (epochs < 1) {
    Log.err("Negative epoch count not allowed for Word2Vec.  Expected value > 0, received " + epochs);
    return false;
  }
  return true;
}
