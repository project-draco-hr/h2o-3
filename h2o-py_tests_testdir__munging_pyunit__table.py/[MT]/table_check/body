def table_check():
    df = h2o.import_file(path=pyunit_utils.locate('smalldata/prostate/prostate.csv'))
    print(df[['AGE', 'RACE']].table(dense=True))
    print(df[['AGE', 'RACE']].table(dense=False))
    iris = h2o.import_file(path=pyunit_utils.locate('smalldata/iris/iris.csv'))
    table1 = iris['C5'].table()
    assert (table1[(0, 1)] == 50), 'Expected 50 of {0}, but got {1}'.format(table1[(0, 0)], table1[(0, 1)])
    assert (table1[(1, 1)] == 50), 'Expected 50 of {0}, but got {1}'.format(table1[(1, 0)], table1[(1, 1)])
    assert (table1[(2, 1)] == 50), 'Expected 50 of {0}, but got {1}'.format(table1[(2, 0)], table1[(2, 1)])
    table2 = iris['C1'].table(iris['C5'])
    table3 = iris['C1'].table(iris['C5'], dense=False)
    assert (table3[((table3['C1'] == 5), 'Iris-setosa')] == table2[(((table2['C1'] == 5) & (table2['C5'] == 'Iris-setosa')), 'Counts')]).all()
    assert (table2 == iris[['C1', 'C5']].table()).all()
    assert (table3 == iris[['C1', 'C5']].table(dense=False)).all()
    cars = h2o.import_file(path=pyunit_utils.locate('smalldata/junit/cars_20mpg.csv'))
    table = cars[2].table().as_data_frame()
    table = dict(table[1:])
    table = {k: int(v) for (k, v) in list(table.items())}
    expected = Counter(itertools.chain(*cars[2].as_data_frame()[1:]))
    assert (table == expected), 'Expected {} for table counts but got {}'.format(expected, table)
