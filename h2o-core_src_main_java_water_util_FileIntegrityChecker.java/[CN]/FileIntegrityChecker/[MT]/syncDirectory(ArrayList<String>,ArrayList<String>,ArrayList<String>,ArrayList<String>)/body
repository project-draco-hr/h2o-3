{
  Futures fs=new Futures();
  Key k=null;
  for (int i=0; i < _files.length; ++i) {
    if (_ok[i] < H2O.CLOUD.size()) {
      if (fails != null)       fails.add(_files[i]);
    }
 else {
      File f=new File(_files[i]);
      k=PersistNFS.decodeFile(f);
      if (files != null)       files.add(_files[i]);
      if (keys != null)       keys.add(k.toString());
      if (DKV.get(k) != null)       dels.add(k.toString());
      new Frame(k).delete_and_lock((Key)null);
      NFSFileVec nfs=NFSFileVec.make(f,fs);
      new Frame(k,new String[]{"C1"},new Vec[]{nfs}).update((Key)null).unlock((Key)null);
    }
  }
  fs.blockForPending();
  return k;
}
