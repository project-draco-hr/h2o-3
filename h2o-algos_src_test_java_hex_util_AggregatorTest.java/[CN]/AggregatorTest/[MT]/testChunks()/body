{
  Frame frame=parse_test_file("smalldata/covtype/covtype.20k.data");
  double radiusScale=3;
  Key<Frame> output=Key.make();
  Aggregator agg=new Aggregator(frame,output,radiusScale,false).execImpl();
  Log.info("Number of exemplars: " + agg._exemplars.length);
  output.remove();
  agg.remove();
  for (  int i : new int[]{1,2,5,10,50,100}) {
    Key key=Key.make();
    RebalanceDataSet rb=new RebalanceDataSet(frame,key,i);
    H2O.submitTask(rb);
    rb.join();
    Frame rebalanced=DKV.get(key).get();
    Aggregator agg2=new Aggregator(rebalanced,output,radiusScale,false).execImpl();
    Log.info("Number of exemplars for " + i + " chunks: "+ agg2._exemplars.length);
    rebalanced.delete();
    Assert.assertTrue(Math.abs(agg._exemplars.length - agg2._exemplars.length) < agg._exemplars.length * 0.2);
    output.remove();
    agg2.remove();
  }
  frame.delete();
}
