def smallcatRF():
    alphabet = h2o.import_file(path=h2o.locate('smalldata/gbm_test/alphabet_cattest.csv'))
    alphabet['y'] = alphabet['y'].asfactor()
    trainData = np.loadtxt(h2o.locate('smalldata/gbm_test/alphabet_cattest.csv'), delimiter=',', skiprows=1, converters={0: (lambda s: ord(s.split('"')[1])), })
    trainDataResponse = trainData[:, 1]
    trainDataFeatures = trainData[:, 0]
    rf_h2o = h2o.random_forest(x=alphabet[['X']], y=alphabet['y'], ntrees=1, max_depth=1, nbins=100)
    rf_sci = ensemble.RandomForestClassifier(n_estimators=1, criterion='entropy', max_depth=1)
    rf_sci.fit(trainDataFeatures[:, np.newaxis], trainDataResponse)
    rf_perf = rf_h2o.model_performance(alphabet)
    auc_h2o = rf_perf.auc()
    auc_sci = roc_auc_score(trainDataResponse, rf_sci.predict_proba(trainDataFeatures[:, np.newaxis])[:, 1])
    assert (auc_h2o >= auc_sci), 'h2o (auc) performance degradation, with respect to scikit'
