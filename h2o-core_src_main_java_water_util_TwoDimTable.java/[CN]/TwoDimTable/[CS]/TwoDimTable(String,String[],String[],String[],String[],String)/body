{
  if (tableHeader == null)   tableHeader="";
  this.colHeaderForRowHeaders=colHeaderForRowHeaders;
  if (rowHeaders == null)   throw new IllegalArgumentException("rowHeaders is null");
 else {
    for (int r=0; r < rowHeaders.length; ++r)     if (rowHeaders[r] == null)     rowHeaders[r]="";
  }
  if (colHeaders == null)   throw new IllegalArgumentException("colHeaders is null");
 else {
    for (int c=0; c < colHeaders.length; ++c)     if (colHeaders[c] == null)     colHeaders[c]="";
  }
  final int rowDim=rowHeaders.length;
  final int colDim=colHeaders.length;
  if (colTypes == null) {
    colTypes=new String[colDim];
    Arrays.fill(colTypes,"string");
  }
 else   if (colTypes.length != colDim)   throw new IllegalArgumentException("colTypes must have the same length as colHeaders");
 else {
    for (int c=0; c < colDim; ++c) {
      colTypes[c]=colTypes[c].toLowerCase();
      if (!(colTypes[c].equals("double") || colTypes[c].equals("float") || colTypes[c].equals("integer")|| colTypes[c].equals("long")|| colTypes[c].equals("string")))       throw new IllegalArgumentException("colTypes values must be one of \"double\", \"float\", \"integer\", \"long\", or \"string\"");
    }
  }
  if (colFormats == null) {
    colFormats=new String[colDim];
    Arrays.fill(colFormats,"%s");
  }
 else   if (colFormats.length != colDim)   throw new IllegalArgumentException("colFormats must have the same length as colHeaders");
  this.tableHeader=tableHeader;
  this.rowHeaders=rowHeaders;
  this.colHeaders=colHeaders;
  this.colTypes=colTypes;
  this.colFormats=colFormats;
  this.cellValues=new IcedWrapper[rowDim][colDim];
}
