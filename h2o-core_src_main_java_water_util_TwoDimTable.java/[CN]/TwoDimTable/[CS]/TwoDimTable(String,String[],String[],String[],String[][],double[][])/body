{
  assert(Double.isNaN(emptyDouble));
  assert(isEmpty(emptyDouble));
  assert(!isEmpty(Double.NaN));
  if (tableHeader == null)   throw new IllegalArgumentException("tableHeader is missing.");
  if (colHeaders == null)   throw new IllegalArgumentException("colNames are missing.");
  if (colFormatStrings == null) {
    colFormatStrings=new String[colHeaders.length];
    Arrays.fill(colFormatStrings,"%s");
  }
  if (rowHeaders == null)   throw new IllegalArgumentException("rowHeaders are missing.");
  if (strCellValues == null)   throw new IllegalArgumentException("string values are missing.");
  if (strCellValues.length != rowHeaders.length)   throw new IllegalArgumentException("string values must have the same length as rowHeaders: " + rowHeaders.length);
  if (dblCellValues == null)   throw new IllegalArgumentException("double values are missing.");
  if (dblCellValues.length != rowHeaders.length)   throw new IllegalArgumentException("double values must have the same length as rowHeaders: " + rowHeaders.length);
  for (  String[] v : strCellValues) {
    if (v != null)     if (v.length != colHeaders.length)     throw new IllegalArgumentException("Each entry in string values must have the same length as colNames: " + colHeaders.length);
  }
  for (  double[] v : dblCellValues) {
    if (v != null)     if (v.length != colHeaders.length)     throw new IllegalArgumentException("Each entry in string values must have the same length as colNames: " + colHeaders.length);
  }
  if (colFormatStrings.length != colHeaders.length)   throw new IllegalArgumentException("colFormatStrings must have the same length as colNames: " + colHeaders.length);
  this.tableHeader=tableHeader;
  this.colHeaders=colHeaders;
  this.colFormatStrings=colFormatStrings;
  this.rowHeaders=rowHeaders;
  this.strCellValues=strCellValues;
  this.dblCellValues=dblCellValues;
  checkConsistency();
}
