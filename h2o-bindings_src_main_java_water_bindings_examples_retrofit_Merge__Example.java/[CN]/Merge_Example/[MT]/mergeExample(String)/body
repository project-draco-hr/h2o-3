{
  H2oApi h2o=url != null ? new H2oApi(url) : new H2oApi();
  if (url != null) {
    h2o.setUrl(url);
  }
  JobV3 job=null;
  String sessionId=h2o.newSession().sessionKey;
{
    ImportFilesV3 importBody=h2o.importFiles("../smalldata/merge/tourism.csv");
    ParseSetupV3 parseSetupParams=new ParseSetupV3();
    parseSetupParams.sourceFrames=H2oApi.stringArrayToKeyArray(importBody.destinationFrames,FrameKeyV3.class);
    parseSetupParams.checkHeader=1;
    ParseSetupV3 parseSetupBody=h2o.guessParseSetup(parseSetupParams);
    ParseV3 parseParms=new ParseV3();
    H2oApi.copyFields(parseParms,parseSetupBody);
    parseParms.destinationFrame=H2oApi.stringToFrameKey("tourism");
    parseParms.blocking=true;
    ParseV3 parseBody=h2o.parse(parseParms);
  }
{
    ImportFilesV3 importBody=h2o.importFiles("../smalldata/merge/heart.csv");
    ParseSetupV3 parseSetupParams=new ParseSetupV3();
    parseSetupParams.sourceFrames=H2oApi.stringArrayToKeyArray(importBody.destinationFrames,FrameKeyV3.class);
    parseSetupParams.checkHeader=1;
    ParseSetupV3 parseSetupBody=h2o.guessParseSetup(parseSetupParams);
    ParseV3 parseParms=new ParseV3();
    H2oApi.copyFields(parseParms,parseSetupBody);
    parseParms.destinationFrame=H2oApi.stringToFrameKey("heart");
    parseParms.checkHeader=1;
    parseParms.blocking=true;
    ParseV3 parseBody=h2o.parse(parseParms);
  }
  RapidsSchemaV3 rapidsParms=new RapidsSchemaV3();
  rapidsParms.sessionId=sessionId;
  rapidsParms.ast="(assign heart (:= heart (as.factor (cols heart 1)) 1 [0:263]))";
  h2o.rapidsExec(rapidsParms);
  rapidsParms.ast=String.format("(assign mergedframe (merge %s %s TRUE FALSE [] [] \"auto\") )","tourism","heart");
  h2o.rapidsExec(rapidsParms);
  h2o.endSession();
}
