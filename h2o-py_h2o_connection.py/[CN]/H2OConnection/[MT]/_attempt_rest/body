def _attempt_rest(self, url, method, post_body, file_upload_info):
    auth = (self._username, self._password)
    verify = (not self._insecure)
    cluster = self._cluster_name
    headers = {'User-Agent': ('H2O Python client/' + sys.version.replace('\n', '')), 'X-Cluster': cluster, }
    try:
        if (method == 'GET'):
            return requests.get(url, headers=headers, proxies=self._proxy, auth=auth, verify=verify)
        elif file_upload_info:
            files = {file_upload_info['file']: open(file_upload_info['file'], 'rb'), }
            return requests.post(url, files=files, headers=headers, proxies=self._proxy, auth=auth, verify=verify)
        elif (method == 'POST'):
            headers['Content-Type'] = 'application/x-www-form-urlencoded'
            return requests.post(url, data=post_body, headers=headers, proxies=self._proxy, auth=auth, verify=verify)
        elif (method == 'DELETE'):
            return requests.delete(url, headers=headers, proxies=self._proxy, auth=auth, verify=verify)
        else:
            raise ValueError(('Unknown HTTP method ' + method))
    except requests.ConnectionError as e:
        raise EnvironmentError('h2o-py encountered an unexpected HTTP error:\n {}'.format(e))
