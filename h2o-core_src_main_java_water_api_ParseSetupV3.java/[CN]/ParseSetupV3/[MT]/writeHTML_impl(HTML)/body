{
  ab.title("ParseSetup");
  if (null != source_frames && source_frames.length > 0) {
    Key[] srcs_key=new Key[source_frames.length];
    for (int i=0; i < source_frames.length; i++)     srcs_key[i]=source_frames[i].key();
    ab.href("Parse",source_frames[0].toString(),ParseV3.link(srcs_key,destination_frame,parse_type,separator,number_columns,check_header,single_quotes,column_names,column_types,na_strings,chunk_size));
  }
 else {
    Key[] srcs_key=new Key[source_frames.length];
    for (int i=0; i < source_frames.length; i++)     srcs_key[i]=source_frames[i].key();
    ab.href("Parse","unknown",ParseV3.link(srcs_key,destination_frame,parse_type,separator,number_columns,check_header,single_quotes,column_names,column_types,na_strings,chunk_size));
  }
  ab.putA("source_frames",source_frames);
  ab.putStr("destination_frame",destination_frame);
  ab.putEnum("parse_type",parse_type);
  ab.put1("separator",separator);
  ab.put4("number_columns",number_columns);
  ab.putZ("single_quotes",single_quotes);
  ab.putAStr("column_names",column_names);
  ab.putAStr("column_types",column_types);
  ab.putAAStr("na_strings",na_strings);
  ab.putAAStr("data",data);
  ab.put4("chunk_size",chunk_size);
  return ab;
}
