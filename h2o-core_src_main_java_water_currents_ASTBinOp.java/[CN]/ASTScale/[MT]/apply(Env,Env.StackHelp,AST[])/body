{
  Frame fr=stk.track(asts[1].exec(env)).getFrame();
  int ncols=fr.numCols();
  double[] means;
  if (asts[2] instanceof ASTNumList) {
    means=((ASTNumList)asts[2]).expand();
    if (means.length != ncols)     throw new IllegalArgumentException("Numlist must be the same length as the columns of the Frame");
  }
 else {
    double d=asts[2].exec(env).getNum();
    if (d == 0)     means=new double[ncols];
 else     if (d == 1)     means=fr.means();
 else     throw new IllegalArgumentException("Only true or false allowed");
  }
  double[] mults;
  if (asts[3] instanceof ASTNumList) {
    mults=((ASTNumList)asts[3]).expand();
    if (mults.length != ncols)     throw new IllegalArgumentException("Numlist must be the same length as the columns of the Frame");
  }
 else {
    double d=asts[3].exec(env).getNum();
    if (d == 0)     Arrays.fill(mults=new double[ncols],1.0);
 else     if (d == 1)     mults=fr.mults();
 else     throw new IllegalArgumentException("Only true or false allowed");
  }
  throw H2O.unimpl();
}
