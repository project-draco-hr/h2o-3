{
  initCloud();
  File f=new File("smalldata/glm_test/gaussian.csv");
  NFSFileVec nfs=NFSFileVec.make(f);
  Frame frame=water.parser.ParseDataset.parse(Key.make(),nfs._key);
  frame.remove(0);
  int k=7;
  double[][] centers=new double[k][frame.vecs().length];
  Random rand=new Random();
  for (int cluster=0; cluster < centers.length; cluster++) {
    long row=Math.max(0,(long)(rand.nextDouble() * frame.vecs().length) - 1);
    for (int i=0; i < frame.vecs().length; i++) {
      Vec v=frame.vecs()[i];
      centers[cluster][i]=v.at(row);
    }
  }
  int NUM_ITERS=10;
  for (int i=0; i < NUM_ITERS; i++) {
    KMeans task=new KMeans();
    task._centers=centers;
    task.doAll(frame);
    for (int c=0; c < centers.length; c++) {
      if (task._size[c] > 0) {
        for (int v=0; v < frame.vecs().length; v++) {
          double value=task._sums[c][v] / task._size[c];
          centers[c][v]=value;
        }
      }
    }
    System.out.println("Error is " + task._error);
  }
  System.out.println("Cluster Centers:");
  DecimalFormat df=new DecimalFormat("#.00");
  for (  double[] center : centers) {
    for (int v=0; v < frame.vecs().length; v++)     System.out.print(df.format(center[v]) + ", ");
    System.out.println("");
  }
  System.exit(0);
}
