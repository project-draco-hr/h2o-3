{
  threshold_criteria=new String[ThresholdCriterion.values().length];
  int i=0;
  HashSet<ThresholdCriterion> hs=new HashSet<ThresholdCriterion>();
  for (  ThresholdCriterion criter : ThresholdCriterion.values()) {
    hs.add(criter);
    threshold_criteria[i++]=criter.toString().replace("_"," ");
  }
  confusion_matrix_for_criteria=new long[hs.size()][][];
  idxCriter=new int[hs.size()];
  threshold_for_criteria=new float[hs.size()];
  F1_for_criteria=new float[hs.size()];
  F2_for_criteria=new float[hs.size()];
  F0point5_for_criteria=new float[hs.size()];
  accuracy_for_criteria=new float[hs.size()];
  error_for_criteria=new float[hs.size()];
  precision_for_criteria=new float[hs.size()];
  recall_for_criteria=new float[hs.size()];
  specificity_for_criteria=new float[hs.size()];
  mcc_for_criteria=new float[hs.size()];
  max_per_class_error_for_criteria=new float[hs.size()];
  for (  ThresholdCriterion criter : hs) {
    final int id=criter.ordinal();
    idxCriter[id]=0;
    threshold_for_criteria[id]=thresholds[0];
    for (i=1; i < _cms.length; ++i) {
      if (isBetter(_cms[i],_cms[idxCriter[id]],criter)) {
        idxCriter[id]=i;
        threshold_for_criteria[id]=thresholds[i];
      }
    }
    confusion_matrix_for_criteria[id]=_cms[idxCriter[id]]._cm;
    F1_for_criteria[id]=(float)_cms[idxCriter[id]].F1();
    F2_for_criteria[id]=(float)_cms[idxCriter[id]].F2();
    F0point5_for_criteria[id]=(float)_cms[idxCriter[id]].F0point5();
    accuracy_for_criteria[id]=(float)_cms[idxCriter[id]].accuracy();
    error_for_criteria[id]=(float)_cms[idxCriter[id]].err();
    precision_for_criteria[id]=(float)_cms[idxCriter[id]].precision();
    recall_for_criteria[id]=(float)_cms[idxCriter[id]].recall();
    specificity_for_criteria[id]=(float)_cms[idxCriter[id]].specificity();
    mcc_for_criteria[id]=(float)_cms[idxCriter[id]].mcc();
    max_per_class_error_for_criteria[id]=(float)_cms[idxCriter[id]].max_per_class_error();
  }
}
