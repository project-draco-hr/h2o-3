{
  super.init(expensive);
  if (_parms._mtries < 1 && _parms._mtries != -1)   error("_mtries","mtries must be -1 (converted to sqrt(features)), or >= 1 but it is " + _parms._mtries);
  if (_train != null) {
    int ncols=_train.numCols();
    if (_parms._mtries != -1 && !(1 <= _parms._mtries && _parms._mtries < ncols))     error("_mtries","Computed mtries should be -1 or in interval [1," + ncols + "[ but it is "+ _parms._mtries);
  }
  if (_parms._distribution == Distribution.Family.AUTO) {
    if (_nclass == 1)     _parms._distribution=Distribution.Family.gaussian;
    if (_nclass >= 2)     _parms._distribution=Distribution.Family.multinomial;
  }
  if (expensive) {
    _initialPrediction=isClassifier() ? 0 : getInitialValue();
  }
  if (_parms._sample_rate == 1f && _valid == null)   error("_sample_rate","Sample rate is 100% and no validation dataset is specified.  There are no OOB data to compute out-of-bag error estimation!");
  if (hasOffsetCol())   error("_offset_column","Offsets are not yet supported for DRF.");
  if (hasOffsetCol() && isClassifier()) {
    error("_offset_column","Offset is only supported for regression.");
  }
}
