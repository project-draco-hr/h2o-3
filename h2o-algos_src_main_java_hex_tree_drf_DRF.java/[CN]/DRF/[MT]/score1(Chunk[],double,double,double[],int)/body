{
  double sum=0;
  if (_nclass > 2 || (_nclass == 2 && !_model.binomialOpt())) {
    for (int k=0; k < _nclass; k++)     sum+=(fs[k + 1]=chk_tree(chks,k).atd(row) / chk_oobt(chks).atd(row));
  }
 else   if (_nclass == 2 && _model.binomialOpt()) {
    fs[1]=chk_tree(chks,0).atd(row) / chk_oobt(chks).atd(row);
    assert(fs[1] >= 0 && fs[1] <= 1);
    fs[2]=1. - fs[1];
  }
 else {
    sum+=(fs[0]=chk_tree(chks,0).atd(row) / chk_oobt(chks).atd(row));
    fs[1]=0;
  }
  return sum;
}
