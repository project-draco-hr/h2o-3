def gen_class(self, step_name):
    return ('\n      public static class %s extends Step<%s> {\n        private final String _col = "%s";\n        private final String _newCol = "%s";\n        %s() {_append=%s;}\n        @Override public RowData transform(RowData row) {\n          try {\n            if( _append ) row.put(_newCol, methods.get("%s").invoke(row.get(_col)));\n            else          row.put(_col, methods.get("%s").invoke(row.get(_col)));\n            return row;\n          } catch (InvocationTargetException e) {\n            e.printStackTrace();\n            throw new RuntimeException();\n          } catch (IllegalAccessException e2) {\n            e2.printStackTrace();\n            throw new RuntimeException();\n          }\n        }\n      }\n    ' % (step_name, step_name, self.col, ((self.col + '_0') if self.append else ''), step_name, ('true' if self.append else 'false'), self.fun.__name__, self.fun.__name__))
