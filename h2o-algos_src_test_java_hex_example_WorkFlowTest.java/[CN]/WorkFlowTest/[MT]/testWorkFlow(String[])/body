{
  Frame data=load_files("data.hex",files);
  if (data == null)   return;
  data.remove("start station id").remove();
  data.remove("end station id").remove();
  Vec startime=data.remove("starttime");
  data.add(new TimeSplit().doIt(startime,"s"));
  startime.remove();
  Vec stoptime=data.remove("stoptime");
  data.add(new TimeSplit().doIt(stoptime,"e"));
  stoptime.remove();
  Key[] keys=new Key[]{Key.make("train.hex"),Key.make("test.hex"),Key.make("hold.hex")};
  double[] ratios=new double[]{0.6,0.3,0.1};
  Frame[] frs=ShuffleSplitFrame.shuffleSplitFrame(data,keys,ratios,1234567689L);
  Frame train=frs[0];
  Frame test=frs[1];
  Frame hold=frs[2];
  data.remove();
  System.out.println(train);
  System.out.println(test);
  GBMModel.GBMParameters gbm_parms=new GBMModel.GBMParameters();
  gbm_parms._train=train._key;
  gbm_parms._valid=test._key;
  gbm_parms._score_each_iteration=false;
  gbm_parms._response_column="tripduration";
  gbm_parms._convert_to_enum=false;
  gbm_parms._ntrees=200;
  gbm_parms._max_depth=7;
  gbm_parms._min_rows=10;
  gbm_parms._nbins=20;
  gbm_parms._loss=GBMModel.GBMParameters.Family.AUTO;
  gbm_parms._learn_rate=0.1f;
  Job<GBMModel> job=new GBM(gbm_parms).trainModel();
  GBMModel gbm=job.get();
  job.remove();
  System.out.println(Arrays.toString(gbm._output._mse_train));
  System.out.println(Arrays.toString(gbm._output._mse_valid));
  gbm.remove();
  train.remove();
  test.remove();
  hold.remove();
}
