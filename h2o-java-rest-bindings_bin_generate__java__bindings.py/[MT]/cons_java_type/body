def cons_java_type(pojo_name, name, h2o_type, schema_name):
    if ((schema_name is None) or h2o_type.startswith('enum')):
        simple_type = h2o_type.replace('[]', '')
        idx = h2o_type.find('[]')
        brackets = ('' if (idx is (-1)) else h2o_type[idx:])
    else:
        simple_type = schema_name
        idx = h2o_type.find('[]')
        brackets = ('' if (idx is (-1)) else h2o_type[idx:])
    if h2o_type.startswith('Map'):
        java_type = h2o_type
        java_type = java_type.replace('<string,', '<String,')
        java_type = java_type.replace(',string>', ',String>')
        return java_type
    if (simple_type == 'string'):
        return (simple_type.capitalize() + brackets)
    if h2o_type.startswith('Key<'):
        return (schema_name + brackets)
    if (simple_type in ['int', 'float', 'double', 'long', 'boolean', 'byte', 'short']):
        return (simple_type + brackets)
    if (simple_type == 'enum'):
        return (schema_name + brackets)
    if (schema_name is not None):
        return (simple_type + brackets)
    if (simple_type == 'Polymorphic'):
        return 'Object'
    if (simple_type == 'IcedWrapper'):
        return 'Object'
    raise Exception(((((('Unexpectedly found a ' + simple_type) + ' field: ') + name) + ' in pojo: ') + pojo_name))
