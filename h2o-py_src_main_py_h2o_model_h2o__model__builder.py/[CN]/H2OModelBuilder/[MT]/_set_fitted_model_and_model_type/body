def _set_fitted_model_and_model_type(self, destination_key):
    self._model_key = destination_key
    url_suffix = ('Models/' + destination_key)
    model = h2oConn.do_safe_get_json(url_suffix=url_suffix)['models'][0]
    self._model_type = self._model_type.format(model['output']['model_category'])
    if (self._model_type == self.BINOMIAL):
        self._fitted_model = H2OBinomialModel(model['output'], algo=self._algo)
    elif (self._model_type == self.MULTINOMIAL):
        self._fitted_model = H2OMultinomialModel(model['output'], algo=self._algo)
    elif (self._model_type == self.CLUSTERING):
        self._fitted_model = H2OClusteringModel(model['output'], algo=self._algo)
    elif (self._model_type == self.REGRESSION):
        self._fitted_model = H2ORegressionModel(model['output'], algo=self._algo)
    else:
        raise H2OUnknownModelError(("Don't know what to do with model type: " + self._model_type))
