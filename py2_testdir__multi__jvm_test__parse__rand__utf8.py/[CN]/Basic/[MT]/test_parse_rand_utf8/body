def test_parse_rand_utf8(self):
    SYNDATASETS_DIR = h2o.make_syn_dir()
    print 'HACK: reduce rows to 10 for debug'
    tryList = [(10, 2, 'cA', 120), (10, 2, 'cG', 120), (10, 2, 'cH', 120)]
    print 'What about messages to log (INFO) about unmatched quotes (before eol)'
    for (rowCount, colCount, hex_key, timeoutSecs) in tryList:
        SEEDPERFILE = random.randint(0, sys.maxint)
        csvFilename = (((((('syn_' + str(SEEDPERFILE)) + '_') + str(rowCount)) + 'x') + str(colCount)) + '.csv')
        csvPathname = ((SYNDATASETS_DIR + '/') + csvFilename)
        print '\nCreating random', csvPathname
        write_syn_dataset(csvPathname, rowCount, colCount, SEED=SEEDPERFILE)
        parseResult = h2i.import_parse(path=csvPathname, schema='put', checkHeader=0, hex_key=hex_key, timeoutSecs=timeoutSecs, doSummary=False)
        print 'parseResult:', dump_json(parseResult)
        (numRows, numCols, parse_key) = h2o_cmd.infoFromParse(parseResult)
        inspect = h2o_cmd.runInspect(key=parse_key)
        (missingList, labelList, numRows, numCols) = h2o_cmd.infoFromInspect(inspect)
        assert (len(missingList) == 0)
        self.assertEqual(numRows, rowCount, msg=('Wrong numRows: %s %s' % (numRows, rowCount)))
        self.assertEqual(numCols, colCount, msg=('Wrong numCols: %s %s' % (numCols, colCount)))
