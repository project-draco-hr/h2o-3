{
  if (H2O.SELF_ADDRESS != null)   return H2O.SELF_ADDRESS;
  if ((H2O.ARGS.ip != null) && (H2O.ARGS.network != null)) {
    Log.err("ip and network options must not be used together");
    H2O.exit(-1);
  }
  ArrayList<NetworkInit.CIDRBlock> networkList=NetworkInit.calcArrayList(H2O.ARGS.network);
  if (networkList == null) {
    Log.err("No network found! Exiting.");
    H2O.exit(-1);
  }
  ArrayList<InetAddress> ips=calcPrioritizedInetAddressList();
  InetAddress local=null;
  if (H2O.ARGS.ip != null) {
    local=getInetAddress(H2O.ARGS.ip,ips);
  }
 else   if (networkList.size() > 0) {
    Log.info("Network list was specified by the user.  Searching for a match...");
    for (    InetAddress ip : ips) {
      Log.info("    Considering " + ip.getHostAddress() + " ...");
      for (      NetworkInit.CIDRBlock n : networkList) {
        if (n.isInetAddressOnNetwork(ip)) {
          Log.info("    Matched " + ip.getHostAddress());
          return (H2O.SELF_ADDRESS=ip);
        }
      }
    }
    Log.err("No interface matches the network list from the -network option.  Exiting.");
    H2O.exit(-1);
  }
 else {
    ArrayList<InetAddress> globalIps=new ArrayList();
    ArrayList<InetAddress> siteLocalIps=new ArrayList();
    ArrayList<InetAddress> linkLocalIps=new ArrayList();
    boolean isIPv6Preferred=NetworkUtils.isIPv6Preferred();
    boolean isIPv4Preferred=NetworkUtils.isIPv4Preferred();
    for (    InetAddress ip : ips) {
      if (!(ip.isLoopbackAddress() || ip.isAnyLocalAddress())) {
        if (isIPv6Preferred && !isIPv4Preferred && ip instanceof Inet4Address)         continue;
        if (isIPv4Preferred && ip instanceof Inet6Address)         continue;
        if (ip.isSiteLocalAddress())         siteLocalIps.add(ip);
        if (ip.isLinkLocalAddress())         linkLocalIps.add(ip);
        globalIps.add(ip);
      }
    }
    if (globalIps.size() == 1) {
      local=globalIps.get(0);
    }
 else     if (siteLocalIps.size() == 1) {
      local=siteLocalIps.get(0);
    }
 else     if (linkLocalIps.size() > 0) {
      local=linkLocalIps.get(0);
    }
 else {
      local=guessInetAddress(siteLocalIps);
    }
  }
  if (local == null) {
    try {
      Log.warn("Failed to determine IP, falling back to localhost.");
      local=NetworkUtils.isIPv6Preferred() && !NetworkUtils.isIPv4Preferred() ? InetAddress.getByName("::1") : InetAddress.getByName("127.0.0.1");
    }
 catch (    UnknownHostException e) {
      Log.throwErr(e);
    }
  }
  return (H2O.SELF_ADDRESS=local);
}
