{
  final int n=H2O.CLOUD.size();
  H2O.H2OCountedCompleter test=new H2O.H2OCountedCompleter(){
    @Override protected void compute2(){
      if (H2O.CLOUD.size() > 1) {
        for (        H2ONode from : H2O.CLOUD.members()) {
          for (          H2ONode to : H2O.CLOUD.members()) {
            if (from == to)             continue;
            addToPendingCount(1);
            if (from != H2O.SELF) {
              new RPC(from,new TestLauncher(to)).addCompleter(this).call();
            }
 else {
              new TestLauncher(to,this).fork();
            }
          }
        }
      }
      tryComplete();
    }
  }
;
  H2O.submitTask(test).join();
  TimelineHandler handler=new TimelineHandler();
  TimelineV2 t=handler.fetch(2,new TimelineV2());
  Set<String> msgs=new HashSet<>();
  for (  TimelineV2.Event e : t.events) {
    if (e.bytes().contains("TestTask") && e instanceof TimelineV2.NetworkEvent) {
      TimelineV2.NetworkEvent ne=(TimelineV2.NetworkEvent)e;
      msgs.add((ne.isSend ? "SEND" : "RECV") + " " + ne.from+ " -> "+ ne.to);
    }
  }
  assertEquals("some msgs are missing from the timeline: " + msgs.toString(),msgs.size(),2 * n * (n - 1));
}
