def anomaly(ip, port):
    h2o.init(ip, port)
    print 'Deep Learning Anomaly Detection MNIST'
    train = h2o.import_frame(h2o.locate('bigdata/laptop/mnist/train.csv.gz'))
    test = h2o.import_frame(h2o.locate('bigdata/laptop/mnist/test.csv.gz'))
    predictors = range(0, 784)
    resp = 784
    train = train[predictors]
    test = test[predictors]
    ae_model = h2o.deeplearning(x=train[predictors], training_frame=train, activation='Tanh', autoencoder=True, hidden=[50], l1=1e-05, ignore_const_cols=False, epochs=1)
    test_rec_error = ae_model.anomaly(test)
    test_recon = ae_model.predict(test)
