{
  ChunkHomesV3 h=new ChunkHomesV3();
  h.entries=new ChunkHomesEntryV3[H2O.CLOUD.size()];
  for (int i=0; i < h.entries.length; i++) {
    H2ONode n=H2O.CLOUD.members()[i];
    h.entries[i]=new ChunkHomesEntryV3();
    h.entries[i].ip_port=n.getIpPortString();
  }
  Frame frame=getFromDKV("key",s.key.key());
  int numVecs=frame.vecs().length;
  h.num_vecs=numVecs;
  Vec any=frame.anyVec();
  int n=any.nChunks();
  for (int i=0; i < n; i++) {
    Key k=any.chunkKey(i);
    int node_idx=k.home_node().index();
    h.entries[node_idx].num_chunks_per_vec+=1;
    h.entries[node_idx].num_chunks+=numVecs;
    h.entries[node_idx].num_rows+=any._espc[i + 1] - any._espc[i];
  }
  return h;
}
