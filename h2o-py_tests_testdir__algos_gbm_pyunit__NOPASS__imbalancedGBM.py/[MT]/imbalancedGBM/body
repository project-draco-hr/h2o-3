def imbalancedGBM(ip, port):
    h2o.init(ip, port)
    covtype = h2o.import_frame(path=h2o.locate('smalldata/covtype/covtype.20k.data'))
    hh_imbalanced = h2o.gbm(x=covtype[0:54], y=covtype[54], ntrees=50, balance_classes=False, nfolds=10)
    hh_imbalanced_perf = hh_imbalanced.model_performance(covtype)
    hh_imbalanced_perf.show()
    hh_balanced = h2o.gbm(x=covtype[0:54], y=covtype[54], ntrees=50, balance_classes=True, nfolds=10)
    hh_balanced_perf = hh_balanced.model_performance(covtype)
    hh_balanced_perf.show()
    class_6_err_imbalanced = hh_imbalanced_perf.error()[6]
    class_6_err_balanced = hh_balanced_perf.error()[6]
    if (class_6_err_imbalanced < class_6_err_balanced):
        print '--------------------'
        print ''
        print 'FAIL, balanced error greater than imbalanced error'
        print ''
        print ''
        print 'class_6_err_imbalanced'
        print class_6_err_imbalanced
        print ''
        print 'class_6_err_balanced'
        print class_6_err_balanced
        print ''
        print '--------------------'
    assert (class_6_err_imbalanced >= class_6_err_balanced), 'balance_classes makes it worse!'
