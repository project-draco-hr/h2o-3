{
  if (_bitoff != 0)   throw H2O.unimpl();
  if (_byteoff != 0)   throw H2O.unimpl();
  if (idx < 0 || idx >= _nbits)   throw new IndexOutOfBoundsException("Must have 0 <= idx <= " + Integer.toString(_nbits - 1) + ": "+ idx);
  int idx_next=idx >> 3;
  byte bt_next=(byte)(~_val[idx_next] & ((byte)0xff << idx));
  if (idx_next == _val.length - 1 && (_nbits & 7) > 0)   bt_next&=~((byte)0xff << (_nbits & 7));
  while (bt_next == 0) {
    if (++idx_next >= _val.length)     return -1;
    bt_next=(byte)(~_val[idx_next]);
    if (idx_next == _val.length - 1 && (_nbits & 7) > 0)     bt_next&=~((byte)0xff << (_nbits & 7));
  }
  return (idx_next << 3) + Integer.numberOfTrailingZeros(bt_next);
}
