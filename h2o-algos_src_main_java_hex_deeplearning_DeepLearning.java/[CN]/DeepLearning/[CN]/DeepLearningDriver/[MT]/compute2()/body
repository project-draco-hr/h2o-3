{
  try {
    Scope.enter();
    _parms.read_lock_frames(DeepLearning.this);
    init(true);
    if (error_count() > 0)     throw new IllegalArgumentException("Found validation errors: " + validationErrors());
    buildModel();
    done();
  }
 catch (  Throwable t) {
    Job thisJob=DKV.getGet(_key);
    if (thisJob._state == JobState.CANCELLED) {
      Log.info("Job cancelled by user.");
    }
 else {
      failed(t);
      throw t;
    }
  }
 finally {
    _parms.read_unlock_frames(DeepLearning.this);
    Scope.exit();
  }
  tryComplete();
}
