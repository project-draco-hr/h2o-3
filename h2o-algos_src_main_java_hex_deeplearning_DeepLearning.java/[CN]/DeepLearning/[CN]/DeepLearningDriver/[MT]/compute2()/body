{
  try {
    byte[] cs=new AutoBuffer().put(_parms).buf();
    Scope.enter();
    init(true);
    _parms.read_lock_frames(DeepLearning.this);
    if (error_count() > 0) {
      DeepLearning.this.updateValidationMessages();
      throw H2OModelBuilderIllegalArgumentException.makeFromBuilder(DeepLearning.this);
    }
    buildModel();
    byte[] cs2=new AutoBuffer().put(_parms).buf();
    assert(Arrays.equals(cs,cs2));
    done();
  }
 catch (  Throwable t) {
    Job thisJob=DKV.getGet(_key);
    if (thisJob._state == JobState.CANCELLED) {
      Log.info("Job cancelled by user.");
    }
 else {
      failed(t);
      throw t;
    }
  }
 finally {
    updateModelOutput();
    _parms.read_unlock_frames(DeepLearning.this);
    Scope.exit();
  }
  tryComplete();
}
