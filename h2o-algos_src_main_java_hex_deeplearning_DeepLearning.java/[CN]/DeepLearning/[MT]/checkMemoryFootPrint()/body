{
  if (_parms._checkpoint != null)   return;
  final DataInfo dinfo=makeDataInfo(_train,_valid,_parms);
  int p=dinfo.fullN();
  long model_size=p * _parms._hidden[0];
  int layer=1;
  for (; layer < _parms._hidden.length; ++layer)   model_size+=_parms._hidden[layer - 1] * _parms._hidden[layer];
  model_size+=_parms._hidden[layer - 1] * Math.abs(_train.lastVec().cardinality());
  for (layer=0; layer < _parms._hidden.length; ++layer)   model_size+=_parms._hidden[layer];
  model_size+=Math.abs(_train.lastVec().cardinality());
  Log.info("Model size: " + model_size);
  if (model_size > 256e6 / 4 / 3) {
    error("_hidden","Model is too large: " + model_size + " parameters. Try reducing the number of neurons in the hidden layers.");
  }
}
