{
  if (!_setup._pType._parallelParseSupported)   throw H2O.unimpl();
  StreamData din=new StreamData(is);
  int cidx=0;
  StreamDataOut nextChunk=dout;
  long lastProgress=pmon._parsedBytes;
  while (is.available() > 0) {
    if (pmon._parsedBytes != lastProgress) {
      lastProgress=pmon._parsedBytes;
      nextChunk.close();
      if (dout != nextChunk)       dout.reduce(nextChunk);
      nextChunk=nextChunk.nextChunk();
    }
    parallelParse(cidx++,din,nextChunk);
  }
  parallelParse(cidx,din,nextChunk);
  nextChunk.close();
  if (dout != nextChunk)   dout.reduce(nextChunk);
  return dout;
}
