{
  _adaptedFrame=fr;
  _catOffsets=MemoryManager.malloc4(catLevels.length + 1);
  _catMissing=new int[catLevels.length];
  int s=0;
  for (int i=0; i < catLevels.length; ++i) {
    _catOffsets[i]=s;
    s+=catLevels[i].length;
  }
  _catLvls=catLevels;
  _catOffsets[_catOffsets.length - 1]=s;
  _responses=responses;
  _cats=catLevels.length;
  _nums=fr.numCols() - _cats - responses;
  if ((_predictor_transform=predictor_transform) == TransformType.STANDARDIZE && _nums > 0) {
    _normMul=MemoryManager.malloc8d(_nums);
    _normSub=MemoryManager.malloc8d(_nums);
    for (int i=0; i < _nums; ++i) {
      Vec v=fr.vec(catLevels.length + i);
      _normMul[i]=(v.sigma() != 0) ? 1.0 / v.sigma() : 1.0;
      _normSub[i]=v.mean();
    }
  }
 else   if ((_predictor_transform=predictor_transform) == TransformType.NORMALIZE && _nums > 0) {
    _normMul=MemoryManager.malloc8d(_nums);
    _normSub=MemoryManager.malloc8d(_nums);
    for (int i=0; i < _nums; ++i) {
      Vec v=fr.vec(catLevels.length + i);
      _normMul[i]=(v.max() - v.min() > 0) ? 1.0 / (v.max() - v.min()) : 1.0;
      _normSub[i]=v.mean();
    }
  }
 else {
    _normMul=null;
    _normSub=null;
  }
  if ((_response_transform=response_transform) == TransformType.STANDARDIZE && responses > 0) {
    _normRespMul=MemoryManager.malloc8d(responses);
    _normRespSub=MemoryManager.malloc8d(responses);
    for (int i=0; i < responses; ++i) {
      Vec v=fr.vec(fr.numCols() - responses + i);
      _normRespSub[i]=(v.sigma() != 0) ? 1.0 / v.sigma() : 1.0;
      _normRespSub[i]=v.mean();
    }
  }
 else   if ((_response_transform=response_transform) == TransformType.NORMALIZE && responses > 0) {
    _normRespMul=MemoryManager.malloc8d(responses);
    _normRespSub=MemoryManager.malloc8d(responses);
    for (int i=0; i < responses; ++i) {
      Vec v=fr.vec(fr.numCols() - responses + i);
      _normRespSub[i]=(v.max() - v.min() > 0) ? 1.0 / (v.max() - v.min()) : 1.0;
      _normRespSub[i]=v.mean();
    }
  }
 else {
    _normRespMul=null;
    _normRespSub=null;
  }
  _useAllFactorLevels=false;
  _adaptedFrame.reloadVecs();
  _nfolds=nfolds;
  _foldId=foldId;
}
