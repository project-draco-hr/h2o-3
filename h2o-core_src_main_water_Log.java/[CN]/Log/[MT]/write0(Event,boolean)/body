{
  org.apache.log4j.Logger l4j=getLog4jLogger();
  if ((l4j == null) && !loggerCreateWasCalled && !H2O.DEBUG) {
    if (H2O.SELF != null) {
      File dir;
      if (H2O.ICE_ROOT.getScheme() == null || H2O.Schemes.FILE.equals(H2O.ICE_ROOT.getScheme()))       dir=new File(H2O.ICE_ROOT.getPath());
 else       dir=new File(H2O.DEFAULT_ICE_ROOT());
      loggerCreateWasCalled=true;
      l4j=createLog4jLogger(dir.toString());
    }
  }
  if (l4j == null) {
    e.toString();
synchronized (startupLogEventsLock) {
      if (startupLogEvents != null) {
        startupLogEvents.add(e);
      }
 else {
      }
    }
  }
 else {
    if (startupLogEvents != null) {
synchronized (startupLogEventsLock) {
        for (int i=0; i < startupLogEvents.size(); i++) {
          Event bufferedEvent=startupLogEvents.get(i);
          log0(l4j,bufferedEvent);
        }
        startupLogEvents=null;
      }
    }
    log0(l4j,e);
  }
  if (Paxos._cloudLocked)   logToKV(e.when.startAsString(),e.thread,e.kind,e.sys,e.body(0));
  if (printOnOut || printAll)   unwrap(System.out,e.toShortString());
  e.printMe=false;
}
