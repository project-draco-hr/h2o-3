{
  int v1=-1, v2=-1;
  Vec vec1, vec2;
  boolean useAllFactors;
  InteractionWrappedVec iwv;
  if (_adaptedFrame == null) {
    iwv=(InteractionWrappedVec)chunks[cid].vec();
    vec1=iwv.v1();
    vec2=iwv.v2();
    useAllFactors=iwv._useAllFactorLevels;
    for (int i=0; i < chunks.length; ++i) {
      if (v1 >= 0 && v2 >= 0)       break;
      if (v1 == -1 && chunks[i].vec() == vec1)       v1=i;
      if (v2 == -1 && chunks[i].vec() == vec2)       v2=i;
    }
    if (v1 == -1 && v2 >= _cats)     return (int)vec1.at(rid) - (useAllFactors ? 0 : 1);
    if (v2 == -1 && v1 >= _cats)     return (int)vec2.at(rid) - (useAllFactors ? 0 : 1);
  }
 else {
    iwv=((InteractionWrappedVec)_adaptedFrame.vec(cid));
    v1=_adaptedFrame.find(vec1=iwv.v1());
    v2=_adaptedFrame.find(vec2=iwv.v2());
  }
  useAllFactors=iwv._useAllFactorLevels;
  if (v1 == -1 && v2 >= _cats)   return (int)vec1.at(rid) - (useAllFactors ? 0 : 1);
  if (v2 == -1 && v1 >= _cats)   return (int)vec2.at(rid) - (useAllFactors ? 0 : 1);
  if (v1 < _cats)   return (int)chunks[v1].at8(rid) - (useAllFactors ? 0 : 1);
 else   if (v2 < _cats)   return (int)chunks[v2].at8(rid) - (useAllFactors ? 0 : 1);
  return 0;
}
