def _parse(setup):
    '\n  Trigger a parse; blocking; removeFrame just keep the Vecs.\n\n  Parameters\n  ----------\n  setup : dict\n    The result of calling parse_setup.\n\n:return: A new parsed object\n  '
    p = {'destination_frame': _py_tmp_key(), 'parse_type': None, 'separator': None, 'single_quotes': None, 'check_header': None, 'number_columns': None, 'chunk_size': None, 'delete_on_done': True, 'blocking': False, 'column_types': None, }
    if setup['column_names']:
        p['column_names'] = None
    if setup['na_strings']:
        p['na_strings'] = None
    p.update({k: v for (k, v) in setup.iteritems() if (k in p)})
    p['source_frames'] = [_quoted(src['name']) for src in setup['source_frames']]
    j = H2OJob(H2OConnection.post_json(url_suffix='Parse', **p), 'Parse').poll()
    return j.jobs
