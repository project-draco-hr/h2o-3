def kmeans(x, validation_x=None, k=None, model_id=None, max_iterations=None, standardize=None, init=None, seed=None, nfolds=None, fold_column=None, fold_assignment=None, training_frame=None, validation_frame=None, user_points=None, ignored_columns=None, score_each_iteration=None, keep_cross_validation_predictions=None, ignore_const_cols=None, checkpoint=None):
    '\n  Performs k-means clustering on an H2O dataset.\n\n  Parameters\n  ----------\n    x : H2OFrame\n       The data columns on which k-means operates.\n\n    k : int\n      The number of clusters. Must be between 1 and 1e7 inclusive. k may be omitted if the user specifies the\n      initial centers in the init parameter. If k is not omitted, in this case, then it should be equal to the number of\n      user-specified centers.\n    model_id : str\n      (Optional) The unique id assigned to the resulting model. If none is given, an id will automatically be generated.\n    max_iterations : int\n      The maximum number of iterations allowed. Must be between 0 and 1e6 inclusive.\n    standardize : bool\n      Indicates whether the data should be standardized before running k-means.\n    init : str\n      A character string that selects the initial set of k cluster centers. Possible values are "Random": for\n      random initialization, "PlusPlus": for k-means plus initialization, or "Furthest": for initialization at the furthest\n      point from each successive center. Additionally, the user may specify a the initial centers as a matrix, data.frame,\n      H2OFrame, or list of vectors. For matrices, data.frames, and H2OFrames, each row of the respective structure is an\n      initial center. For lists of vectors, each vector is an initial center.\n    seed : int\n      (Optional) Random seed used to initialize the cluster centroids.\n    nfolds : int\n      (Optional) Number of folds for cross-validation. If nfolds >= 2, then validation must remain empty.\n    fold_column : H2OFrame\n      (Optional) Column with cross-validation fold index assignment per observation\n    fold_assignment : str\n      Cross-validation fold assignment scheme, if fold_column is not specified Must be "AUTO", "Random" or "Modulo"\n\n  :return: An instance of H2OClusteringModel.\n  '
    warnings.warn('`h2o.kmeans` is deprecated. Use the estimators sub module to build an H2OKMeansEstimator.', category=DeprecationWarning, stacklevel=2)
    parms = {k: v for (k, v) in locals().items() if ((k in ['training_frame', 'validation_frame', 'validation_x', 'validation_y', 'offset_column', 'weights_column', 'fold_column']) or (v is not None))}
    parms['algo'] = 'kmeans'
    return unsupervised(parms)
