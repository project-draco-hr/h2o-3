def create_frame(id=None, rows=10000, cols=10, randomize=True, value=0, real_range=100, categorical_fraction=0.2, factors=100, integer_fraction=0.2, integer_range=100, binary_fraction=0.1, binary_ones_fraction=0.02, missing_fraction=0.01, response_factors=2, has_response=False, seed=None):
    '\n  Data Frame Creation in H2O.\n  Creates a data frame in H2O with real-valued, categorical, integer, and binary columns specified by the user.\n\n  :param id: A string indicating the destination key. If empty, this will be auto-generated by H2O.\n  :param rows: The number of rows of data to generate.\n  :param cols: The number of columns of data to generate. Excludes the response column if has_response == True}.\n  :param randomize: A logical value indicating whether data values should be randomly generated. This must be TRUE if\n  either categorical_fraction or integer_fraction is non-zero.\n  :param value: If randomize == FALSE, then all real-valued entries will be set to this value.\n  :param real_range: The range of randomly generated real values.\n  :param categorical_fraction:  The fraction of total columns that are categorical.\n  :param factors: The number of (unique) factor levels in each categorical column.\n  :param integer_fraction: The fraction of total columns that are integer-valued.\n  :param integer_range: The range of randomly generated integer values.\n  :param binary_fraction: The fraction of total columns that are binary-valued.\n  :param binary_ones_fraction: The fraction of values in a binary column that are set to 1.\n  :param missing_fraction: The fraction of total entries in the data frame that are set to NA.\n  :param response_factors: If has_response == TRUE, then this is the number of factor levels in the response column.\n  :param has_response: A logical value indicating whether an additional response column should be pre-pended to the\n  final H2O data frame. If set to TRUE, the total number of columns will be cols+1.\n  :param seed: A seed used to generate random values when randomize = TRUE.\n  :return: the H2OFrame that was created\n  '
    parms = {'dest': (_py_tmp_key() if (id is None) else id), 'rows': rows, 'cols': cols, 'randomize': randomize, 'value': value, 'real_range': real_range, 'categorical_fraction': categorical_fraction, 'factors': factors, 'integer_fraction': integer_fraction, 'integer_range': integer_range, 'binary_fraction': binary_fraction, 'binary_ones_fraction': binary_ones_fraction, 'missing_fraction': missing_fraction, 'response_factors': response_factors, 'has_response': has_response, 'seed': ((-1) if (seed is None) else seed), }
    H2OJob(H2OConnection.post_json('CreateFrame', **parms), 'Create Frame').poll()
    return get_frame(parms['dest'])
