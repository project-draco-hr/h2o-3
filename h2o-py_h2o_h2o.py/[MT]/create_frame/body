def create_frame(id=None, rows=10000, cols=10, randomize=True, value=0, real_range=100, categorical_fraction=0.2, factors=100, integer_fraction=0.2, integer_range=100, binary_fraction=0.1, binary_ones_fraction=0.02, time_fraction=0, string_fraction=0, missing_fraction=0.01, response_factors=2, has_response=False, seed=None, seed_for_column_types=None):
    u'Data Frame Creation in H2O.\n    Creates a data frame in H2O with real-valued, categorical, integer,\n    and binary columns specified by the user.\n\n    Parameters\n    ----------\n      id : str\n        A string indicating the destination key. If empty, this will be auto-generated\n        by H2O.\n\n      rows : int\n        The number of rows of data to generate.\n\n      cols : int\n        The number of columns of data to generate. Excludes the response column if\n        has_response == True.\n\n      randomize : bool\n        A logical value indicating whether data values should be randomly generated.\n        This must be TRUE if either categorical_fraction or integer_fraction is non-zero.\n\n      value : int\n        If randomize == FALSE, then all real-valued entries will be set to this value.\n\n      real_range : float\n        The range of randomly generated real values.\n\n      categorical_fraction : float\n        The fraction of total columns that are categorical.\n\n      factors : int\n        The number of (unique) factor levels in each categorical column.\n\n      integer_fraction : float\n        The fraction of total columns that are integer-valued.\n\n      integer_range : list\n        The range of randomly generated integer values.\n\n      binary_fraction : float\n        The fraction of total columns that are binary-valued.\n\n      binary_ones_fraction : float\n        The fraction of values in a binary column that are set to 1.\n\n      time_fraction : float\n        The fraction of randomly created date/time columns\n\n      string_fraction : float\n        The fraction of randomly created string columns\n\n      missing_fraction : float\n        The fraction of total entries in the data frame that are set to NA.\n\n      response_factors : int\n        If has_response == TRUE, then this is the number of factor levels in the response\n        column.\n\n      has_response : bool\n        A logical value indicating whether an additional response column should be\n        pre-pended to the final H2O data frame. If set to TRUE, the total number\n        of columns will be cols+1.\n\n      seed : int\n        A seed used to generate random values when randomize = TRUE.\n\n      seed_for_column_types : int\n        A seed used to generate random column types when randomize = TRUE.\n\n    Returns\n    -------\n      H2OFrame\n    '
    parms = {u'dest': (py_tmp_key(append=h2oconn.session_id) if (id is None) else id), u'rows': rows, u'cols': cols, u'randomize': randomize, u'value': value, u'real_range': real_range, u'categorical_fraction': categorical_fraction, u'factors': factors, u'integer_fraction': integer_fraction, u'integer_range': integer_range, u'binary_fraction': binary_fraction, u'binary_ones_fraction': binary_ones_fraction, u'time_fraction': time_fraction, u'string_fraction': string_fraction, u'missing_fraction': missing_fraction, u'response_factors': response_factors, u'has_response': has_response, u'seed': ((-1) if (seed is None) else seed), u'seed_for_column_types': ((-1) if (seed_for_column_types is None) else seed_for_column_types), }
    H2OJob(api(u'POST /3/CreateFrame', data=parms), u'Create Frame').poll()
    return get_frame(parms[u'dest'])
