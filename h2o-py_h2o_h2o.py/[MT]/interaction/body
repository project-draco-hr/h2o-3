def interaction(data, factors, pairwise, max_factors, min_occurrence, destination_frame=None):
    u'\n    Categorical Interaction Feature Creation in H2O.\n    Creates a frame in H2O with n-th order interaction features between categorical columns, as specified by\n    the user.\n\n    Parameters\n    ----------\n      data : H2OFrame\n        the H2OFrame that holds the target categorical columns.\n\n      factors : list\n        factors Factor columns (either indices or column names).\n\n      pairwise : bool\n        Whether to create pairwise interactions between factors (otherwise create one\n        higher-order interaction). Only applicable if there are 3 or more factors.\n\n      max_factors : int\n        Max. number of factor levels in pair-wise interaction terms (if enforced, one extra\n        catch-all factor will be made)\n\n      min_occurrence : int\n        Min. occurrence threshold for factor levels in pair-wise interaction terms\n\n      destination_frame : str\n        A string indicating the destination key. If empty, this will be auto-generated by H2O.\n\n    Returns\n    -------\n      H2OFrame\n    '
    factors = [(data.names[n] if is_type(n, int) else n) for n in factors]
    parms = {u'dest': (py_tmp_key(append=h2oconn.session_id) if (destination_frame is None) else destination_frame), u'source_frame': data.frame_id, u'factor_columns': [quoted(f) for f in factors], u'pairwise': pairwise, u'max_factors': max_factors, u'min_occurrence': min_occurrence, }
    H2OJob(api(u'POST /3/Interaction', data=parms), u'Interactions').poll()
    return get_frame(parms[u'dest'])
