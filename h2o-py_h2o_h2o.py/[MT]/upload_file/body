def upload_file(path, destination_frame='', header=((-1), 0, 1), sep='', col_names=None, col_types=None, na_strings=None):
    '\n  Upload a dataset at the path given from the local machine to the H2O cluster.\n\n  Parameters\n  ----------\n    path : str\n      A path specifying the location of the data to upload.\n    destination_frame : str, optional\n      The unique hex key assigned to the imported file. If none is given, a key will automatically be generated.\n    header : int, optional\n     -1 means the first line is data, 0 means guess, 1 means first line is header.\n    sep : str, optional\n      The field separator character. Values on each line of the file are separated by this character. If sep = "", the parser will automatically detect the separator.\n    col_names : list, optional\n      A list of column names for the file.\n    col_types : list or dict, optional\n      A list of types or a dictionary of column names to types to specify whether columns should be forced to a certain type upon import parsing. If a list, the types for elements that are None will be guessed.\n    na_strings : list or dict, optional\n      A list of strings, or a list of lists of strings (one list per column), or a dictionary of column names to strings which are to be interpreted as missing values.\n\n  Returns\n  -------\n    A new H2OFrame instance.\n\n  Examples\n  --------\n    >>> import h2o as ml\n    >>> ml.upload_file(path="/path/to/local/data", destination_frame="my_local_data")\n    ...\n  '
    fui = {'file': os.path.abspath(path), }
    destination_frame = (_py_tmp_key() if (destination_frame == '') else destination_frame)
    H2OConnection.post_json(url_suffix='PostFile', file_upload_info=fui, destination_frame=destination_frame, header=header, separator=sep, column_names=col_names, column_types=col_types, na_strings=na_strings)
    return H2OFrame(raw_id=destination_frame)
