def check_models(model1, model2, use_cross_validation=False, op='e'):
    "\n  Check that the given models are equivalent\n  :param model1:\n  :param model2:\n  :param use_cross_validation: boolean. if True, use validation metrics to determine model equality. Otherwise, use\n  training metrics.\n  :param op: comparison operator to use. 'e':==, 'g':>, 'ge':>=\n  :return: None. Throw meaningful error messages if the check fails\n  "
    model1_type = type(model1)
    model2_type = type(model2)
    assert (model1_type == model2_type), 'The model types differ. The first model is of type {0} and the second models is of type {1}.'.format(model1_type, model2_type)
    if isinstance(model1, H2OBinomialModel):
        f1_1 = model1.F1(xval=use_cross_validation)
        f1_2 = model2.F1(xval=use_cross_validation)
        if (op == 'e'):
            assert (f1_1[0][1] == f1_2[0][1]), 'The first model has an F1 of {0} and the second model has an F1 of {1}. Expected the first to be == to the second.'.format(f1_1[0][1], f1_2[0][1])
        elif (op == 'g'):
            assert (f1_1[0][1] > f1_2[0][1]), 'The first model has an F1 of {0} and the second model has an F1 of {1}. Expected the first to be > than the second.'.format(f1_1[0][1], f1_2[0][1])
        elif (op == 'ge'):
            assert (f1_1[0][1] >= f1_2[0][1]), 'The first model has an F1 of {0} and the second model has an F1 of {1}. Expected the first to be >= than the second.'.format(f1_1[0][1], f1_2[0][1])
    elif isinstance(model1, H2ORegressionModel):
        mse1 = model1.mse(xval=use_cross_validation)
        mse2 = model2.mse(xval=use_cross_validation)
        if (op == 'e'):
            assert (mse1 == mse2), 'The first model has an MSE of {0} and the second model has an MSE of {1}. Expected the first to be == to the second.'.format(mse1, mse2)
        elif (op == 'g'):
            assert (mse1 > mse2), 'The first model has an MSE of {0} and the second model has an MSE of {1}. Expected the first to be > than the second.'.format(mse1, mse2)
        elif (op == 'ge'):
            assert (mse1 >= mse2), 'The first model has an MSE of {0} and the second model has an MSE of {1}. Expected the first to be >= than the second.'.format(mse1, mse2)
    elif isinstance(model1, H2OMultinomialModel):
        pass
    elif isinstance(model1, H2OClusteringModel):
        totss1 = model1.totss(xval=use_cross_validation)
        totss2 = model2.totss(xval=use_cross_validation)
        if (op == 'e'):
            assert (totss1 == totss2), 'The first model has an TOTSS of {0} and the second model has an TOTSS of {1}. Expected the first to be == to the second.'.format(totss1, totss2)
        elif (op == 'g'):
            assert (totss1 > totss2), 'The first model has an TOTSS of {0} and the second model has an TOTSS of {1}. Expected the first to be > than the second.'.format(totss1, totss2)
        elif (op == 'ge'):
            assert (totss1 >= totss2), 'The first model has an TOTSS of {0} and the second model has an TOTSS of {1}. Expected the first to be >= than the second.'.format(totss1, totss2)
