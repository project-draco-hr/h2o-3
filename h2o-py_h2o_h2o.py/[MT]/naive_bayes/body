def naive_bayes(x, y, validation_x=None, validation_y=None, training_frame=None, validation_frame=None, laplace=None, threshold=None, eps=None, compute_metrics=None, offset_column=None, weights_column=None, balance_classes=None, max_after_balance_size=None, nfolds=None, fold_column=None, fold_assignment=None, keep_cross_validation_predictions=None, checkpoint=None):
    '\n  The naive Bayes classifier assumes independence between predictor variables conditional on the response, and a\n  Gaussian distribution of numeric predictors with mean and standard deviation computed from the training dataset.\n  When building a naive Bayes classifier, every row in the training dataset that contains at least one NA will be\n  skipped completely. If the test dataset has missing values, then those predictors are omitted in the probability\n  calculation during prediction.\n\n  Parameters\n  ----------\n\n  laplace : int\n    A positive number controlling Laplace smoothing. The default zero disables smoothing.\n  threshold : int\n    The minimum standard deviation to use for observations without enough data. Must be at least 1e-10.\n  eps : float\n    A threshold cutoff to deal with numeric instability, must be positive.\n  compute_metrics : bool\n    A logical value indicating whether model metrics should be computed. Set to FALSE to reduce the runtime of the algorithm.\n  training_frame : H2OFrame\n    Training Frame\n  validation_frame : H2OFrame\n    Validation Frame\n  offset_column : H2OFrame\n    Specify the offset column.\n  weights_column : H2OFrame\n    Specify the weights column.\n  nfolds : int\n    (Optional) Number of folds for cross-validation. If nfolds >= 2, then validation must remain empty.\n  fold_column : H2OFrame\n    (Optional) Column with cross-validation fold index assignment per observation\n  fold_assignment : str\n    Cross-validation fold assignment scheme, if fold_column is not specified Must be "AUTO", "Random" or "Modulo"\n  keep_cross_validation_predictions :  bool\n    Whether to keep the predictions of the cross-validation models\n  \n  :return: Returns an H2OBinomialModel if the response has two categorical levels, H2OMultinomialModel otherwise.\n  '
    parms = {k: v for (k, v) in locals().items() if ((k in ['training_frame', 'validation_frame', 'validation_x', 'validation_y', 'offset_column', 'weights_column', 'fold_column']) or (v is not None))}
    parms['algo'] = 'naivebayes'
    return h2o_model_builder.supervised(parms)
