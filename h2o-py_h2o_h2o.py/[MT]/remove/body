def remove(x):
    u'Remove object(s) from H2O.\n\n    Parameters\n    ----------\n      x : H2OFrame, H2OEstimator, or basestring, or a list/tuple of those things.\n        The object(s) or unique id(s) pointing to the object(s) to be removed.\n    '
    if (not isinstance(x, (list, tuple))):
        x = (x,)
    for xi in x:
        if (xi is None):
            raise ValueError(u'h2o.remove with no object is not supported, for your protection')
        if isinstance(xi, H2OFrame):
            xi_id = xi._ex._cache._id
            if (xi_id is None):
                return
            rapids(u'(rm {})'.format(xi_id))
            xi._ex = None
        elif isinstance(xi, H2OEstimator):
            H2OConnection.delete((u'DKV/' + xi.model_id))
            xi._id = None
        elif isinstance(xi, basestring):
            try:
                rapids(u'(rm {})'.format(xi))
            except:
                H2OConnection.delete((u'DKV/' + xi))
        else:
            raise ValueError(u'input to h2o.remove must one of: H2OFrame, H2OEstimator, or basestring')
