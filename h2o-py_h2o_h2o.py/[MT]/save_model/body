def save_model(model, dir='', name='', filename='', force=False):
    '\n  Save an H2O Model Object to Disk.\n  In the case of existing files force = TRUE will overwrite the file. Otherwise, the operation will fail.\n  :param dir: string indicating the directory the model will be written to.\n  :param name: string name of the file.\n  :param filename: full path to the file.\n  :param force: logical, indicates how to deal with files that already exist\n  :return: the path of the model (string)\n  '
    if (not isinstance(dir, str)):
        raise ValueError('`dir` must be a character string')
    if (dir == ''):
        dir = os.getcwd()
    if (not isinstance(name, str)):
        raise ValueError('`name` must be a character string')
    if (name == ''):
        name = model._model_json['model_id']['name']
    if (not isinstance(filename, str)):
        raise ValueError('`filename` must be a character string')
    if (not isinstance(force, bool)):
        raise ValueError('`force` must be True or False')
    path = (filename if (filename != '') else os.path.join(dir, name))
    kwargs = dict([('dir', path), ('force', int(force)), ('_rest_version', 99)])
    H2OConnection.get(('Models.bin/' + model._model_json['model_id']['name']), **kwargs)
    return path
