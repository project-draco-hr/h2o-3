def metric(self, metric='accuracy', thresholds=None):
    available_metrics = self._metric_json['thresholds_and_metric_scores'].col_header[1:]
    if (metric not in available_metrics):
        raise ValueError(('metric parameter must be one of: ' + ', '.join(available_metrics)))
    metric_col = self._metric_json['thresholds_and_metric_scores'].col_header.index(metric)
    thresh_and_metrics = []
    if (thresholds is not None):
        if (not isinstance(thresholds, list)):
            raise ValueError('thresholds parameter must be a list (i.e. [0.01, 0.5, 0.99])')
        for e in self._metric_json['thresholds_and_metric_scores'].cell_values:
            if (float(e[0]) in thresholds):
                thresh_and_metrics.append([float(e[0]), e[metric_col]])
    else:
        for e in self._metric_json['thresholds_and_metric_scores'].cell_values:
            thresh_and_metrics.append([float(e[0]), e[metric_col]])
    return thresh_and_metrics
