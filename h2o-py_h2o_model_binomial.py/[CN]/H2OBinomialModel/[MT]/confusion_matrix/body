def confusion_matrix(self, metric='f1', train=False, valid=False):
    '\n    Get the confusion matrix for the specified metric\n    If both train and valid are False, return the train.\n    If both train and valid are True, return the valid.\n\n    :param metric: A string in {"min_per_class_accuracy", "absolute_MCC", "tnr", "fnr", "fpr", "tpr", "precision", "error", "accuracy", "f0point5", "f2", "f1"}\n    :param train: Return the max per class error for training data.\n    :param valid: Return the max per class error for the validation data.\n    :return: the confusion matrix for the metric\n    '
    print 'Confusion matrix for metric: ', metric
    print 
    tm = ModelBase._get_metrics(self, *ModelBase._train_or_valid(train, valid))
    if (tm is None):
        return None
    return tm.confusion_matrix(metric=metric)
