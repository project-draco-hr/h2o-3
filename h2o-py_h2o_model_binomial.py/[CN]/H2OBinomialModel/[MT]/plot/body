def plot(self, timestep='AUTO', metric='AUTO', **kwargs):
    'Plots training set (and validation set if available) scoring history for an\n    H2OBinomialModel. The timestep and metric arguments are restricted to what is\n    available in its scoring history.\n\n    Parameters\n    ----------\n      timestep : str\n         A unit of measurement for the x-axis.\n\n      metric : str\n        A unit of measurement for the y-axis.\n    '
    if (self._model_json['algo'] in ('deeplearning', 'drf', 'gbm')):
        if (metric == 'AUTO'):
            metric = 'logloss'
        elif (metric not in ('logloss', 'AUC', 'classification_error', 'MSE')):
            raise ValueError('metric for H2OBinomialModel must be one of: AUTO, logloss, AUC, classification_error, MSE')
    self._plot(timestep=timestep, metric=metric, **kwargs)
