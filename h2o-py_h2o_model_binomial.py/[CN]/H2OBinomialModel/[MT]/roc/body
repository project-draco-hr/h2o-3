def roc(self, train=False, valid=False, xval=False):
    '\n    Return the coordinates of the ROC curve for a given set of data,\n    as a two-tuple containing the false positive rates as a list and true positive\n    rates as a list.\n    If all are False (default), then return is the training data.\n    If more than one ROC curve is requested, the data is returned as a dictionary\n    of two-tuples.\n    :param train: If train is true, then return the ROC coordinates for the training data.\n    :param valid: If valid is true, then return the ROC coordinates for the validation data.\n    :param xval: If xval is true, then return the ROC coordinates for the cross validation data.\n    :return rocs_cooridinates: the true cooridinates of the roc curve.\n    '
    tm = ModelBase._get_metrics(self, train, valid, xval)
    m = {}
    for (k, v) in zip(tm.keys(), tm.values()):
        if (v is not None):
            m[k] = (v.fprs, v.tprs)
    return (m.values()[0] if (len(m) == 1) else m)
