{
  if (vals.length < _sparseLen)   throw new IllegalArgumentException();
  int off=_OFF;
  final int inc=_ridsz;
  if (_ridsz == 2) {
    for (int i=0; i < _sparseLen; ++i, off+=inc) {
      ids[i]=UnsafeUtils.get2(_mem,off);
      vals[i]=1;
    }
  }
 else   if (_ridsz == 4) {
    for (int i=0; i < _sparseLen; ++i, off+=inc) {
      ids[i]=UnsafeUtils.get4(_mem,off);
      vals[i]=1;
    }
  }
 else   throw H2O.unimpl();
  return sparseLenZero();
}
