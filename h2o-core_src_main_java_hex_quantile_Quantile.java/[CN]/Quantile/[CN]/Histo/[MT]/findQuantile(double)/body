{
  double p2=prob * (_nrows - 1);
  long r2=(long)p2;
  int loidx=findBin(r2);
  double lo=(loidx == _nbins) ? binEdge(_nbins) : _maxs[loidx];
  if (r2 == p2 && _mins[loidx] == lo)   return lo;
  long r3=r2 + 1;
  int hiidx=findBin(r3);
  double hi=(hiidx == _nbins) ? binEdge(_nbins) : _mins[hiidx];
  if (loidx == hiidx)   return (lo == hi) ? lo : Double.NaN;
  return computeQuantile(lo,hi,r2,_nrows,prob);
}
