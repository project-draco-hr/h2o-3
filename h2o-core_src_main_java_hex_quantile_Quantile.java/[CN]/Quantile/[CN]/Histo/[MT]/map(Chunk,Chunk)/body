{
  _bins=new double[_nbins];
  _mins=new double[_nbins];
  _maxs=new double[_nbins];
  Arrays.fill(_mins,Double.MAX_VALUE);
  Arrays.fill(_maxs,-Double.MAX_VALUE);
  double d;
  for (int row=0; row < chk._len; row++) {
    double w=weight.atd(row);
    if (w == 0)     continue;
    if (!Double.isNaN(d=chk.atd(row))) {
      double idx=(d - _lb) / _step;
      if (!(0.0 <= idx && idx < _bins.length))       continue;
      int i=(int)idx;
      if (_bins[i] == 0)       _mins[i]=_maxs[i]=d;
 else {
        if (d < _mins[i])         _mins[i]=d;
        if (d > _maxs[i])         _maxs[i]=d;
      }
      _bins[i]+=w;
    }
  }
}
