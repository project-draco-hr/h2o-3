{
  double bins[]=_bins=new double[_nbins];
  double mins[]=_mins=new double[_nbins];
  double maxs[]=_maxs=new double[_nbins];
  Arrays.fill(_mins,Double.MAX_VALUE);
  Arrays.fill(_maxs,-Double.MAX_VALUE);
  double d;
  for (int row=0; row < chk._len; row++) {
    double w=weight.atd(row);
    if (w == 0)     continue;
    if (!Double.isNaN(d=chk.atd(row))) {
      double idx=(d - _lb) / _step;
      if (!(0.0 <= idx && idx < bins.length))       continue;
      int i=(int)idx;
      if (bins[i] == 0)       mins[i]=maxs[i]=d;
 else {
        if (d < mins[i])         mins[i]=d;
        if (d > maxs[i])         maxs[i]=d;
      }
      bins[i]+=w;
    }
  }
}
