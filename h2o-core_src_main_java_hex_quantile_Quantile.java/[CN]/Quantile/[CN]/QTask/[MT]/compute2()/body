{
  _quantiles=new double[_train.numCols()][_probs.length];
  Vec vecs[]=_train.vecs();
  for (int n=0; n < vecs.length; n++) {
    Vec vec=vecs[n];
    if (vec.isBad()) {
      _quantiles[n]=new double[_probs.length];
      Arrays.fill(_quantiles[n],Double.NaN);
      continue;
    }
    Histo h1=new Histo(vec.min(),vec.max(),0,vec.length(),vec.isInt()).doAll(vec);
    for (int p=0; p < _probs.length; p++) {
      double prob=_probs[p];
      Histo h=h1;
      while (Double.isNaN(_quantiles[n][p]=h.findQuantile(prob,_combine_method)))       h=h.refinePass(prob).doAll(vec);
    }
  }
  tryComplete();
}
