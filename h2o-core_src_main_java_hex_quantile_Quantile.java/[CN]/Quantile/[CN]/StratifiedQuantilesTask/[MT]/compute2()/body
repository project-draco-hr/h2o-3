{
  final int strataMin=_strata == null ? 0 : (int)(Math.max(0,_strata.min()));
  final int strataMax=_strata == null ? 0 : (int)(Math.max(0,_strata.max()));
  final int nstrata=strataMax - strataMin + 1;
  Log.info("Computing quantiles for " + nstrata + " different strata.");
  _quantiles=new double[nstrata];
  Vec weights=_weights != null ? _weights : _response.makeCon(1);
  for (int i=strataMin; i <= strataMax; ++i) {
    Vec newWeights=weights.makeCopy();
    if (_strata != null)     new KeepOnlyOneStrata(i).doAll(_strata,newWeights);
    double sumRows=new SumWeights().doAll(_response,newWeights).sum;
    Histo h=new Histo(_response.min(),_response.max(),0,sumRows,_response.isInt());
    h.doAll(_response,newWeights);
    while (Double.isNaN(_quantiles[i - strataMin]=h.findQuantile(_prob,_combine_method)))     h=h.refinePass(_prob).doAll(_response,newWeights);
    newWeights.remove();
  }
  if (_weights != weights)   weights.remove();
  tryComplete();
}
