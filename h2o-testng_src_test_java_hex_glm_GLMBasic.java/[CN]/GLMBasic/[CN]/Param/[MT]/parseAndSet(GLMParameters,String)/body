{
  value=value.trim();
  Object v=null;
  if ("boolean".equals(type)) {
    v=parseBoolean(value);
  }
 else {
    if ("".equals(value)) {
      return false;
    }
switch (type) {
case "String":
      v=value;
    break;
case "String[]":
  v=new String[]{value};
break;
case "double":
v=Double.parseDouble(value);
break;
case "double[]":
v=new double[]{Double.parseDouble(value)};
break;
case "int":
v=Integer.parseInt(value);
break;
default :
System.out.println("Unrecognized type: " + type);
break;
}
}
Class<?> clazz=glmParams.getClass();
while (clazz != null) {
try {
Field field=clazz.getDeclaredField(name);
field.set(glmParams,v);
return true;
}
 catch (NoSuchFieldException e) {
clazz=clazz.getSuperclass();
}
catch (Exception e) {
throw new IllegalStateException(e);
}
}
return false;
}
