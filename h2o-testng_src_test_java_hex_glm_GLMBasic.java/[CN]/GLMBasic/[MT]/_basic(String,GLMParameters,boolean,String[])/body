{
  System.out.println(String.format("Testcase: %s",testcaseId));
  System.out.println("GLM Params:");
  for (  Param p : params) {
    p.print(glmParams);
  }
  Frame trainFrame=null;
  Frame betaConstraints=null;
  Key modelKey=Key.make("model");
  GLM job=null;
  GLMModel model=null;
  Frame score=null;
  HashMap<String,Double> coef=null;
  trainFrame=glmParams._train.get();
  if (glmParams._beta_constraints != null) {
    betaConstraints=glmParams._beta_constraints.get();
  }
  try {
    Scope.enter();
    System.out.println("Build model");
    job=new GLM(modelKey,"basic glm test",glmParams);
    System.out.println("Train model");
    model=job.trainModel().get();
    coef=model.coefficients();
    System.out.println("Predict testcase " + testcaseId);
    score=model.score(trainFrame);
    System.out.println("Predict success.");
    if (isNegativeTestcase) {
      Assert.fail("It is negative testcase");
    }
 else {
      System.out.println("Testcase is passed.");
    }
  }
 catch (  Exception ex) {
    System.out.println("Testcase is failed");
    ex.printStackTrace();
    if (!isNegativeTestcase) {
      Assert.fail("Testcase is failed",ex);
    }
  }
catch (  AssertionError ae) {
    System.out.println("Testcase is failed");
    ae.printStackTrace();
    if (!isNegativeTestcase) {
      Assert.fail("Testcase is failed",ae);
    }
  }
 finally {
    if (betaConstraints != null) {
      betaConstraints.delete();
    }
    if (score != null) {
      score.delete();
    }
    if (model != null)     model.delete();
    if (job != null)     job.remove();
    Scope.exit();
  }
}
