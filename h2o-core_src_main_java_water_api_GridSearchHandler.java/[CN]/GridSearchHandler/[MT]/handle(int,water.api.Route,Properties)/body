{
  if (!route._handler_method.getName().equals("train"))   throw water.H2O.unimpl();
  String ss[]=route._url_pattern_raw.split("/");
  String algoURLName=ss[3];
  String algoName=ModelBuilder.algoName(algoURLName);
  String schemaDir=ModelBuilder.schemaDirectory(algoURLName);
  String algoSchemaName=Schema.schemaClass(version,algoName).getSimpleName();
  int algoVersion=Integer.valueOf(algoSchemaName.substring(algoSchemaName.lastIndexOf("V") + 1));
  String paramSchemaName=schemaDir + algoName + "V"+ algoVersion+ "$"+ ModelBuilder.paramName(algoURLName)+ "V"+ algoVersion;
  S gss=(S)new GridSearchSchema();
  gss.init_meta();
  gss.parameters=(P)TypeMap.newFreezable(paramSchemaName);
  gss.parameters.init_meta();
  ModelBuilder builder=ModelBuilder.make(algoURLName,null,null);
  gss.parameters.fillFromImpl(builder._parms);
  gss.fillFromParms(parms);
  if (parms.contains("strategy"))   try {
    gss.strategy=GridSearch.Strategy.valueOf((String)parms.get("strategy"));
  }
 catch (  IllegalArgumentException iae) {
    throw new H2OIllegalValueException("strategy",parms.get("strategy"));
  }
  if (parms.contains("max_models"))   try {
    gss.max_models=Integer.valueOf((String)parms.get("max_models"));
  }
 catch (  NumberFormatException nfe) {
    throw new H2OIllegalValueException("max_models",parms.get("max_models"));
  }
  if (parms.contains("max_time_ms"))   try {
    gss.max_time_ms=Integer.valueOf((String)parms.get("max_time_ms"));
  }
 catch (  NumberFormatException nfe) {
    throw new H2OIllegalValueException("max_time_ms",parms.get("max_time_ms"));
  }
  if (parms.contains("seed"))   try {
    gss.seed=Long.valueOf((String)parms.get("seed"));
  }
 catch (  NumberFormatException nfe) {
    throw new H2OIllegalValueException("seed",parms.get("seed"));
  }
  validateHyperParams((P)gss.parameters,gss.hyper_parameters);
  MP params=(MP)gss.parameters.createAndFillImpl();
  Key<Grid> destKey=gss.grid_id != null ? gss.grid_id.key() : null;
  Job<Grid> gsJob=GridSearch.startGridSearch(destKey,params,gss.hyper_parameters,new DefaultModelParametersBuilderFactory<MP,P>(),gss.strategy,gss.max_models,gss.max_time_ms,gss.seed);
  gss.hyper_parameters=null;
  gss.total_models=gsJob._result.get().getModelCount();
  gss.job=(JobV3)Schema.schema(version,Job.class).fillFromImpl(gsJob);
  return gss;
}
