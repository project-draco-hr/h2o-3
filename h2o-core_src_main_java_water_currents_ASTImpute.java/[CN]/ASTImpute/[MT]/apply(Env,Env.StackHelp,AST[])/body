{
  Frame fr=stk.track(asts[1].exec(env)).getFrame();
  double col=asts[2].exec(env).getNum();
  if (col < 0 || col >= fr.numCols())   throw new IllegalArgumentException("Column not in range 0 to " + fr.numCols());
  ImputeMethod method=ImputeMethod.valueOf(asts[3].exec(env).getStr().toUpperCase());
  QuantileModel.CombineMethod combine=QuantileModel.CombineMethod.valueOf(asts[4].exec(env).getStr().toUpperCase());
  AST ast=asts[5];
  ASTNumList by;
  if (ast == null)   by=null;
 else   if (ast instanceof ASTNumList)   by=(ASTNumList)ast;
 else   if (ast instanceof ASTNum)   by=new ASTNumList(((ASTNum)ast)._d.getNum());
 else   throw new IllegalArgumentException("Requires a number-list, but found a " + ast.getClass());
  final boolean inplace=asts[6].exec(env).getNum() == 1;
  if (inplace && fr._key == null)   throw new IllegalArgumentException("Can only update in-place named Frames");
  throw H2O.unimpl();
}
