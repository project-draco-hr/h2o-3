def test_kmeans_prostate(self):
    importFolderPath = 'logreg'
    csvFilename = 'prostate.csv'
    hex_key = 'prostate.hex'
    csvPathname = ((importFolderPath + '/') + csvFilename)
    parseResult = h2i.import_parse(bucket='smalldata', path=csvPathname, hex_key=hex_key, checkHeader=1, timeoutSecs=180, doSummary=False)
    pA = h2o_cmd.ParseObj(parseResult)
    iA = h2o_cmd.InspectObj(pA.parse_key)
    parse_key = pA.parse_key
    numRows = iA.numRows
    numCols = iA.numCols
    labelList = iA.labelList
    expected = [(None, [0.37, 65.77, 1.07, 2.23, 1.11, 10.49, 4.24, 6.31], 215, 36955), (None, [0.36, 66.44, 1.09, 2.21, 1.06, 10.84, 34.16, 6.31], 136, 46045), (None, [0.83, 66.17, 1.21, 2.86, 1.34, 73.3, 15.57, 7.31], 29, 33412)]
    allowedDelta = (0.02, 0.02, 0.02)
    labelListUsed = list(labelList)
    labelListUsed.remove('ID')
    numColsUsed = (numCols - 1)
    for trial in range(5):
        kmeansSeed = 7037878434240420762
        parameters = {'validation_frame': parse_key, 'ignored_columns': "['ID']", 'k': 3, 'max_iterations': 500, 'standardize': False, 'seed': kmeansSeed, 'init': 'Furthest', }
        model_key = 'prostate_k.hex'
        bmResult = h2o.n0.build_model(algo='kmeans', destination_key=model_key, training_frame=parse_key, parameters=parameters, timeoutSecs=10)
        bm = OutputObj(bmResult, 'bm')
        modelResult = h2o.n0.models(key=model_key)
        km = h2o_kmeans.KMeansObj(modelResult, parameters, numRows, numColsUsed, labelListUsed)
        h2o_kmeans.compareResultsToExpected(km.tuplesSorted, expected, allowedDelta)
        cmmResult = h2o.n0.compute_model_metrics(model=model_key, frame=parse_key, timeoutSecs=60)
        cmm = OutputObj(cmmResult, 'cmm')
        mmResult = h2o.n0.model_metrics(model=model_key, frame=parse_key, timeoutSecs=60)
        mm = OutputObj(mmResult['model_metrics'][0], 'mm')
        prResult = h2o.n0.predict(model=model_key, frame=parse_key, timeoutSecs=60)
        pr = OutputObj(prResult['model_metrics'][0]['predictions'], 'pr')
        h2o_cmd.runStoreView()
