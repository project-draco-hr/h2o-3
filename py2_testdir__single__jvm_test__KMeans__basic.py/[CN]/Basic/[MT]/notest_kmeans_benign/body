def notest_kmeans_benign(self):
    importFolderPath = 'logreg'
    csvFilename = 'benign.csv'
    hex_key = 'benign.hex'
    csvPathname = ((importFolderPath + '/') + csvFilename)
    parseResult = h2i.import_parse(bucket='smalldata', path=csvPathname, hex_key=hex_key, check_header=1, timeoutSecs=180, doSummary=False)
    pA = h2o_cmd.ParseObj(parseResult)
    iA = h2o_cmd.InspectObj(pA.parse_key)
    parse_key = pA.parse_key
    numRows = iA.numRows
    numCols = iA.numCols
    labelList = iA.labelList
    expected = [(None, [8.86, 2.43, 35.53, 0.31, 13.22, 1.47, 1.33, 20.06, 13.08, 0.53, 2.12, 128.61, 35.33, 1.57], 49, None), (None, [33.47, 2.29, 50.92, 0.34, 12.82, 1.33, 1.36, 21.43, 13.3, 0.37, 2.52, 125.4, 43.91, 1.79], 87, None), (None, [27.64, 2.87, 48.11, 0.09, 11.8, 0.98, 1.51, 21.02, 12.53, 0.58, 2.89, 171.27, 42.73, 1.53], 55, None), (None, [26.0, 2.67, 46.67, 0.0, 13.0, 1.33, 1.67, 21.56, 11.44, 0.22, 2.89, 234.56, 39.22, 1.56], 9, None)]
    allowedDelta = (0.01, 0.01, 0.01, 0.01)
    labelListUsed = list(labelList)
    numColsUsed = numCols
    for trial in range(5):
        kmeansSeed = random.randint(0, sys.maxint)
        parameters = {'validation_frame': parse_key, 'ignored_columns': None, 'k': 4, 'max_iterations': 50, 'standardize': False, 'seed': kmeansSeed, 'init': 'Furthest', }
        model_key = 'benign_k.hex'
        kmeansResult = h2o.n0.build_model(algo='kmeans', destination_key=model_key, training_frame=parse_key, parameters=parameters, timeoutSecs=10)
        modelResult = h2o.n0.models(key=model_key)
        km = h2o_kmeans.KMeansObj(modelResult, parameters, numRows, numColsUsed, labelListUsed)
        h2o_kmeans.compareResultsToExpected(km.tuplesSorted, expected, allowedDelta)
        cmmResult = h2o.n0.compute_model_metrics(model=model_key, frame=parse_key, timeoutSecs=60)
        cmm = OutputObj(cmmResult, 'cmm')
        mmResult = h2o.n0.model_metrics(model=model_key, frame=parse_key, timeoutSecs=60)
        mm = OutputObj(mmResult['model_metrics'][0], 'mm')
        prResult = h2o.n0.predict(model=model_key, frame=parse_key, timeoutSecs=60)
        pr = OutputObj(prResult['model_metrics'][0]['predictions'], 'pr')
        h2o_cmd.runStoreView()
