{
  final int ncolsx=cs.length - 1;
  final Chunk cy=cs[0];
  final int len=cy._len;
  _cors=new double[ncolsx];
  _denom=new double[ncolsx];
  double sum;
  double varx;
  double vary;
  for (int x=0; x < ncolsx; x++) {
    sum=0;
    varx=0;
    vary=0;
    final Chunk cx=cs[x + 1];
    final double xmean=_xmeans[x];
    for (int row=0; row < len; row++) {
      if (_completeObs) {
        if (!(cx.isNA(row)) && !(cy.isNA(row))) {
          varx+=(cx.atd(row) - xmean) * (cx.atd(row) - xmean);
          vary+=(cy.atd(row) - _ymean) * (cy.atd(row) - _ymean);
          sum+=(cx.atd(row) - xmean) * (cy.atd(row) - _ymean);
        }
      }
 else {
        varx+=(cx.atd(row) - xmean) * (cx.atd(row) - xmean);
        vary+=(cy.atd(row) - _ymean) * (cy.atd(row) - _ymean);
        sum+=(cx.atd(row) - xmean) * (cy.atd(row) - _ymean);
      }
    }
    _cors[x]=sum;
    _denom[x]=Math.sqrt(varx) * Math.sqrt(vary);
  }
}
