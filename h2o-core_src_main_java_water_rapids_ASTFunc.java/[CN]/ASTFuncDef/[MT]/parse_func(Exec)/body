{
  AST name=E.parse();
  if (name instanceof ASTId)   _name=((ASTId)name)._id;
 else   if (name instanceof ASTString)   _name=((ASTString)name)._s;
 else   throw new IllegalArgumentException("function name expected to be an ID or String. Got: " + name.getClass());
  Env.SymbolTable table=E._env.newTable();
  AST arggs=E.parse();
  if (arggs instanceof ASTStringList)   _arg_names=((ASTStringList)arggs)._s;
 else   if (arggs instanceof ASTString)   _arg_names=new String[]{((ASTString)arggs)._s};
 else   throw new IllegalArgumentException("Expected args to be either a slist or a string (for a single argument). Got: " + arggs.getClass());
  if (_arg_names == null)   table.put(null,Env.NULL,null);
 else   for (  String arg : _arg_names)   table.put(arg,Env.NULL,null);
  _table=table;
  _body=new ASTStatement().parse_impl(E);
  E.eatEnd();
  ASTFunc res=new ASTFunc(_name,_arg_names,_table,_body);
  res._asts=null;
  putUDF(res,_name);
}
