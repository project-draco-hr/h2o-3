{
  Env captured=e.capture();
  for (int i=0; i < _args.length; ++i) {
    if (_args[i] instanceof ASTId)     _args[i]=e.lookup((ASTId)_args[i]);
    if (!(_args[i] instanceof ASTNum || _args[i] instanceof ASTString || _args[i] instanceof ASTFrame|| _args[i] instanceof ASTNull)) {
      _args[i].treeWalk(e);
      _args[i]=e.pop2AST();
    }
    if (_args[i] instanceof ASTNum)     captured.put(_arg_names[i],Env.NUM,_args[i].value());
 else     if (_args[i] instanceof ASTString)     captured.put(_arg_names[i],Env.STR,_args[i].value());
 else     if (_args[i] instanceof ASTNull)     captured.put(_arg_names[i],Env.NULL,"()");
 else     if (_args[i] instanceof ASTFrame)     captured.put(_arg_names[i],((ASTFrame)_args[i])._fr);
 else     throw new IllegalArgumentException("Argument of type " + _args[i].getClass() + " unsupported. Argument must be a String, number, Frame, or null.");
  }
  _body.exec(captured);
  e.push(captured.peek());
  captured.popScope();
}
