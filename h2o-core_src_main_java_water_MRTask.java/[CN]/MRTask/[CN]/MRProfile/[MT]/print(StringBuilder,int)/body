{
  if (d == 0)   sb.append(_clz).append("\n");
  for (int i=0; i < d; i++)   sb.append("  ");
  if (_localstart != 0)   sb.append("Node local ").append(_localdone - _localstart).append("ms, ");
  if (_last != null) {
    sb.append("Slow wait ").append(_mapstart - _localdone).append("ms + work ").append(_last.sumTime()).append("ms, ");
    sb.append("Fast work ").append(_time1st).append("ms + wait ").append(_onCstart - _done1st).append("ms\n");
    _last.print(sb,d + 1);
    for (int i=0; i < d; i++)     sb.append("  ");
    sb.append("join-i/o ").append(_onCstart - _last._onCdone).append("ms, ");
  }
  if (_userstart != 0) {
    sb.append("Map ").append(_mapdone - _mapstart);
    sb.append("ms (prep ").append(_userstart - _mapstart);
    sb.append("ms, user ").append(_closestart - _userstart);
    sb.append("ms, closeChk ").append(_mapdone - _closestart).append("ms), ");
  }
  sb.append("Red ").append(_onCdone - _onCstart);
  sb.append("ms (locRed ").append(_reducedone - _onCstart).append("ms");
  if (_remoteBlkDone != 0) {
    sb.append(", closeLocal ").append(_closeLocalDone - _reducedone);
    sb.append("ms, remBlk ").append(_remoteBlkDone - _closeLocalDone);
    sb.append("ms, locBlk ").append(_localBlkDone - _remoteBlkDone);
    sb.append("ms, postGlobal ").append(_onCdone - _localBlkDone);
    sb.append("ms, size ").append(PrettyPrint.bytes(_size_rez0)).append("+").append(PrettyPrint.bytes(_size_rez1));
  }
  sb.append(")\n");
  return sb;
}
