def schemas(raw=False):
    u'\n    Return the list of H\u2082O schemas.\n\n    :param raw: if True, then the complete response to .../schemas is returned (including the metadata)\n    '
    json = _request_or_exit(u'/3/Metadata/schemas')
    if raw:
        return json
    assert (u'schemas' in json), u'Unexpected result from /3/Metadata/schemas call'
    pattern0 = re.compile(u'^\\w+(V\\d+)\\D\\w+$')
    pattern1 = re.compile(u'^(\\w{3,})(\\1)Model\\1Parameters(\\w+)$', re.IGNORECASE)
    pattern2 = re.compile(u'^(\\w{3,})(\\1)(\\w+)$', re.IGNORECASE)

    def translate_name(name):
        if (name is None):
            return
        if (name == u'Apischemas3TimelineV3EventV3EventType'):
            return u'ApiTimelineEventTypeV3'
        assert (not pattern0.match(name)), (u'Bad schema name %s (version number in the middle)' % name)
        mm = (pattern1.match(name) or pattern2.match(name))
        if mm:
            return (mm.group(2) + mm.group(3))
        return name
    for schema in json[u'schemas']:
        schema[u'name'] = translate_name(schema[u'name'])
        for field in schema[u'fields']:
            field[u'schema_name'] = translate_name(field[u'schema_name'])
    return json[u'schemas']
