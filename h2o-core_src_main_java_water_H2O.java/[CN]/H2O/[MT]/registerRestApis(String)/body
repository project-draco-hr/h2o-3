{
  if (apisRegistered) {
    throw H2O.fail("APIs already registered");
  }
  for (  AbstractH2OExtension e : H2O.getExtensions()) {
    e.printInitialized();
  }
  Log.info("Registered " + H2O.getExtensions().size() + " extensions in: "+ registerExtensionsMillis+ "mS");
  long before=System.currentTimeMillis();
  String[] packages=new String[]{"water","hex"};
  for (  String pkg : packages) {
    Reflections reflections=new Reflections(pkg);
    Log.debug("Registering REST APIs for package: " + pkg);
    for (    Class registerClass : reflections.getSubTypesOf(water.api.AbstractRegister.class)) {
      if (!Modifier.isAbstract(registerClass.getModifiers())) {
        try {
          Log.debug("Found REST API registration for class: " + registerClass.getName());
          Object instance=registerClass.newInstance();
          water.api.AbstractRegister r=(water.api.AbstractRegister)instance;
          r.register(relativeResourcePath);
        }
 catch (        Exception e) {
          throw H2O.fail(e.toString());
        }
      }
    }
  }
  apisRegistered=true;
  long registerApisMillis=System.currentTimeMillis() - before;
  Log.info("Registered: " + RequestServer.numRoutes() + " REST APIs in: "+ registerApisMillis+ "mS");
}
