def test_GBM_basic(self):
    bucket = 'home-0xdiag-datasets'
    importFolderPath = 'standard'
    trainFilename = 'covtype.shuffled.90pct.data'
    train_key = 'covtype.train.hex'
    model_key = 'GBMModelKey'
    timeoutSecs = 1800
    csvPathname = ((importFolderPath + '/') + trainFilename)
    parseResult = h2i.import_parse(bucket=bucket, path=csvPathname, schema='local', hex_key=train_key, timeoutSecs=timeoutSecs)
    pA = h2o_cmd.ParseObj(parseResult)
    iA = h2o_cmd.InspectObj(pA.parse_key)
    parse_key = pA.parse_key
    numRows = iA.numRows
    numCols = iA.numCols
    labelList = iA.labelList
    labelListUsed = list(labelList)
    numColsUsed = numCols
    parameters = {'validation_frame': train_key, 'ignored_columns': None, 'score_each_iteration': True, 'response_column': 'C55', 'do_classification': True, 'ntrees': 2, 'max_depth': 10, 'min_rows': 3, 'nbins': 40, 'learn_rate': 0.2, }
    model_key = 'covtype_gbm.hex'
    bmResult = h2o.n0.build_model(algo='gbm', destination_key=model_key, training_frame=parse_key, parameters=parameters, timeoutSecs=60)
    bm = OutputObj(bmResult, 'bm')
    modelResult = h2o.n0.models(key=model_key)
    model = OutputObj(modelResult['models'][0]['output'], 'model')
    cmmResult = h2o.n0.compute_model_metrics(model=model_key, frame=parse_key, timeoutSecs=60)
    cmm = OutputObj(cmmResult, 'cmm')
    print '\nLook!, can use dot notation: cmm.cm.confusion.matrix', cmm.cm.confusion_matrix, '\n'
    mmResult = h2o.n0.model_metrics(model=model_key, frame=parse_key, timeoutSecs=60)
    mmResultShort = mmResult['model_metrics'][0]
    del mmResultShort['frame']
    mm = OutputObj(mmResultShort, 'mm')
    prResult = h2o.n0.predict(model=model_key, frame=parse_key, timeoutSecs=60)
    pr = OutputObj(prResult['model_metrics'][0]['predictions'], 'pr')
