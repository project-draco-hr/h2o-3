{
  parseArgs(args);
  hex.genmodel.GenModel model;
  model=(hex.genmodel.GenModel)Class.forName(modelClassName).newInstance();
  BufferedReader input=new BufferedReader(new FileReader(inputCSVFileName));
  BufferedWriter output=new BufferedWriter(new FileWriter(outputCSVFileName));
  if (model.isAutoEncoder()) {
    output.write(model.getHeader());
  }
 else {
    output.write("predict");
    for (int i=0; model.isClassifier() && i < model.getNumResponseClasses(); i++) {
      output.write(",");
      output.write(model.getDomainValues(model.getResponseIdx())[i]);
    }
  }
  output.write("\n");
  int lineNum=0;
  String line;
  String[] inputColumnNames=new String[0];
  try {
    while ((line=input.readLine()) != null) {
      lineNum++;
      if (lineNum == 1) {
        inputColumnNames=parseHeaderRow(line);
        continue;
      }
      RowData row=parseDataRow(line,inputColumnNames);
      ModelCategory category=model.getModelCategory();
      if (category == ModelCategory.Binomial) {
        BinomialModelPrediction p=model.predictBinomial(row);
        output.write(p.label);
        output.write(",");
        for (int i=0; i < p.classProbabilities.length; i++) {
          if (i > 0) {
            output.write(",");
          }
          output.write(h2oDoubleToString(p.classProbabilities[i]));
        }
      }
 else       if (category == ModelCategory.Multinomial) {
        MultinomialModelPrediction p=model.predictMultinomial(row);
        output.write(p.label);
        output.write(",");
        for (int i=0; i < p.classProbabilities.length; i++) {
          if (i > 0) {
            output.write(",");
          }
          output.write(h2oDoubleToString(p.classProbabilities[i]));
        }
      }
 else       if (category == ModelCategory.Regression) {
        RegressionModelPrediction p=model.predictRegression(row);
        output.write(h2oDoubleToString(p.value));
      }
 else       if (category == ModelCategory.Clustering) {
        ClusteringModelPrediction p=model.predictClustering(row);
        output.write(h2oDoubleToString(p.cluster));
      }
 else {
        System.out.println("Unknown model category: " + category.toString());
        System.exit(1);
      }
      output.write("\n");
    }
  }
 catch (  Exception e) {
    System.out.println("Caught exception on line " + lineNum);
    System.out.println("");
    e.printStackTrace();
    System.exit(1);
  }
  output.close();
  input.close();
  System.exit(0);
}
