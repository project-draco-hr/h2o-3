{
  super.init(expensive);
  if ((_parms.start_column != null) && !_parms.start_column.isInt())   error("start_column","start time must be null or of type integer");
  if (!_parms.stop_column.isInt())   error("stop_column","stop time must be of type integer");
  if (!_parms.event_column.isInt() && !_parms.event_column.isCategorical())   error("event_column","event must be of type integer or factor");
  if (Double.isNaN(_parms.lre_min) || _parms.lre_min <= 0)   error("lre_min","lre_min must be a positive number");
  if (_parms.iter_max < 1)   error("iter_max","iter_max must be a positive integer");
  final int MAX_TIME_BINS=10000;
  final long min_time=(_parms.start_column == null) ? (long)_parms.stop_column.min() : (long)_parms.start_column.min() + 1;
  final int n_time=(int)(_parms.stop_column.max() - min_time + 1);
  if (n_time < 1)   error("start_column","start times must be strictly less than stop times");
  if (n_time > MAX_TIME_BINS)   error("stop_column","number of distinct stop times is " + n_time + "; maximum number allowed is "+ MAX_TIME_BINS);
}
