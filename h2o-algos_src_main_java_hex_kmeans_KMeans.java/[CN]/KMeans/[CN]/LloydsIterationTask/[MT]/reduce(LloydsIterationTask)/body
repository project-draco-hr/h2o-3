{
  _reassigned_count+=mr._reassigned_count;
  for (int clu=0; clu < _k; clu++) {
    long ra=_size[clu];
    long rb=mr._size[clu];
    double[] ma=_cMeans[clu];
    double[] mb=mr._cMeans[clu];
    for (int c=0; c < ma.length; c++)     if (ra + rb > 0)     ma[c]=(ma[c] * ra + mb[c] * rb) / (ra + rb);
  }
  ArrayUtils.add(_cats,mr._cats);
  ArrayUtils.add(_cSqr,mr._cSqr);
  ArrayUtils.add(_size,mr._size);
  for (int clu=0; clu < _k; clu++) {
    for (int col=0; col < _lo[clu].length; col++) {
      _lo[clu][col]=Math.min(mr._lo[clu][col],_lo[clu][col]);
      _hi[clu][col]=Math.max(mr._hi[clu][col],_hi[clu][col]);
    }
  }
  if (_worst_err < mr._worst_err) {
    _worst_err=mr._worst_err;
    _worst_row=mr._worst_row;
  }
}
