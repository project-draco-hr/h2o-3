{
  List<String> colHeaders=new ArrayList<>();
  List<String> colTypes=new ArrayList<>();
  List<String> colFormat=new ArrayList<>();
  colHeaders.add("Timestamp");
  colTypes.add("string");
  colFormat.add("%s");
  colHeaders.add("Duration");
  colTypes.add("string");
  colFormat.add("%s");
  colHeaders.add("Iteration");
  colTypes.add("long");
  colFormat.add("%d");
  colHeaders.add("Avg. Change of Std. Centroids");
  colTypes.add("double");
  colFormat.add("%.5f");
  colHeaders.add("Within Cluster Sum Of Squares");
  colTypes.add("double");
  colFormat.add("%.5f");
  final int rows=output._avg_centroids_chg.length;
  TwoDimTable table=new TwoDimTable("Scoring History",null,new String[rows],colHeaders.toArray(new String[0]),colTypes.toArray(new String[0]),colFormat.toArray(new String[0]),"");
  int row=0;
  for (int i=0; i < rows; i++) {
    int col=0;
    assert(row < table.getRowDim());
    assert(col < table.getColDim());
    DateTimeFormatter fmt=DateTimeFormat.forPattern("yyyy-MM-dd HH:mm:ss");
    table.set(row,col++,fmt.print(output._training_time_ms[i]));
    table.set(row,col++,PrettyPrint.msecs(output._training_time_ms[i] - _start_time,true));
    table.set(row,col++,i);
    table.set(row,col++,output._avg_centroids_chg[i]);
    table.set(row,col++,output._history_withinss[i]);
    row++;
  }
  return table;
}
