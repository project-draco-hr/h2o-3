{
  ArrayList<Event> outputEvents=new ArrayList<Event>();
  ArrayList<TimelineSnapshot.Event> heartbeats=new ArrayList();
  H2O cloud=TimeLine.getCLOUD();
  for (  TimelineSnapshot.Event event : timeline.snapshot) {
    H2ONode h2o=cloud.members()[event._nodeId];
    long l0=event.dataLo();
    long h8=event.dataHi();
    int udp_type=(int)(l0 & 0xff);
    UDP.udp e=UDP.getUdp(udp_type);
    if (e == UDP.udp.heartbeat) {
      heartbeats.add(event);
      continue;
    }
    if (!heartbeats.isEmpty()) {
      long firstMs=heartbeats.get(0).ms();
      long lastMs=heartbeats.get(heartbeats.size() - 1).ms();
      int totalSends=0;
      int totalRecvs=0;
      int totalDrops=0;
      int[] sends=new int[cloud.size()];
      int[] recvs=new int[cloud.size()];
      for (      TimelineSnapshot.Event h : heartbeats) {
        if (h.isSend()) {
          ++totalSends;
          ++sends[h._nodeId];
        }
 else         if (h.isDropped()) {
          ++totalDrops;
        }
 else {
          ++totalRecvs;
          ++recvs[h._nodeId];
        }
      }
      heartbeats.clear();
      outputEvents.add(new Event(Event.EventType.heartbeat));
    }
  }
  events=outputEvents.toArray(new Event[outputEvents.size()]);
  return this;
}
