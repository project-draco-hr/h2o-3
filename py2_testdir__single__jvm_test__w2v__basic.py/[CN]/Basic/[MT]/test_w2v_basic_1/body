def test_w2v_basic_1(self):
    global SYNDATASETS_DIR
    SYNDATASETS_DIR = h2o.make_syn_dir()
    n = 100
    tryList = [(n, 1, 'cD', 300), (n, 2, 'cE', 300), (n, 3, 'cF', 300), (n, 4, 'cG', 300), (n, 5, 'cH', 300), (n, 6, 'cI', 300), (n, 7, 'cJ', 300), (n, 9, 'cK', 300)]
    for (rowCount, colCount, hex_key, timeoutSecs) in tryList:
        csvPathname = create_file_with_seps(rowCount, colCount)
        hex_key = 'not_used.hex'
        parseResult = h2i.import_parse(path=csvPathname, hex_key=hex_key, checkHeader=1, delete_on_done=0, timeoutSecs=180, doSummary=False)
        (numRows, numCols, parse_key) = h2o_cmd.infoFromParse(parseResult)
        inspectResult = h2o_cmd.runInspect(key=parse_key)
        (missingList, labelList, numRows, numCols) = h2o_cmd.infoFromInspect(inspectResult)
        src_key = h2i.find_key('syn_.*csv')
        expected = []
        allowedDelta = 0
        labelListUsed = list(labelList)
        numColsUsed = numCols
        for trial in range(1):
            parameters = {'validation_frame': src_key, 'ignored_columns': None, 'score_each_iteration': None, 'training_frame': None, 'minWordFreq': 5, 'wordModel': 'SkipGram', 'normModel': 'HSM', 'negSampleCnt': 5, 'vecSize': 100, 'windowSize': 5, 'sentSampleRate': 0.001, 'initLearningRate': 0.05, 'epochs': 5, }
            model_key = 'benign_w2v.hex'
            bmResult = h2o.n0.build_model(algo='word2vec', destination_key=model_key, training_frame=src_key, parameters=parameters, timeoutSecs=10)
            bm = OutputObj(bmResult, 'bm')
            modelResult = h2o.n0.models(key=model_key)
            model = OutputObj(modelResult['models'][0]['output'], 'model')
            cmmResult = h2o.n0.compute_model_metrics(model=model_key, frame=parse_key, timeoutSecs=60)
            cmm = OutputObj(cmmResult, 'cmm')
            mmResult = h2o.n0.model_metrics(model=model_key, frame=parse_key, timeoutSecs=60)
            mm = OutputObj(mmResult, 'mm')
            h2o_cmd.runStoreView()
