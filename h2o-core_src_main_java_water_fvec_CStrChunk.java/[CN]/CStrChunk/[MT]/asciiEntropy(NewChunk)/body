{
  nc.alloc_doubles(_len);
  for (int i=0; i < _len; i++) {
    int off=UnsafeUtils.get4(_mem,(i << 2) + _OFF);
    if (off != NA) {
      HashMap<Byte,Integer> freq=new HashMap<>();
      int j=0;
      while (_mem[_valstart + off + j] != 0) {
        Integer count=freq.get(_mem[_valstart + off + j]);
        if (count == null)         freq.put(_mem[_valstart + off + j],1);
 else         freq.put(_mem[_valstart + off + j],count + 1);
        j++;
      }
      double sume=0;
      int N=j;
      double n;
      for (      Byte b : freq.keySet()) {
        n=freq.get(b);
        sume+=-n / N * Math.log(n / N) / Math.log(2);
      }
      nc.addNum(sume);
    }
 else     nc.addNA();
  }
  return nc;
}
