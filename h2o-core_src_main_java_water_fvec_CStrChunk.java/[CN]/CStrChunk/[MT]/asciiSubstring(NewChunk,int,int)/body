{
  nc=this.inflate_impl(nc);
  for (int i=0; i < _len; i++) {
    int off=UnsafeUtils.get4(_mem,(i << 2) + _OFF);
    if (off != NA) {
      int len=0;
      while (_mem[_valstart + off + len] != 0)       len++;
      nc._is[i]=startIndex < len ? off + startIndex : off + len;
      for (; len > endIndex - 1; len--) {
        nc._ss[off + len]=0;
      }
    }
  }
  return nc;
}
