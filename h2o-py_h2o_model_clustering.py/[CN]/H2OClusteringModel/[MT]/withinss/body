def withinss(self, train=False, valid=False, xval=False):
    '\n    Get the within cluster sum of squares for each cluster.\n\n    If all are False (default), then return the training metric value.\n    If more than one options is set to True, then return a dictionary of metrics where the keys are "train", "valid",\n    and "xval"\n\n    :param train: If train is True, then return the within cluster sum of squares value for the training data.\n    :param valid: If valid is True, then return the within cluster sum of squares value for the validation data.\n    :param xval:  If xval is True, then return the within cluster sum of squares value for the cross validation data.\n    :return: The within cluster sum of squares for this clustering model.\n    '
    tm = ModelBase._get_metrics(self, train, valid, xval)
    m = {}
    for (k, v) in zip(tm.keys(), tm.values()):
        m[k] = (None if (v is None) else [z[(-1)] for z in v._metric_json['centroid_stats'].cell_values])
    return (m.values()[0] if (len(m) == 1) else m)
