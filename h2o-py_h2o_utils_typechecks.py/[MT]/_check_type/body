def _check_type(s, stype, _nested=False):
    u'\n    Return True if the variable has the specified type, and False otherwise.\n\n    :param s: variable to check.\n    :param stype: expected type (should be either a type, a tuple of types, or None).\n    '
    if (stype is None):
        return (s is None)
    elif (stype is str):
        return isinstance(s, _str_type)
    elif (stype is int):
        return isinstance(s, _int_type)
    elif isinstance(stype, type):
        return isinstance(s, stype)
    elif (isinstance(stype, tuple) and (not _nested)):
        return any((_check_type(s, tt, _nested=True) for tt in stype))
    else:
        raise RuntimeError((u'Ivalid argument %r to _check_type()' % stype))
