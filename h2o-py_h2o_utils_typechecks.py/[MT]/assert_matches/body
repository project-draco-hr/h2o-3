def assert_matches(v, regex):
    u'\n    Assert that string variable matches the provided regular expression.\n\n    :param v: variable to check.\n    :param regex: regular expression to check against (can be either a string, or compiled regexp).\n    '
    m = re.match(regex, v)
    if (m is None):
        vn = _retrieve_assert_arguments()[0]
        message = u'Argument `{var}` (= {val!r}) did not match /{regex}/'.format(var=vn, regex=regex, val=v)
        raise H2OValueError(message, var_name=vn, skip_frames=1)
    return m
