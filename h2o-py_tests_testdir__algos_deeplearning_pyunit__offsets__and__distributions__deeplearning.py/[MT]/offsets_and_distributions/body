def offsets_and_distributions():
    cars = h2o.upload_file(pyunit_utils.locate('smalldata/junit/cars_20mpg.csv'))
    cars = cars[(cars['economy_20mpg'].isna() == 0)]
    cars['economy_20mpg'] = cars['economy_20mpg'].asfactor()
    offset = h2o.H2OFrame(python_obj=[[0.5] for x in range(398)])
    offset.set_name(0, 'x1')
    cars = cars.cbind(offset)
    insurance = h2o.import_file(pyunit_utils.locate('smalldata/glm_test/insurance.csv'))
    insurance['offset'] = insurance['Holders'].log()
    from h2o.estimators.deeplearning import H2ODeepLearningEstimator
    dl = H2ODeepLearningEstimator(distribution='gamma')
    dl.train(x=range(3), y='Claims', training_frame=insurance, offset_column='offset')
    predictions = dl.predict(insurance)
    dl = H2ODeepLearningEstimator(distribution='gaussian')
    dl.train(x=range(3), y='Claims', training_frame=insurance, offset_column='offset')
    predictions = dl.predict(insurance)
    dl = H2ODeepLearningEstimator(distribution='poisson')
    dl.train(x=range(3), y='Claims', training_frame=insurance, offset_column='offset')
    predictions = dl.predict(insurance)
    dl = H2ODeepLearningEstimator(distribution='tweedie')
    dl.train(x=range(3), y='Claims', training_frame=insurance, offset_column='offset')
    predictions = dl.predict(insurance)
