{
  Log.info("Removing all objects");
  Futures fs=new Futures();
  for (  Job j : Job.jobs()) {
    j.stop_requested();
    j.remove(fs);
  }
  if (RapidsHandler.SESSIONS != null) {
    for (    String k : RapidsHandler.SESSIONS.keySet())     (RapidsHandler.SESSIONS.get(k)).endQuietly(null);
    RapidsHandler.SESSIONS.clear();
  }
  fs.blockForPending();
  new MRTask(H2O.MIN_HI_PRIORITY){
    @Override public void setupLocal(){
      H2O.raw_clear();
      water.fvec.Vec.ESPC.clear();
    }
  }
.doAllNodes();
  H2O.getPM().getIce().cleanUp();
  Log.info("Finished removing objects");
  return u;
}
