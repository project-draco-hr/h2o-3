{
  Frame fr=stk.track(asts[1].exec(env)).getFrame();
  Vec v;
  if (fr.numCols() != 1)   throw new IllegalArgumentException("Unique applies to a single column only.");
  if (fr.anyVec().isCategorical()) {
    v=Vec.makeSeq(0,(long)fr.anyVec().domain().length,true);
    v.setDomain(fr.anyVec().domain());
    DKV.put(v);
  }
 else {
    UniqTask t=new UniqTask().doAll(fr);
    int nUniq=t._uniq.size();
    final ASTGroup.G[] uniq=t._uniq.keySet().toArray(new ASTGroup.G[nUniq]);
    v=Vec.makeZero(nUniq);
    new MRTask(){
      @Override public void map(      Chunk c){
        int start=(int)c.start();
        for (int i=0; i < c._len; ++i)         c.set(i,uniq[i + start]._gs[0]);
      }
    }
.doAll(v);
  }
  return new ValFrame(new Frame(v));
}
