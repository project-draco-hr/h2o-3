{
  String uri=JettyHTTPD.getDecodedUri(request);
  try {
    Pattern p=Pattern.compile(".*/NodePersistentStorage.bin/([^/]+)/([^/]+)");
    Matcher m=p.matcher(uri);
    boolean b=m.matches();
    if (!b) {
      JettyHTTPD.setResponseStatus(response,HttpServletResponse.SC_BAD_REQUEST);
      response.getWriter().write("Improperly formatted URI");
      return;
    }
    String categoryName=m.group(1);
    String keyName=m.group(2);
    NodePersistentStorage nps=H2O.getNPS();
    AtomicLong length=new AtomicLong();
    InputStream is=nps.get(categoryName,keyName,length);
    if (length.get() > (long)Integer.MAX_VALUE) {
      throw new Exception("NPS value size exceeds Integer.MAX_VALUE");
    }
    response.setContentType("application/octet-stream");
    response.setContentLength((int)length.get());
    response.addHeader("Content-Disposition","attachment; filename=" + keyName + ".flow");
    JettyHTTPD.setResponseStatus(response,HttpServletResponse.SC_OK);
    OutputStream os=response.getOutputStream();
    water.util.FileUtils.copyStream(is,os,2048);
  }
 catch (  Exception e) {
    JettyHTTPD.sendErrorResponse(response,e,uri);
  }
 finally {
    JettyHTTPD.logRequest("GET",request,response);
  }
}
