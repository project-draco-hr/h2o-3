def sort_by(self, metric, increasing=True):
    "\n    Sort the models in the grid space by a metric.\n\n    :param metric: str, A metric ('logloss', 'auc', 'r2') by which to sort the models. If addtional arguments are desired,\n    they can be passed to the metric, for example 'logloss(valid=True)'\n    :param increasing: boolean, Sort the metric in increasing (True) (default) or decreasing (False) order.\n    :return: An H2OTwoDimTable of the sorted models showing model id, hyperparameters, and metric value\n    "
    if (metric[(-1)] != ')'):
        metric += '()'
    c_values = [list(x) for x in zip(*sorted(eval((('self.' + metric) + '.items()')), key=(lambda (k, v): v)))]
    c_values.insert(1, [[self.get_hyperparams(model_id, display=False)] for model_id in c_values[0]])
    if (not increasing):
        for col in c_values:
            col.reverse()
    if (metric[(-2):] == '()'):
        metric = metric[:(-2)]
    return h2o.H2OTwoDimTable(col_header=['Model Id', ('Hyperparameters: ' + str(self.hyper_params.keys())), metric], table_header='Grid Search Results', cell_values=zip(*c_values))
