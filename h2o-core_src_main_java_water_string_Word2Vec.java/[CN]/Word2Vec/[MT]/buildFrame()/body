{
  Futures fs=new Futures();
  String[] colNames=new String[_params._vecSize];
  Vec[] vecs=new Vec[_params._vecSize];
  Key keys[]=Vec.VectorGroup.VG_LEN1.addVecs(vecs.length);
  NewChunk cs[]=new NewChunk[vecs.length];
  AppendableVec avs[]=new AppendableVec[vecs.length];
  for (int i=0; i < vecs.length; i++) {
    avs[i]=new AppendableVec(keys[i]);
    cs[i]=new NewChunk(avs[i],0);
  }
  for (int i=0; i < _params._vocabSize; i++) {
    for (int j=0; j < _params._vecSize; j++) {
      cs[j].addNum(_params._syn0[i * _params._vecSize + j]);
    }
  }
  for (int i=0; i < vecs.length; i++) {
    colNames[i]=new String("V" + i);
    cs[i].close(0,fs);
    vecs[i]=avs[i].close(fs);
  }
  fs.blockForPending();
  _w2vFrame=new Frame(_w2vKey=Key.make("w2v_" + _trFrmName));
  _w2vFrame.add("Word",((Frame)_params._vocabKey.get()).vec(0));
  _w2vFrame.add(colNames,vecs);
  DKV.put(_w2vKey,_w2vFrame);
  return _w2vKey;
}
