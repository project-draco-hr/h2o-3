{
  if (_hist == null)   _hist=new History(_historySz,beta.length);
  int iter=0;
  double rel_improvement=1;
  final double[] pk=new double[beta.length];
  double minStep=1e-12;
  double maxStep=100;
  _lineSearch=new MoreThuente();
  while (!ArrayUtils.hasNaNsOrInfs(beta) && (pm.progress(beta,ginfo) && (ArrayUtils.linfnorm(ginfo._gradient,false) > _gradEps && rel_improvement > _objEps) && iter != _maxIter)) {
    ++iter;
    _hist.getSearchDirection(ginfo._gradient,pk);
    if (!_lineSearch.evaluate(gslvr,ginfo,beta,pk,minStep,maxStep,20)) {
      break;
    }
    _lineSearch.setInitialStep(Math.max(10 * minStep,_lineSearch.step()));
    ArrayUtils.add(beta,ArrayUtils.mult(pk,_lineSearch.step()));
    GradientInfo newGinfo=_lineSearch.ginfo();
    _hist.update(pk,newGinfo._gradient,ginfo._gradient);
    rel_improvement=(ginfo._objVal - newGinfo._objVal) / ginfo._objVal;
    ginfo=newGinfo;
  }
  return new Result((ArrayUtils.linfnorm(ginfo._gradient,false) <= _gradEps || rel_improvement <= _objEps),iter,beta,ginfo,rel_improvement);
}
