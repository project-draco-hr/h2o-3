{
  SVDModel model=null;
  SVDParameters parms=null;
  Frame train=null;
  long seed=1234;
  for (  double missing_fraction : new double[]{0,0.1,0.25,0.5,0.75,0.9}) {
    try {
      Scope.enter();
      train=parse_test_file(Key.make("arrests.hex"),"smalldata/pca_test/USArrests.csv");
      if (missing_fraction > 0) {
        Frame frtmp=new Frame(Key.make(),train.names(),train.vecs());
        DKV.put(frtmp._key,frtmp);
        FrameUtils.MissingInserter j=new FrameUtils.MissingInserter(frtmp._key,seed,missing_fraction);
        j.execImpl();
        j.get();
        DKV.remove(frtmp._key);
      }
      parms=new SVDParameters();
      parms._train=train._key;
      parms._nv=train.numCols();
      parms._transform=DataInfo.TransformType.STANDARDIZE;
      parms._max_iterations=1000;
      parms._seed=seed;
      SVD job=new SVD(parms);
      try {
        model=job.trainModel().get();
        Log.info(100 * missing_fraction + "% missing values: Singular values = " + Arrays.toString(model._output._d));
      }
 catch (      Throwable t) {
        t.printStackTrace();
        throw new RuntimeException(t);
      }
 finally {
        job.remove();
      }
      Scope.exit();
    }
 catch (    Throwable t) {
      t.printStackTrace();
      throw new RuntimeException(t);
    }
 finally {
      if (train != null)       train.delete();
      if (model != null)       model.delete();
    }
  }
}
