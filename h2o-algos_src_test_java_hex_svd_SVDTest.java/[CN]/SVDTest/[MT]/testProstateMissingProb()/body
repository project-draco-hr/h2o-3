{
  long seed=1234;
  Frame train=null, score=null;
  SVDModel model=null;
  try {
    train=parse_test_file(Key.make("prostate.hex"),"smalldata/prostate/prostate_cat.csv");
    Frame frtmp=new Frame(Key.make(),train.names(),train.vecs());
    DKV.put(frtmp._key,frtmp);
    FrameUtils.MissingInserter j=new FrameUtils.MissingInserter(frtmp._key,seed,0.25);
    j.execImpl();
    j.get();
    DKV.remove(frtmp._key);
    SVDParameters parms=new SVDParameters();
    parms._train=train._key;
    parms._nv=8;
    parms._only_v=false;
    parms._keep_u=true;
    parms._svd_method=SVDParameters.Method.Randomized;
    parms._impute_missing=true;
    parms._max_iterations=20;
    SVD job=new SVD(parms);
    try {
      model=job.trainModel().get();
      score=model.score(train);
    }
 catch (    Throwable t) {
      t.printStackTrace();
      throw new RuntimeException(t);
    }
 finally {
      job.remove();
    }
  }
 catch (  Throwable t) {
    t.printStackTrace();
    throw new RuntimeException(t);
  }
 finally {
    if (train != null)     train.delete();
    if (score != null)     score.delete();
    if (model != null) {
      if (model._parms._keep_u)       model._output._u_key.get().delete();
      model.delete();
    }
  }
}
