{
  name=t.getTableHeader();
  description=t.getTableDescription();
  final int rows=t.getRowDim();
  rowcount=rows;
  boolean have_row_header_cols=t.getColHeaderForRowHeaders() != null;
  for (int r=0; r < rows; ++r) {
    if (!have_row_header_cols)     break;
    have_row_header_cols&=t.getRowHeaders()[r] != null;
  }
  if (have_row_header_cols) {
    final int cols=t.getColDim() + 1;
    columns=new ColumnSpecsBase[cols];
    columns[0]=new ColumnSpecsBase();
    columns[0].name=pythonify(t.getColHeaderForRowHeaders());
    columns[0].type="string";
    columns[0].format="%s";
    columns[0].description=t.getColHeaderForRowHeaders();
    for (int c=1; c < cols; ++c) {
      columns[c]=new ColumnSpecsBase();
      columns[c].name=pythonify(t.getColHeaders()[c - 1]);
      columns[c].type=t.getColTypes()[c - 1];
      columns[c].format=t.getColFormats()[c - 1];
      columns[c].description=t.getColHeaders()[c - 1];
    }
    data=new IcedWrapper[cols][rows];
    data[0]=new IcedWrapper[t.getRowDim()];
    for (int r=0; r < t.getRowDim(); ++r) {
      data[0][r]=new IcedWrapper(t.getRowHeaders()[r]);
    }
    IcedWrapper[][] cellValues=t.getCellValues();
    for (int c=1; c < cols; ++c) {
      data[c]=new IcedWrapper[rows];
      for (int r=0; r < rows; ++r) {
        data[c][r]=cellValues[r][c - 1];
      }
    }
  }
 else {
    final int cols=t.getColDim();
    columns=new ColumnSpecsBase[cols];
    for (int c=0; c < cols; ++c) {
      columns[c]=new ColumnSpecsBase();
      columns[c].name=pythonify(t.getColHeaders()[c]);
      columns[c].type=t.getColTypes()[c];
      columns[c].format=t.getColFormats()[c];
      columns[c].description=t.getColHeaders()[c];
    }
    data=new IcedWrapper[cols][rows];
    IcedWrapper[][] cellValues=t.getCellValues();
    for (int c=0; c < cols; ++c) {
      data[c]=new IcedWrapper[rows];
      for (int r=0; r < rows; ++r) {
        data[c][r]=cellValues[r][c - 1];
      }
    }
  }
  return this;
}
