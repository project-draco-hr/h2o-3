{
  String[] data=new String[]{"0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","T","F","0"};
  double[][] exp=new double[][]{ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(Double.NaN),ard(1),ard(0),ard(Double.NaN)};
  for (  char separator : SEPARATORS) {
    String[] dataset=getDataForSeparator(separator,data);
    StringBuilder sb1=new StringBuilder();
    for (    String ds : dataset)     sb1.append(ds).append("\n");
    Key k1=makeByteVec(sb1.toString());
    Key r1=Key.make("r1");
    ParseDataset.parse(r1,k1);
    testParsed(r1,exp);
    StringBuilder sb2=new StringBuilder();
    for (    String ds : dataset)     sb2.append(ds).append("\r\n");
    Key k2=makeByteVec(sb2.toString());
    Key r2=Key.make("r2");
    ParseDataset.parse(r2,k2);
    testParsed(r2,exp);
  }
}
