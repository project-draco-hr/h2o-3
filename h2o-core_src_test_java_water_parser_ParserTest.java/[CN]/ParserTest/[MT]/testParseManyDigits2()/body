{
  String pows10="9\n" + "99\n" + "999\n"+ "9999\n"+ "99999\n"+ "999999\n"+ "9999999\n"+ "99999999\n"+ "999999999\n"+ "9999999999\n"+ "99999999999\n"+ "999999999999\n"+ "9999999999999\n"+ "99999999999999\n"+ "999999999999999\n"+ "9999999999999999\n"+ "99999999999999999\n"+ "999999999999999999\n"+ "9999999999999999999\n"+ "99999999999999999999\n"+ "999999999999999999999\n"+ "9999999999999999999999\n"+ "99999999999999999999999\n"+ "999999999999999999999999\n";
  double[][] pows10_exp=new double[][]{ard(9L),ard(99L),ard(999L),ard(9999L),ard(99999L),ard(999999L),ard(9999999L),ard(99999999L),ard(999999999L),ard(9999999999L),ard(99999999999L),ard(999999999999L),ard(9999999999999L),ard(99999999999999L),ard(999999999999999L),ard(9999999999999999L),ard(99999999999999999L),ard(999999999999999999L),ard(9.99999999999999999e18),ard(9.99999999999999999e19),ard(9.99999999999999999e20),ard(9.99999999999999999e21),ard(9.99999999999999999e22),ard(9.99999999999999999e23)};
  Key k=makeByteVec("test_digits.csv",pows10);
  Key r1=Key.make("r1");
  ParseDataset2.parse(r1,k);
  testParsed(r1,pows10_exp);
}
