{
  String[] numericDataset=new String[]{"10.9533122476"};
  Key k1=makeByteVec(numericDataset);
  Key r1=Key.make();
  ParseDataset.parse(r1,k1);
  Frame fr1=DKV.get(r1).get();
  Assert.assertTrue(fr1.vecs()[0].isNumeric());
  Assert.assertTrue(fr1.numCols() == 1);
  Assert.assertTrue(fr1.numRows() == 1);
  fr1.delete();
  String[] dateDataset=new String[]{"3-Jan-06"};
  Key k2=makeByteVec(dateDataset);
  Key r2=Key.make();
  ParseDataset.parse(r2,k2);
  Frame fr2=DKV.get(r2).get();
  Assert.assertTrue(fr2.vecs()[0].isTime());
  Assert.assertTrue(fr2.numCols() == 1);
  Assert.assertTrue(fr2.numRows() == 1);
  fr2.delete();
  String[] UUIDDataset=new String[]{"9ff4ed3a-6b00-4130-9aca-2ed897305fd1"};
  Key k3=makeByteVec(UUIDDataset);
  Key r3=Key.make();
  ParseDataset.parse(r3,k3);
  Frame fr3=DKV.get(r3).get();
  Assert.assertTrue(fr3.numCols() == 1);
  Assert.assertTrue(fr3.numRows() == 1);
  Assert.assertTrue(fr3.vecs()[0].isUUID());
  fr3.delete();
  String[] enumDataset=new String[]{"Foo-bar"};
  Key k4=makeByteVec(enumDataset);
  Key r4=Key.make();
  ParseDataset.parse(r4,k4);
  Frame fr4=DKV.get(r4).get();
  Assert.assertTrue(fr4.numCols() == 1);
  Assert.assertTrue(fr4.numRows() == 1);
  Assert.assertTrue(fr4.vecs()[0].isEnum());
  String[] dom=fr4.vecs()[0].domain();
  Assert.assertTrue(dom.length == 1);
  Assert.assertEquals("Foo-bar",dom[0]);
  fr4.delete();
}
