{
  int chkIdx=cs[0].cidx();
  Futures fs=new Futures();
  for (int i=0; i < cs.length; ++i) {
    Key destKey=cs[i].vec().chunkKey(chkIdx);
    assert(cs[i].len() == _chunkSizes[chkIdx]);
    Key k=BinaryMerge.getKeyForMSBComboPerCol(_chunkLeftMSB[chkIdx],_chunkRightMSB[chkIdx],i,_chunkBatch[chkIdx]);
    Chunk ck=DKV.getGet(k);
    DKV.put(destKey,ck,fs,true);
    DKV.remove(k);
  }
  fs.blockForPending();
}
