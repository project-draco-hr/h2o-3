{
  GLMModel model1=null, model2=null;
  GLMParameters parms=new GLMParameters(Family.gaussian);
  parms._train=_weighted._key;
  parms._ignored_columns=new String[]{_weighted.name(0)};
  parms._response_column=_weighted.name(1);
  parms._standardize=true;
  parms._objective_epsilon=0;
  parms._gradient_epsilon=1e-10;
  parms._max_iterations=1000;
  for (  Solver s : GLMParameters.Solver.values()) {
    System.out.println("===============================================================");
    System.out.println("Solver = " + s);
    System.out.println("===============================================================");
    try {
      parms._lambda=new double[]{1e-5};
      parms._alpha=null;
      parms._train=_weighted._key;
      parms._solver=s;
      parms._weights_column="weights";
      model1=new GLM(parms).trainModel().get();
      HashMap<String,Double> coefs1=model1.coefficients();
      System.out.println("coefs1 = " + coefs1);
      parms._train=_upsampled._key;
      parms._weights_column=null;
      parms._lambda=new double[]{1e-5};
      parms._alpha=null;
      model2=new GLM(parms).trainModel().get();
      HashMap<String,Double> coefs2=model2.coefficients();
      System.out.println("coefs2 = " + coefs2);
      System.out.println("mse1 = " + model1._output._training_metrics.mse() + ", mse2 = "+ model2._output._training_metrics.mse());
      System.out.println(model1._output._training_metrics);
      System.out.println(model2._output._training_metrics);
      assertEquals(model2._output._training_metrics.mse(),model1._output._training_metrics.mse(),1e-4);
    }
  finally {
      if (model1 != null)       model1.delete();
      if (model2 != null)       model2.delete();
    }
  }
}
