{
  final String pattern=pat;
  final String replacement=rep;
  final boolean ignoreCase=ic;
  return new MRTask(){
    @Override public void map(    Chunk chk,    NewChunk newChk){
      if (chk instanceof C0DChunk)       for (int i=0; i < chk.len(); i++)       newChk.addNA();
 else {
        BufferedString tmpStr=new BufferedString();
        for (int i=0; i < chk._len; i++) {
          if (chk.isNA(i))           newChk.addNA();
 else {
            if (ignoreCase)             newChk.addStr(chk.atStr(tmpStr,i).toString().toLowerCase(Locale.ENGLISH).replaceFirst(pattern,replacement));
 else             newChk.addStr(chk.atStr(tmpStr,i).toString().replaceFirst(pattern,replacement));
          }
        }
      }
    }
  }
.doAll(1,vec).outputFrame().anyVec();
}
