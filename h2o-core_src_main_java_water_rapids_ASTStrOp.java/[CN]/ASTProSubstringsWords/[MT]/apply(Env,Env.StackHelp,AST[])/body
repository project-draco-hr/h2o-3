{
  Frame fr=stk.track(asts[1].exec(env)).getFrame();
  String wordsPath=asts[2].exec(env).getStr();
  for (  Vec v : fr.vecs())   if (!(v.isCategorical() || v.isString()))   throw new IllegalArgumentException("pro_substrings_words() requires a string or categorical column. " + "Received " + fr.anyVec().get_type_str() + ". Please convert column to a string or categorical first.");
  HashSet<String> words=null;
  try {
    words=new HashSet<>(FileUtils.readLines(new File(wordsPath)));
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
  Vec nvs[]=new Vec[fr.numCols()];
  int i=0;
  for (  Vec v : fr.vecs()) {
    if (v.isCategorical())     nvs[i]=proSubstringsWordsCategoricalCol(v,words);
 else     nvs[i]=proSubstringsWordsStringCol(v,words);
    i++;
  }
  return new ValFrame(new Frame(nvs));
}
