{
  final Key[] modelKeys=KeySnapshot.globalSnapshot().filter(new KeySnapshot.KVFilter(){
    @Override public boolean filter(    KeySnapshot.KeyInfo k){
      return Value.isSubclassOf(k._type,Model.class);
    }
  }
).keys();
  models=new Model[modelKeys.length];
  for (int i=0; i < modelKeys.length; i++) {
    Model model=getFromDKV(modelKeys[i]);
    models[i]=model;
  }
}
