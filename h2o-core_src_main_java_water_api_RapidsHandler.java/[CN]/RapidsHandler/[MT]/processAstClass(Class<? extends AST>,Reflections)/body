{
  ArrayList<RapidsExpressionV3> subs=new ArrayList<>();
  for (  Class<? extends AST> subclass : refl.getSubTypesOf(clz))   if (subclass.getSuperclass() == clz)   subs.add(processAstClass(subclass,refl));
  RapidsExpressionV3 target=new RapidsExpressionV3();
  target.name=clz.getSimpleName();
  target.is_abstract=Modifier.isAbstract(clz.getModifiers());
  if (!target.is_abstract) {
    try {
      AST m=clz.newInstance();
      target.pattern=m.example();
      target.description=m.description();
    }
 catch (    IllegalAccessException|InstantiationException e) {
    }
  }
  target.sub=subs.toArray(new RapidsExpressionV3[subs.size()]);
  return target;
}
