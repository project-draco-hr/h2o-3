{
  int len=100000;
  double[] p=new double[len];
  long[] a=new long[len];
  Random rng=new Random(0xDECAF);
  for (int i=0; i < len; ++i) {
    a[i]=rng.nextDouble() > 0.8 ? 1 : 0;
    p[i]=a[i] == 0 ? 0.5 + 0.5 * rng.nextDouble() : 0.5 * rng.nextDouble();
  }
  Vec actual=Vec.makeVec(a,new String[]{"N","Y"},Vec.newKey());
  Vec predict=Vec.makeVec(p,Vec.newKey());
  GainsLift gl=new GainsLift(predict,actual);
  gl._groups=10;
  gl.exec();
  Log.info(gl);
  for (int i=gl.response_rates.length - 2; i < gl.response_rates.length; ++i)   Assert.assertTrue(gl.response_rates[i] > 0.9);
  for (int i=0; i < gl.response_rates.length - 2; ++i)   Assert.assertTrue(gl.response_rates[i] < 0.1);
  actual.remove();
  predict.remove();
}
