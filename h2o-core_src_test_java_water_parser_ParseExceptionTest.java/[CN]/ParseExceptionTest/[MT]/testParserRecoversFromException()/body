{
  Throwable ex=null;
  Key fkey0=null, fkey1=null, fkey2=null, okey=null;
  try {
    okey=Key.make("junk.hex");
    fkey0=NFSFileVec.make(new File("smalldata/parse_folder_test/prostate_0.csv"))._key;
    fkey1=NFSFileVec.make(new File("smalldata/parse_folder_test/prostate_1.csv"))._key;
    fkey2=NFSFileVec.make(new File("smalldata/parse_folder_test/prostate_2.csv"))._key;
    new Break(fkey1).doAllNodes();
    water.parser.ParseDataset2.parse(okey,fkey0,fkey1,fkey2);
  }
 catch (  Throwable e2) {
    ex=e2;
  }
  assertTrue("Parse should throw an NPE",ex != null);
  assertTrue("All input & output keys not removed",DKV.get(fkey0) == null);
  assertTrue("All input & output keys not removed",DKV.get(fkey1) == null);
  assertTrue("All input & output keys not removed",DKV.get(fkey2) == null);
  assertTrue("All input & output keys not removed",DKV.get(okey) == null);
  okey=Key.make("junk.hex");
  fkey0=NFSFileVec.make(new File("smalldata/parse_folder_test/prostate_0.csv"))._key;
  fkey1=NFSFileVec.make(new File("smalldata/parse_folder_test/prostate_1.csv"))._key;
  fkey2=NFSFileVec.make(new File("smalldata/parse_folder_test/prostate_2.csv"))._key;
  Frame fr=water.parser.ParseDataset2.parse(okey,fkey0,fkey1,fkey2);
  fr.delete();
  assertTrue("All input & output keys not removed",DKV.get(fkey0) == null);
  assertTrue("All input & output keys not removed",DKV.get(fkey1) == null);
  assertTrue("All input & output keys not removed",DKV.get(fkey2) == null);
  assertTrue("All input & output keys not removed",DKV.get(okey) == null);
}
