def start(self, x, y=None, training_frame=None, offset_column=None, fold_column=None, weights_column=None, validation_frame=None, **params):
    'Asynchronous model build by specifying the predictor columns, response column, and any\n    additional frame-specific values.\n\n    To block for results, call join.\n\n    Parameters\n    ----------\n      x : list\n        A list of column names or indices indicating the predictor columns.\n      y : str\n        An index or a column name indicating the response column.\n      training_frame : H2OFrame\n        The H2OFrame having the columns indicated by x and y (as well as any\n        additional columns specified by fold, offset, and weights).\n      offset_column : str, optional\n        The name or index of the column in training_frame that holds the offsets.\n      fold_column : str, optional\n        The name or index of the column in training_frame that holds the per-row fold\n        assignments.\n      weights_column : str, optional\n        The name or index of the column in training_frame that holds the per-row weights.\n      validation_frame : H2OFrame, optional\n        H2OFrame with validation data to be scored on while training.\n    '
    self._future = True
    self.train(x=x, y=y, training_frame=training_frame, offset_column=offset_column, fold_column=fold_column, weights_column=weights_column, validation_frame=validation_frame, **params)
