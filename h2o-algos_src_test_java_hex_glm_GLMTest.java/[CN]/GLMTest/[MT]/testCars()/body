{
  GLM job=null;
  Key parsed=Key.make("cars_parsed");
  Key modelKey=Key.make("cars_model");
  Frame fr=null;
  GLMModel model=null;
  Frame score=null;
  try {
    fr=parse_test_file(parsed,"smalldata/junit/cars.csv");
    GLMParameters params=new GLMParameters(Family.poisson,Family.poisson.defaultLink,new double[]{0},new double[]{0});
    params._response_column="power (hp)";
    params._ignored_columns=new String[]{"name"};
    params._train=parsed;
    params._lambda=new double[]{0};
    params._alpha=new double[]{0};
    job=new GLM(modelKey,"glm test simple poisson",params);
    job.trainModel().get();
    model=DKV.get(modelKey).get();
    HashMap<String,Double> coefs=model.coefficients();
    String[] cfs1=new String[]{"Intercept","economy (mpg)","cylinders","displacement (cc)","weight (lb)","0-60 mph (s)","year"};
    double[] vls1=new double[]{4.9504805,-0.0095859,-0.0063046,0.0004392,0.0001762,-0.0469810,0.0002891};
    for (int i=0; i < cfs1.length; ++i)     assertEquals(vls1[i],coefs.get(cfs1[i]),1e-4);
    double[] vls2=new double[]{8.992e-03,1.818e-04,-1.125e-04,1.505e-06,-1.284e-06,4.510e-04,-7.254e-05};
    score=model.score(fr);
    score.delete();
    model.delete();
    job.remove();
    params=new GLMParameters(Family.gamma,Family.gamma.defaultLink,new double[]{0},new double[]{0});
    params._response_column="power (hp)";
    params._ignored_columns=new String[]{"name"};
    params._train=parsed;
    params._lambda=new double[]{0};
    params._beta_epsilon=1e-5;
    job=new GLM(modelKey,"glm test simple poisson",params);
    job.trainModel().get();
    model=DKV.get(modelKey).get();
    coefs=model.coefficients();
    for (int i=0; i < cfs1.length; ++i)     assertEquals(vls2[i],coefs.get(cfs1[i]),1e-4);
    score=model.score(fr);
    model.delete();
    job.remove();
    double[] vls3=new double[]{166.95862,-0.00531,-2.46690,0.12635,0.02159,-4.66995,-0.85724};
    params=new GLMParameters(Family.gaussian);
    params._response_column="power (hp)";
    params._ignored_columns=new String[]{"name"};
    params._train=parsed;
    params._lambda=new double[]{0};
    job=new GLM(modelKey,"glm test simple poisson",params);
    job.trainModel().get();
    model=DKV.get(modelKey).get();
    coefs=model.coefficients();
    for (int i=0; i < cfs1.length; ++i)     assertEquals(vls3[i],coefs.get(cfs1[i]),1e-4);
  }
  finally {
    if (fr != null)     fr.delete();
    if (score != null)     score.delete();
    if (model != null)     model.delete();
    if (job != null)     job.remove();
  }
}
