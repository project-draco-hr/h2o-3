{
  GLM job=null;
  Key parsed=Key.make("arcene_parsed");
  Key modelKey=Key.make("arcene_model");
  GLMModel model=null;
  Frame fr=parse_test_file(parsed,"smalldata/glm_test/arcene.csv");
  try {
    Scope.enter();
    GLMParameters params=new GLMParameters(Family.gaussian);
    params._solver=Solver.L_BFGS;
    params._response_column=fr._names[0];
    params._train=parsed;
    params._alpha=new double[]{0};
    job=new GLM(modelKey,"glm test simple poisson",params);
    job.trainModel().get();
    model=DKV.get(modelKey).get();
    model.delete();
    params=new GLMParameters(Family.gaussian);
    params._lambda=null;
    params._response_column=fr._names[0];
    params._train=parsed;
    params._lambda_search=true;
    params._nlambdas=35;
    params._lambda_min_ratio=0.18;
    params._max_iterations=100000;
    params._max_active_predictors=215;
    params._alpha=new double[]{1};
    for (    Solver s : new Solver[]{Solver.IRLSM}) {
      params._solver=s;
      job=new GLM(modelKey,"glm test simple poisson",params);
      job.trainModel().get();
      model=DKV.get(modelKey).get();
      assertEquals(params._nlambdas,model._output._submodels.length);
      job.remove();
    }
    params=new GLMParameters(Family.gaussian);
    params._lambda=null;
    params._response_column=fr._names[0];
    params._train=parsed;
    params._lambda_search=true;
    params._nlambdas=35;
    params._lambda_min_ratio=0.18;
    params._max_active_predictors=20;
    params._alpha=new double[]{1};
    job=new GLM(modelKey,"glm test simple poisson",params);
    job.trainModel().get();
    model=DKV.get(modelKey).get();
    assertTrue(model._output._submodels.length > 3);
    assertTrue(residualDeviance(model) <= 93);
  }
  finally {
    fr.delete();
    if (model != null)     model.delete();
    if (job != null)     job.remove();
    Scope.exit();
  }
}
