{
  GLM job=null;
  Key parsed=Key.make("glm_parsed");
  Key modelKey=Key.make("glm_model");
  GLMModel model=null;
  Frame fr=parse_test_file(parsed,"smalldata/glm_test/glm_test2.csv");
  Frame score=null;
  try {
    GLMParameters params=new GLMParameters(Family.binomial);
    params._response_column="response";
    params._response=fr.find(params._response_column);
    params._ignored_columns=new String[]{"ID"};
    params._train=parsed;
    params.lambda=new double[]{0};
    job=new GLM(modelKey,"glm test simple poisson",params);
    job.trainModel().get();
    model=DKV.get(modelKey).get();
    assertEquals(model.validation().auc(),1,1e-4);
    double[] beta=model.beta();
    for (    double d : beta)     assertTrue(Math.abs(d) < 16);
    GLMValidation val=model.validation();
    assertEquals(1,val.auc,1e-2);
    score=model.score(fr);
    AUC auc=new AUC();
    auc.predict=score;
    auc.actual=fr;
    auc.vactual=fr.vec("response");
    auc.vpredict=score.vec("1");
    auc.execImpl();
    AUCData adata=auc.data();
    assertEquals(val.auc(),adata.AUC(),1e-2);
  }
  finally {
    fr.remove();
    if (model != null)     model.delete();
    if (score != null)     score.delete();
    if (job != null)     job.remove();
  }
}
