{
  GLM job=null;
  GLMModel model1=null, model2=null, model3=null, model4=null;
  Frame frMM=parse_test_file("smalldata/airlines/AirlinesTrainMM.csv.zip");
  frMM.remove("").remove();
  Frame fr=parse_test_file("smalldata/airlines/AirlinesTrain.csv.zip");
  String[] ignoredCols=new String[]{"fYear","fMonth","fDayofMonth","fDayOfWeek","DepTime","ArrTime","IsDepDelayed_REC"};
  try {
    Scope.enter();
    GLMParameters params=new GLMParameters(Family.gaussian);
    params._response_column="IsDepDelayed";
    params._ignored_columns=ignoredCols;
    params._train=fr._key;
    params._lambda=new double[]{1e-5};
    params._standardize=false;
    job=new GLM(Key.make("prostate_model"),"glm test simple poisson",params);
    model1=job.trainModel().get();
    params._train=frMM._key;
    params._ignored_columns=new String[]{"X"};
    job=new GLM(Key.make("prostate_model"),"glm test simple poisson",params);
    model2=job.trainModel().get();
    HashMap<String,Double> coefs1=model1.coefficients();
    HashMap<String,Double> coefs2=model2.coefficients();
    GLMValidation val1=model1.validation();
    GLMValidation val2=model2.validation();
    for (    String s : coefs2.keySet()) {
      String s1=s;
      if (s.startsWith("Origin"))       s1="Origin." + s.substring(6);
      if (s.startsWith("Dest"))       s1="Dest." + s.substring(4);
      if (s.startsWith("UniqueCarrier"))       s1="UniqueCarrier." + s.substring(13);
      assertEquals("coeff " + s1 + " differs, "+ coefs1.get(s1)+ " != "+ coefs2.get(s),coefs1.get(s1),coefs2.get(s),1e-4);
    }
    assertEquals(val1.nullDeviance(),val2.nullDeviance(),1e-4);
    assertEquals(val1.residualDeviance(),val2.residualDeviance(),1e-4);
    assertEquals(val1.aic(),val2.aic(),1e-4);
    assertEquals(5336.918,val1.residualDeviance(),1);
    assertEquals(6051.613,val1.nullDeviance(),1);
  }
  finally {
    fr.delete();
    frMM.delete();
    if (model1 != null)     model1.delete();
    if (model2 != null)     model2.delete();
    if (job != null)     job.remove();
    Scope.exit();
  }
}
