def test_get_future_model(ip, port):
    covtype = h2o.upload_file(h2o.locate('smalldata/covtype/covtype.altered.gz'))
    myY = 54
    myX = list((set(range(54)) - set([20, 28])))
    res_class = random.sample(range(1, 5), 1)[0]
    covtype[myY] = (covtype[myY] == res_class)
    covtype[myY] = covtype[myY].asfactor()
    covtype_h2o1 = h2o.start_glm_job(y=covtype[myY], x=covtype[myX], family='binomial', alpha=[0], Lambda=[0])
    covtype_h2o2 = h2o.start_glm_job(y=covtype[myY], x=covtype[myX], family='binomial', alpha=[0.5], Lambda=[0.0001])
    covtype_h2o3 = h2o.start_glm_job(y=covtype[myY], x=covtype[myX], family='binomial', alpha=[1], Lambda=[0.0001])
    covtype_h2o1 = h2o.get_future_model(covtype_h2o1)
    print covtype_h2o1
    covtype_h2o2 = h2o.get_future_model(covtype_h2o2)
    print covtype_h2o2
    covtype_h2o3 = h2o.get_future_model(covtype_h2o3)
    print covtype_h2o3
