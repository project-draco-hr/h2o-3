def _get_method_full_name(func):
    u'\n    Return fully qualified function name.\n\n    This method will attempt to find "full name" of the given function object. This full name is either of\n    the form "<class name>.<method name>" if the function is a class method, or "<module name>.<func name>"\n    if it\'s a regular function. Thus, this is an attempt to back-port func.__qualname__ to Python 2.\n\n    :param func: a function object.\n\n    :returns: string with the function\'s full name as explained above.\n    '
    if hasattr(func, u'__qualname__'):
        return func.__qualname__
    module = inspect.getmodule(func)
    for cls_name in dir(module):
        cls = getattr(module, cls_name)
        if (not inspect.isclass(cls)):
            continue
        for method_name in dir(cls):
            cls_method = getattr(cls, method_name)
            if (cls_method == func):
                return (u'%s.%s' % (cls_name, method_name))
    if hasattr(func, u'__name__'):
        return (u'%s.%s' % (module.__name__, func.__name__))
    return u'<unknown>'
