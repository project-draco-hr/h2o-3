def test_plot_remove_keys(self):
    SYNDATASETS_DIR = h2o.make_syn_dir()
    tryList = [(100000, 100, 'cG', 400), (200000, 100, 'cH', 400), (400000, 100, 'cI', 400), (800000, 100, 'cJ', 400), (1000000, 100, 'cK', 400)]
    xList = []
    eList = []
    fList = []
    for (rowCount, colCount, hex_key, timeoutSecs) in tryList:
        SEEDPERFILE = random.randint(0, sys.maxint)
        NUM_CASES = h2o_util.fp_format()
        sel = random.randint(0, (NUM_CASES - 1))
        csvFilename = ('syn_%s_%s_%s_%s.csv' % (SEEDPERFILE, sel, rowCount, colCount))
        csvPathname = ((SYNDATASETS_DIR + '/') + csvFilename)
        print 'Creating random', csvPathname
        write_syn_dataset(csvPathname, rowCount, colCount, SEEDPERFILE, sel)
        parseResult = h2i.import_parse(path=csvPathname, schema='put', hex_key=hex_key, timeoutSecs=timeoutSecs, doSummary=False)
        pA = h2o_cmd.ParseObj(parseResult, expectedNumRows=rowCount, expectedNumCols=colCount)
        iA = h2o_cmd.InspectObj(pA.parse_key)
        parseElapsed = pA.python_elapsed
        parse_key = pA.parse_key
        numRows = iA.numRows
        numCols = iA.numCols
        print parse_key, parseElapsed, numRows, numCols
        labelList = iA.labelList
        node = h2o.nodes[0]
        print 'Deleting', hex_key, 'at', node.http_addr, "Shouldn't matter what node the delete happens at..global?"
        start = time.time()
        node.remove_key(hex_key, timeoutSecs=30)
        removeElapsed = (time.time() - start)
        print 'Deleting', hex_key, 'took', removeElapsed, 'seconds'
        xList.append(numRows)
        eList.append(parseElapsed)
        fList.append(removeElapsed)
    if (1 == 1):
        xLabel = 'byteSize'
        eLabel = 'parseElapsed'
        fLabel = 'removeElapsed'
        eListTitle = ''
        fListTitle = ''
        h2o_gbm.plotLists(xList, xLabel, eListTitle, eList, eLabel, fListTitle, fList, fLabel)
