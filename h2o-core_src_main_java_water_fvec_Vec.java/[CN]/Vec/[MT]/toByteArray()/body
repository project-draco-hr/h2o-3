{
  if ((int)length() != length())   throw new IllegalArgumentException("Vec length is larger than int");
  if (min() < Byte.MIN_VALUE || max() > Byte.MAX_VALUE || !isInt())   throw new IllegalArgumentException("Vec elements do not fit in a byte");
  if (naCnt() > 0)   throw new IllegalArgumentException("Byte array does not support missing values");
  final byte[] bs=MemoryManager.malloc1((int)length());
  new MRTask(){
    @Override public void map(    Chunk cs){
      for (int i=0; i < cs._len; i++)       bs[i + (int)cs._start]=(byte)cs.at8(i);
    }
  }
.doAll(this);
  return bs;
}
