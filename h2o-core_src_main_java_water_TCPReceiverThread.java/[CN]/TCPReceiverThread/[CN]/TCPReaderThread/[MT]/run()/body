{
  while (true) {
    try {
      _ab._h2o._last_heard_from=System.currentTimeMillis();
      TimeLine.record_recv(_ab,true,0);
      int ctrl=_ab.getCtrl();
      int x=ctrl;
      if (ctrl < 0 || ctrl >= UDP.udp.UDPS.length)       x=0;
switch (UDP.udp.UDPS[x]) {
case exec:
        RPC.remote_exec(_ab);
      break;
case ack:
    RPC.tcp_ack(_ab);
  break;
case timeline:
TimeLine.tcp_call(_ab);
break;
default :
throw new RuntimeException("Unknown TCP Type: " + ctrl + " "+ _ab._h2o);
}
}
 catch (java.nio.channels.AsynchronousCloseException ex) {
break;
}
catch (Throwable e) {
System.err.println("IO error");
e.printStackTrace();
Log.err("IO error on TCP port " + H2O.H2O_PORT + ": ",e);
break;
}
try {
if (!_sock.isOpen()) break;
_ab=new AutoBuffer(_sock);
}
 catch (Exception e) {
break;
}
}
}
