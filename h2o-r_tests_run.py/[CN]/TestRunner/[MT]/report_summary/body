def report_summary(self, nopass):
    '\n        Report some summary information when the tests have finished running.\n\n        @return: none\n        '
    passed = 0
    nopass_but_tolerate = 0
    failed = 0
    notrun = 0
    total = 0
    true_fail_list = []
    for test in self.tests:
        if test.get_passed():
            passed += 1
        else:
            if test.get_nopass(nopass):
                nopass_but_tolerate += 1
            if test.get_completed():
                failed += 1
                if (not test.get_nopass(nopass)):
                    true_fail_list.append(test.test_name)
            else:
                notrun += 1
        total += 1
    if ((passed + nopass_but_tolerate) == total):
        self.regression_passed = True
    else:
        self.regression_passed = False
    end_seconds = time.time()
    delta_seconds = (end_seconds - self.start_seconds)
    run = (total - notrun)
    self._log('')
    self._log('----------------------------------------------------------------------')
    self._log('')
    self._log('SUMMARY OF RESULTS')
    self._log('')
    self._log('----------------------------------------------------------------------')
    self._log('')
    self._log(('Total tests:          ' + str(total)))
    self._log(('Passed:               ' + str(passed)))
    self._log(('Did not pass:         ' + str(failed)))
    self._log(('Did not complete:     ' + str(notrun)))
    self._log(('Tolerated NOPASS:     ' + str(nopass_but_tolerate)))
    self._log('')
    self._log(('Total time:           %.2f sec' % delta_seconds))
    if (run > 0):
        self._log(('Time/completed test:  %.2f sec' % (delta_seconds / run)))
    else:
        self._log('Time/completed test:  N/A')
    self._log('')
    self._log(('True fail list:       ' + ', '.join(true_fail_list)))
    self._log('')
