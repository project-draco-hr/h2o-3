{
  AUCData aucdata;
  ConfusionMatrix cm;
  if (_cms.length > 1) {
    ConfusionMatrix[] cms=new ConfusionMatrix[_cms.length];
    for (int i=0; i < cms.length; i++)     cms[i]=new ConfusionMatrix(_cms[i],_domain);
    aucdata=new AUC(cms,_thresholds,_domain).data();
    cm=aucdata.CM();
  }
 else {
    aucdata=null;
    cm=new ConfusionMatrix(_cms[0],_domain);
  }
  double mse=_sumsqe / cm.totalRows();
  HitRatio hr=null;
switch (m._output.getModelCategory()) {
case Binomial:
    return m._output.addModelMetrics(new ModelMetricsBinomial(m,f,aucdata,cm,hr));
case Multinomial:
  return m._output.addModelMetrics(new ModelMetricsMultinomial(m,f,cm,hr));
case Regression:
return m._output.addModelMetrics(new ModelMetricsRegression(m,f,sigma,mse));
case Clustering:
return m._output.addModelMetrics(new ModelMetricsClustering(m,f,null));
case AutoEncoder:
return m._output.addModelMetrics(new ModelMetricsAutoEncoder(m,f,mse));
}
throw H2O.unimpl();
}
