def binop_minus(ip, port):
    h2o.init(ip, port)
    iris = h2o.import_frame(path=h2o.locate('smalldata/iris/iris_wheader_65_rows.csv'))
    (rows, cols) = iris.dim()
    iris.show()
    res = (2 - iris)
    (res_rows, res_cols) = res.dim()
    res = h2o.as_list(res)
    assert ((res_rows == rows) and (res_cols == cols)), 'dimension mismatch'
    for (x, y) in zip([sum([res[r][c] for r in range(rows)]) for c in range((cols - 1))], [(-209.9), (-82.6), (-6.9), 97.8]):
        assert (abs((x - y)) < 0.1), 'expected same values'
    res = (2 - iris[1])
    res = h2o.as_list(res)
    assert (abs((sum([res[i][0] for i in range(rows)]) - (-82.6))) < 0.1), 'expected same values'
    res = (2 - iris[0])
    res2 = (1.1 - res[21])
    res2 = h2o.as_list(res2)
    assert (abs((res2 - 4.2)) < 0.1), 'expected same values'
    res = (1.2 - iris[2])
    res2 = (res[21] - iris)
    (res_rows, res_cols) = res2.dim()
    assert ((res_rows == rows) and (res_cols == cols)), 'dimension mismatch'
    res = (1.2 - iris[2])
    res2 = (res[21] - iris[1])
    res2.show()
    res = (1.1 - iris[2])
    res2 = (res[21] - res[10])
    assert (abs((h2o.as_list(res2) - 0)) < 0.1), 'expected same values'
    res = (2 - iris[0])
    res2 = (res[21] - 3)
    assert (abs((h2o.as_list(res2) - (-6.1))) < 0.1), 'expected same values'
    try:
        res = (iris[2] - iris)
        res.show()
        assert False, 'expected error. objects with different dimensions not supported.'
    except EnvironmentError:
        pass
    res = h2o.as_list((iris[0] - iris[1]))
    assert (abs((sum([res[i][0] for i in range(rows)]) - 127.3)) < 0.1), 'expected same values'
    res = h2o.as_list((iris[2] - iris[1]))
    assert (abs((sum([res[i][0] for i in range(rows)]) - (-75.7))) < 0.1), 'expected same values'
    res = h2o.as_list(((iris[0] - (iris[1] * iris[2])) - iris[3]))
    assert (abs((sum([res[i][0] for i in range(rows)]) - (-122.15))) < 0.01), 'expected same values'
    res = (1.2 - iris[2])
    res2 = (iris[1] - res[21])
    res2.show()
    res = h2o.as_list((iris[0] - 2))
    assert (abs((sum([res[i][0] for i in range(rows)]) - 209.9)) < 0.01), 'expected different column sum'
    res = (iris - iris)
    (res_rows, res_cols) = res.dim()
    assert ((res_rows == rows) and (res_cols == cols)), 'dimension mismatch'
    res = (iris[0:2] - iris[1:3])
    (res_rows, res_cols) = res.dim()
    assert ((res_rows == rows) and (res_cols == 2)), 'dimension mismatch'
    try:
        res = (iris - iris[0:3])
        res.show()
        assert False, 'expected error. frames are different dimensions.'
    except EnvironmentError:
        pass
    try:
        res = (iris - iris[0])
        res.show()
        assert False, 'expected error. objects of different dimensions not supported.'
    except EnvironmentError:
        pass
    res = (1.2 - iris[2])
    res2 = (iris - res[21])
    res2.show()
    res = (iris - 2)
    (res_rows, res_cols) = res.dim()
    res = h2o.as_list(res)
    assert ((res_rows == rows) and (res_cols == cols)), 'dimension mismatch'
    for (x, y) in zip([sum([res[r][c] for r in range(rows)]) for c in range((cols - 1))], [209.9, 82.6, 6.9, (-97.8)]):
        assert (abs((x - y)) < 0.1), 'expected same values'
