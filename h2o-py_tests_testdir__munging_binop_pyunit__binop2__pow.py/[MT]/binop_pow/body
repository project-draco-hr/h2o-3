def binop_pow(ip, port):
    h2o.init(ip, port)
    iris = h2o.import_frame(path=h2o.locate('smalldata/iris/iris_wheader_65_rows.csv'))
    (rows, cols) = iris.dim()
    iris.show()
    res = (2 ** iris)
    (res_rows, res_cols) = res.dim()
    res = h2o.as_list(res)
    assert ((res_rows == rows) and (res_cols == cols)), 'dimension mismatch'
    for (x, y) in zip([sum([res[r][c] for r in range(rows)]) for c in range((cols - 1))], [2689.579, 659.6639, 439.1082, 97.49004]):
        assert (abs((x - y)) < 0.01), 'expected same values'
    res = h2o.as_list((2 ** iris[1]))
    assert (abs((sum([res[i][0] for i in range(rows)]) - 659.6639)) < 0.01), 'expected same values'
    res = (2 ** iris[0])
    res2 = h2o.as_list((1.1 ** res[21]))
    assert (abs((res2 - 26.28056)) < 0.01), 'expected same values'
    res = (1.2 ** iris[2])
    res2 = (res[33] ** iris)
    res2.show()
    res = (1.2 ** iris[2])
    res2 = (res[34] ** iris[1])
    res2.show()
    res = (1.1 ** iris[2])
    res2 = h2o.as_list((res[32] ** res[10]))
    assert (abs((res2 - 1.179319)) < 1e-05), 'expected same values'
    res = (2 ** iris[0])
    res2 = h2o.as_list((res[32] ** 3))
    assert ((int(res2) - 49667) == 0), 'expected same values'
    try:
        res = (iris[2] ** iris)
        res.show()
        assert False, 'expected error. objects with different dimensions not supported.'
    except EnvironmentError:
        pass
    res = h2o.as_list((iris[0] ** iris[1]))
    assert (abs((sum([res[i][0] for i in range(rows)]) - 20694.67)) < 0.01), 'expected same values'
    res = h2o.as_list((iris[2] ** iris[1]))
    assert (abs((sum([res[i][0] for i in range(rows)]) - 1309.794)) < 0.01), 'expected same values'
    res = h2o.as_list(((iris[0] ** iris[1]) * (iris[2] ** iris[3])))
    assert ((int(sum([res[i][0] for i in range(rows)])) - 47242.98) < 0.01), 'expected same values'
    res = (1.2 ** iris[2])
    res2 = (iris[1] ** res[45])
    res2.show()
    res = h2o.as_list((iris[0] ** 2))
    assert (abs((sum([res[i][0] for i in range(rows)]) - 1800.33)) < 0.01), 'expected different column sum'
    res = (iris ** iris)
    (res_rows, res_cols) = res.dim()
    assert ((res_rows == rows) and (res_cols == cols)), 'dimension mismatch'
    res = (iris[0:2] ** iris[1:3])
    (res_rows, res_cols) = res.dim()
    assert ((res_rows == rows) and (res_cols == 2)), 'dimension mismatch'
    try:
        res = (iris ** iris[0:3])
        res.show()
        assert False, 'expected error. frames are different dimensions.'
    except EnvironmentError:
        pass
    try:
        res = (iris ** iris[0])
        res.show()
        assert False, 'expected error. objects of different dimensions not supported.'
    except EnvironmentError:
        pass
    res = (1.2 ** iris[2])
    res2 = (iris ** res[63])
    res2.show()
    res = (iris ** 2)
    (res_rows, res_cols) = res.dim()
    res = h2o.as_list(res)
    assert ((res_rows == rows) and (res_cols == cols)), 'dimension mismatch'
    for (x, y) in zip([sum([res[r][c] for r in range(rows)]) for c in range((cols - 1))], [1800.33, 709.32, 382.69, 30.74]):
        assert (abs((x - y)) < 0.01), 'expected same values'
