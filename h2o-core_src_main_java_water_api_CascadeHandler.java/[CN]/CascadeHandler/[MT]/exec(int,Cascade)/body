{
  Throwable e;
  Env env=null;
  try {
    env=water.cascade.Exec.exec(cascade._ast);
    StringBuilder sb=env._sb;
    if (sb.length() != 0)     sb.append("\n");
    if (env.isAry()) {
      Frame fr=env.peekAry();
      cascade._key=fr._key;
      cascade._num_rows=fr.numRows();
      cascade._num_cols=fr.numCols();
      cascade._col_names=fr.names();
    }
 else     if (env.isNum()) {
      cascade._scalar=env.popDbl();
      sb.append(Double.toString(cascade._scalar));
    }
 else     if (env.isStr()) {
      cascade._string=env.popStr();
      sb.append(cascade._string);
    }
    cascade._result=sb.toString();
    return schema(version).fillFromImpl(cascade);
  }
 catch (  IllegalArgumentException pe) {
    e=pe;
  }
catch (  Throwable e2) {
    Log.err(e=e2);
  }
 finally {
    if (env != null) {
      try {
        env.remove_and_unlock();
      }
 catch (      Exception xe) {
        Log.err("env.remove_and_unlock() failed",xe);
      }
    }
  }
  return schema(version).fillFromImpl(cascade);
}
