def run_commands(command, number_to_run, temp_file):
    '\n    This function will run the command for number_to_run number of times.  For each run,\n    it store the screen print out into temp_file.  After finishing a run, it will go to\n    temp_file and collect the run time information and store it in a list in result_dict\n    which is a python dict structure.  The result_dict will be returned.\n\n    :param command: string containing the command to be run\n    :param number_to_run: integer denoting the number of times to run command\n    :param temp_file: string containing file name to store run command output\n\n    :return: result_dict: python dict containing run time in secs as a list\n    '
    result_dict = dict()
    temp_string = command.split()
    testname = temp_string[(-1)]
    temp_string = testname.split('/')
    result_dict['test_name'] = temp_string[(-1)]
    result_dict['run_time_secs'] = []
    full_command = ((command + ' > ') + temp_file)
    for run_index in range(0, number_to_run):
        child = subprocess.Popen(full_command, shell=True)
        while (child.poll() is None):
            time.sleep(20)
        with open(temp_file, 'r') as thefile:
            for each_line in thefile:
                print each_line
                temp_string = each_line.split()
                if (len(temp_string) > 0):
                    if (temp_string[0] == 'PASS'):
                        test_time = temp_string[2]
                        try:
                            runtime = test_time[:(-1)]
                            result_dict['run_time_secs'].append(float(runtime))
                        except:
                            print 'Cannot convert run time.  It is {0}\n'.format(runtime)
                        break
    return result_dict
