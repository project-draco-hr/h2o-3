{
  if (_family == bernoulli || _family == modified_huber) {
    super.scoreAllTrees(row,preds,1);
    double f=preds[1] + _init_f + offset;
    preds[2]=_family.linkInv(f);
    preds[1]=1.0 - preds[2];
  }
 else   if (_family == multinomial) {
    super.scoreAllTrees(row,preds,_nclasses == 2 ? 1 : _nclasses);
    if (_nclasses == 2) {
      preds[1]+=_init_f + offset;
      preds[2]=-preds[1];
    }
    GenModel.GBM_rescale(preds);
  }
 else {
    super.scoreAllTrees(row,preds,1);
    double f=preds[0] + _init_f + offset;
    preds[0]=_family.linkInv(f);
    return preds;
  }
  if (_balanceClasses)   GenModel.correctProbabilities(preds,_priorClassDistrib,_modelClassDistrib);
  preds[0]=GenModel.getPrediction(preds,_priorClassDistrib,row,_defaultThreshold);
  return preds;
}
