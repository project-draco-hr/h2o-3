{
  Thread.currentThread().setPriority(Thread.MAX_PRIORITY);
  ServerSocketChannel errsock=null;
  boolean saw_error=false;
  while (true) {
    try {
      if (errsock != null) {
        final ServerSocketChannel tmp2=errsock;
        errsock=null;
        tmp2.close();
      }
      if (saw_error)       Thread.sleep(100);
      saw_error=false;
      if (SOCK == null) {
        SOCK=ServerSocketChannel.open();
        SOCK.socket().setReceiveBufferSize(AutoBuffer.BBSIZE);
        SOCK.socket().bind(H2O.SELF._key);
      }
      SocketChannel sock=SOCK.accept();
      new TCPReaderThread(sock,new AutoBuffer(sock)).start();
    }
 catch (    java.nio.channels.AsynchronousCloseException ex) {
      break;
    }
catch (    Exception e) {
      Log.err("IO error on TCP port " + H2O.H2O_PORT + ": ",e);
      saw_error=true;
      errsock=SOCK;
      SOCK=null;
    }
  }
}
