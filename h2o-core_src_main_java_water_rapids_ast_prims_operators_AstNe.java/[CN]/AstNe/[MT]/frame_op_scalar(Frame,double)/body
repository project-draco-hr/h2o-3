{
  return new ValFrame(new MRTask(){
    @Override public void map(    Chunk[] chks,    NewChunk[] cress){
      for (int c=0; c < chks.length; c++) {
        Chunk chk=chks[c];
        NewChunk cres=cress[c];
        BufferedString bStr=new BufferedString();
        if (chk.vec().isString())         for (int i=0; i < chk._len; i++)         cres.addNum(str_op(chk.atStr(bStr,i),Double.isNaN(d) ? null : new BufferedString(String.valueOf(d))));
 else         if (!chk.vec().isNumeric())         cres.addZeros(chk._len);
 else         for (int i=0; i < chk._len; i++)         cres.addNum(op(chk.atd(i),d));
      }
    }
  }
.doAll(fr.numCols(),Vec.T_NUM,fr).outputFrame());
}
