{
  Frame tfr=null, vfr=null;
  GBMModel gbm=null;
  float[] sample_rates=new float[]{0.2f,0.4f,0.6f,0.8f,1.0f};
  float[] col_sample_rates=new float[]{0.2f,0.4f,0.6f,0.8f,1.0f};
  Map<Double,Pair<Float,Float>> hm=new TreeMap<>();
  for (  float sample_rate : sample_rates) {
    for (    float col_sample_rate : col_sample_rates) {
      Scope.enter();
      try {
        tfr=parse_test_file("./smalldata/gbm_test/ecology_model.csv");
        DKV.put(tfr);
        GBMModel.GBMParameters parms=new GBMModel.GBMParameters();
        parms._train=tfr._key;
        parms._response_column="Angaus";
        parms._seed=234;
        parms._min_rows=2;
        parms._max_depth=10;
        parms._ntrees=10;
        parms._col_sample_rate=col_sample_rate;
        parms._sample_rate=sample_rate;
        gbm=new GBM(parms).trainModel().get();
        ModelMetricsRegression mm=(ModelMetricsRegression)gbm._output._training_metrics;
        hm.put(mm.mse(),new Pair<>(sample_rate,col_sample_rate));
      }
  finally {
        if (tfr != null)         tfr.remove();
        if (vfr != null)         vfr.remove();
        if (gbm != null)         gbm.delete();
        Scope.exit();
      }
    }
  }
  double fullDataMSE=hm.entrySet().iterator().next().getKey();
  Iterator<Map.Entry<Double,Pair<Float,Float>>> it;
  int i=0;
  Pair<Float,Float> last=null;
  for (it=hm.entrySet().iterator(); it.hasNext(); ++i) {
    Map.Entry<Double,Pair<Float,Float>> n=it.next();
    if (i > 0)     Assert.assertTrue(n.getKey() > fullDataMSE);
    Log.info("MSE: " + n.getKey() + ", "+ ", row sample: "+ ((Pair)n.getValue()).getKey()+ ", col sample: "+ ((Pair)n.getValue()).getValue());
    last=n.getValue();
  }
  Assert.assertTrue(last.getKey() == sample_rates[0]);
  Assert.assertTrue(last.getValue() == col_sample_rates[0]);
}
