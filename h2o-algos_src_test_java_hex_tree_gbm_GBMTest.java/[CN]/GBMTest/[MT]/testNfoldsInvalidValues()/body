{
  Frame tfr=null;
  GBMModel gbm1=null;
  GBMModel gbm2=null;
  GBMModel gbm3=null;
  Scope.enter();
  try {
    tfr=parse_test_file("smalldata/junit/weights.csv");
    DKV.put(tfr);
    GBMModel.GBMParameters parms=new GBMModel.GBMParameters();
    parms._train=tfr._key;
    parms._response_column="response";
    parms._min_rows=1;
    parms._seed=12345;
    parms._max_depth=2;
    parms._ntrees=3;
    parms._learn_rate=1e-3f;
    parms._nfolds=0;
    gbm1=new GBM(parms).trainModel().get();
    parms._nfolds=1;
    try {
      Log.info("Trying nfolds==1.");
      gbm2=new GBM(parms).trainModel().get();
      Assert.fail("Should toss H2OModelBuilderIllegalArgumentException instead of reaching here");
    }
 catch (    H2OModelBuilderIllegalArgumentException e) {
    }
    parms._nfolds=-99;
    try {
      Log.info("Trying nfolds==-99.");
      gbm3=new GBM(parms).trainModel().get();
      Assert.fail("Should toss H2OModelBuilderIllegalArgumentException instead of reaching here");
    }
 catch (    H2OModelBuilderIllegalArgumentException e) {
    }
  }
  finally {
    if (tfr != null)     tfr.remove();
    if (gbm1 != null)     gbm1.delete();
    if (gbm2 != null)     gbm2.delete();
    if (gbm3 != null)     gbm3.delete();
    Scope.exit();
  }
}
