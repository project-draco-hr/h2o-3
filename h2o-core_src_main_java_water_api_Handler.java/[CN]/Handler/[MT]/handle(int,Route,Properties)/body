{
  if (!(min_ver() <= version && version <= max_ver()))   return new HttpErrorV1(new IllegalArgumentException("Version " + version + " is not in range V"+ min_ver()+ "-V"+ max_ver()));
  S schema=schema(version);
  if (null == schema)   throw H2O.fail("Failed to find a schema for version: " + version + " in: "+ this.getClass());
  schema=schema.fillFromParms(parms);
  if (null == schema)   throw H2O.fail("fillFromParms returned a null schema for version: " + version + " in: "+ this.getClass()+ " with params: "+ parms);
  final I i=schema.createImpl();
  _t_start=System.currentTimeMillis();
  Schema result=null;
  try {
    result=(Schema)route._handler_method.invoke(this,version,i);
  }
 catch (  InvocationTargetException ite) {
    Throwable t=ite.getCause();
    if (t instanceof RuntimeException)     throw (RuntimeException)t;
    if (t instanceof Error)     throw (Error)t;
    throw new RuntimeException(t);
  }
  _t_stop=System.currentTimeMillis();
  return result;
}
