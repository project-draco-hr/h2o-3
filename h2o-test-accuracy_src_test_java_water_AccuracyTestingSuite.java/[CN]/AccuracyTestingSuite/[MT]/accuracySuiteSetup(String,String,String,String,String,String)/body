{
  this.logDir=logDir;
  File resultsDir=null, h2oLogsDir=null;
  try {
    resultsDir=new File(AccuracyTestingUtil.find_test_file_static(logDir).getCanonicalFile().toString() + "/results");
    h2oLogsDir=new File(AccuracyTestingUtil.find_test_file_static(logDir).getCanonicalFile().toString() + "/results/h2ologs");
  }
 catch (  IOException e) {
    System.out.println("Couldn't create directory.");
    e.printStackTrace();
    System.exit(-1);
  }
  resultsDir.mkdir();
  for (  File f : resultsDir.listFiles())   f.delete();
  h2oLogsDir.mkdir();
  for (  File f : h2oLogsDir.listFiles())   f.delete();
  File suiteSummary;
  try {
    suiteSummary=new File(AccuracyTestingUtil.find_test_file_static(logDir).getCanonicalFile().toString() + "/results/accuracySuiteSummary.log");
    suiteSummary.createNewFile();
    summaryLog=new PrintStream(new FileOutputStream(suiteSummary,false));
  }
 catch (  IOException e) {
    System.out.println("Couldn't create the accuracySuiteSummary.log");
    e.printStackTrace();
    System.exit(-1);
  }
  System.out.println("Commenced logging to h2o-test-accuracy/results directory.");
  this.resultsDBTableConfig=resultsDBTableConfig;
  if (this.resultsDBTableConfig.isEmpty()) {
    summaryLog.println("No results database configuration specified, so test case results will not be saved.");
    recordResults=false;
  }
 else {
    summaryLog.println("Results database configuration specified specified by: " + this.resultsDBTableConfig);
    resultsDBTableConn=makeResultsDBTableConn();
    recordResults=true;
  }
  this.numH2ONodes=Integer.parseInt(numH2ONodes);
  summaryLog.println("Setting up the H2O Cloud with " + this.numH2ONodes + " nodes.");
  ;
  AccuracyTestingUtil.setupH2OCloud(this.numH2ONodes,this.logDir);
  this.dataSetsCSVPath=dataSetsCSVPath;
  File dataSetsFile=AccuracyTestingUtil.find_test_file_static(this.dataSetsCSVPath);
  try {
    dataSetsCSVRows=Files.readAllLines(dataSetsFile.toPath(),Charset.defaultCharset());
  }
 catch (  IOException e) {
    summaryLog.println("Cannot read the lines of the the data sets file: " + dataSetsFile.toPath());
    writeStackTrace(e,summaryLog);
    System.exit(-1);
  }
  dataSetsCSVRows.remove(0);
  this.testCasesCSVPath=testCasesCSVPath;
  this.testCasesFilterString=testCasesFilterString;
  testCasesList=makeTestCasesList();
}
