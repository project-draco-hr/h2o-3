{
  String iced_name=iced_cc.getName();
  CtClass icer_cc=_pool.makeClass(icer_name);
  icer_cc.setSuperclass(super_icer);
  icer_cc.setModifiers(javassist.Modifier.PUBLIC);
  if (false) {
    System.out.println("Iced class " + icer_cc.getName() + " is number: "+ id);
  }
  boolean debug_print=false;
  CtField ctfs[]=iced_cc.getDeclaredFields();
  for (  CtField ctf : ctfs)   debug_print|=ctf.getName().equals("DEBUG_WEAVER");
  if (debug_print)   System.out.println("class " + icer_cc.getName() + " extends "+ super_icer.getName()+ " {");
  for (  CtField ctf : ctfs) {
    CtClass ctft=ctf.getType();
    String name=ctf.getName();
    int mods=ctf.getModifiers();
    if (javassist.Modifier.isTransient(mods) || javassist.Modifier.isStatic(mods))     continue;
    CtClass base=ctft;
    while (base.isArray())     base=base.getComponentType();
    if (base.subtypeOf(_enum)) {
      String src="  private final " + base.getName().replace('$','.') + "[] "+ name+ " = "+ base.getName().replace('$','.')+ ".values();\n";
      if (debug_print)       System.out.println(src);
      CtField ctfr=CtField.make(src,icer_cc);
      icer_cc.addField(ctfr);
    }
  }
  String debug=make_body(icer_cc,iced_cc,iced_clazz,"write",null,null,"  protected final water.AutoBuffer write" + id + "(water.AutoBuffer ab, "+ iced_name+ " ice) {\n",super_id == -1 ? "" : "    write" + super_id + "(ab,ice);\n","    ab.put%z(ice.%s);\n","    ab.put%z((%C)_unsafe.get%u(ice,%dL)); // %s\n","    ab.put%z(ice.%s);\n","    ab.put%z((%C)_unsafe.get%u(ice,%dL)); // %s\n","    ab.put%z(ice.%s);\n","    ab.put%z((%C)_unsafe.get%u(ice,%dL)); // %s\n","    return ab;\n" + "  }");
  if (debug_print)   System.out.println(debug);
  String debugJ=make_body(icer_cc,iced_cc,iced_clazz,"writeJSON","(supers?ab.put1(','):ab).","    ab.put1(',').","  protected final water.AutoBuffer writeJSON" + id + "(water.AutoBuffer ab, "+ iced_name+ " ice) {\n",super_id == -1 ? "" : "    writeJSON" + super_id + "(ab,ice);\n","putJSON%z(\"%s\",ice.%s);\n","putJSON%z(\"%s\",(%C)_unsafe.get%u(ice,%dL)); // %s\n","putJSON%z(\"%s\",ice.%s);\n","putJSON%z(\"%s\",(%C)_unsafe.get%u(ice,%dL)); // %s\n","putJSON%z(\"%s\",ice.%s);\n","putJSON%z(\"%s\",(%C)_unsafe.get%u(ice,%dL)); // %s\n","    return ab;\n" + "  }");
  if (debug_print)   System.out.println(debugJ);
  String wbody="  protected water.AutoBuffer write(water.AutoBuffer ab, water.Freezable ice) {\n" + "    return write" + id + "(ab,("+ iced_name+ ")ice);\n"+ "  }";
  if (debug_print)   System.out.println(wbody);
  addMethod(wbody,icer_cc);
  String wbodyJ="  protected water.AutoBuffer writeJSON(water.AutoBuffer ab, water.Freezable ice) {\n" + "    return writeJSON" + id + "(ab.put1('{'),("+ iced_name+ ")ice).put1('}');\n"+ "  }";
  if (debug_print)   System.out.println(wbodyJ);
  addMethod(wbodyJ,icer_cc);
  String rbody_impl=make_body(icer_cc,iced_cc,iced_clazz,"read",null,null,"  protected final " + iced_name + " read"+ id+ "(water.AutoBuffer ab, "+ iced_name+ " ice) {\n",super_id == -1 ? "" : "    read" + super_id + "(ab,ice);\n","    ice.%s = ab.get%z();\n","    _unsafe.put%u(ice,%dL,ab.get%z());  //%s\n","    ice.%s = (%C)ab.get%z(%s);\n","    _unsafe.put%u(ice,%dL,ab.get%z(%s));\n","    ice.%s = (%C)ab.get%z(%c.class);\n","    _unsafe.put%u(ice,%dL,(%C)ab.get%z(%c.class));  //%s\n","    return ice;\n" + "  }");
  if (debug_print)   System.out.println(rbody_impl);
  String rbodyJ_impl=make_body(icer_cc,iced_cc,iced_clazz,"readJSON",null,null,"  protected final " + iced_name + " readJSON"+ id+ "(water.AutoBuffer ab, "+ iced_name+ " ice) {\n",super_id == -1 ? "" : "    readJSON" + super_id + "(ab,ice);\n","    ice.%s = ab.get%z();\n","    _unsafe.put%u(ice,%dL,ab.get%z());  //%s\n","    ice.%s = (%C)ab.get%z(%s);\n","    _unsafe.put%u(ice,%dL,ab.get%z(%s));\n","    ice.%s = (%C)ab.get%z(%c.class);\n","    _unsafe.put%u(ice,%dL,(%C)ab.get%z(%c.class));  //%s\n","    return ice;\n" + "  }");
  if (debug_print)   System.out.println(rbodyJ_impl);
  String rbody="  protected water.Freezable read(water.AutoBuffer ab, water.Freezable ice) {\n" + "    return read" + id + "(ab,("+ iced_name+ ")ice);\n"+ "  }";
  if (debug_print)   System.out.println(rbody);
  addMethod(rbody,icer_cc);
  String rbodyJ="  protected water.Freezable readJSON(water.AutoBuffer ab, water.Freezable ice) {\n" + "    return readJSON" + id + "(ab,("+ iced_name+ ")ice);\n"+ "  }";
  if (debug_print)   System.out.println(rbodyJ);
  addMethod(rbodyJ,icer_cc);
  String cnbody="  protected java.lang.String className() { return \"" + iced_name + "\"; }";
  if (debug_print)   System.out.println(cnbody);
  addMethod(cnbody,icer_cc);
  String ftbody="  protected int frozenType() { return " + id + "; }";
  if (debug_print)   System.out.println(ftbody);
  addMethod(ftbody,icer_cc);
  String cmp2="  protected void compute1( water.H2O.H2OCountedCompleter dt ) { dt.compute1(); }";
  if (debug_print)   System.out.println(cmp2);
  addMethod(cmp2,icer_cc);
  if (iced_cc.subclassOf(_dtask)) {
    String cpbody_impl=make_body(icer_cc,iced_cc,iced_clazz,"copyOver",null,null,"  protected void copyOver(water.Freezable fdst, water.Freezable fsrc) {\n","    super.copyOver(fdst,fsrc);\n" + "    " + iced_name + " dst = ("+ iced_name+ ")fdst;\n"+ "    "+ iced_name+ " src = ("+ iced_name+ ")fsrc;\n","    dst.%s = src.%s;\n","    _unsafe.put%u(dst,%dL,_unsafe.get%u(src,%dL));  //%s\n","    dst.%s = src.%s;\n","    _unsafe.put%u(dst,%dL,_unsafe.get%u(src,%dL));  //%s\n","    dst.%s = src.%s;\n","    _unsafe.put%u(dst,%dL,_unsafe.get%u(src,%dL));  //%s\n","  }");
    if (debug_print)     System.out.println(cpbody_impl);
  }
  String cstrbody="  public " + icer_cc.getSimpleName() + "( "+ iced_name+ " iced) { super(iced); }";
  if (debug_print)   System.out.println(cstrbody);
  try {
    icer_cc.addConstructor(CtNewConstructor.make(cstrbody,icer_cc));
  }
 catch (  CannotCompileException ce) {
    System.err.println("--- Compilation failure while compiling " + icer_cc.getName() + "\n"+ cstrbody+ "\n------\n"+ ce);
    throw ce;
  }
  if (debug_print)   System.out.println("}");
  return icer_cc;
}
