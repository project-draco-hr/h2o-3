def plot(self, timestep=u'AUTO', metric=u'AUTO', **kwargs):
    u'\n    Plots training set (and validation set if available) scoring history for an H2OMultinomialModel. The timestep and metric\n    arguments are restricted to what is available in its scoring history.\n\n    :param timestep: A unit of measurement for the x-axis.\n    :param metric: A unit of measurement for the y-axis.\n    :return: A scoring history plot.\n    '
    if (self._model_json[u'algo'] in (u'deeplearning', u'drf', u'gbm')):
        if (metric == u'AUTO'):
            metric = u'classification_error'
        elif (metric not in (u'logloss', u'classification_error', u'rmse')):
            raise ValueError(u'metric for H2OMultinomialModel must be one of: AUTO, logloss, classification_error, rmse')
    self._plot(timestep=timestep, metric=metric, **kwargs)
