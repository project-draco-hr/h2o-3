def confusion_matrix(self, data):
    "\n        Returns a confusion matrix based of H2O's default prediction threshold for a dataset\n        "
    if (not isinstance(data, H2OFrame)):
        raise ValueError('data argument must be of type H2OFrame, but got {0}'.format(type(data)))
    test_data_key = H2OFrame.send_frame(data)
    j = H2OConnection.post_json(((('Predictions/models/' + self._id) + '/frames/') + test_data_key))
    cm = j['model_metrics'][0]['cm']['table']
    return cm
