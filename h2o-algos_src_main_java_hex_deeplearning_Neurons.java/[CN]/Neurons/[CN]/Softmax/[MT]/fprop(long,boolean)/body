{
  gemv((Storage.DenseVector)_a,(Storage.DenseRowMatrix)_w,(Storage.DenseVector)_previous._a,_b,null);
  final double max=ArrayUtils.maxValue(_a.raw());
  double scale=0;
  final int rows=_a.size();
  for (int row=0; row < rows; row++) {
    _a.set(row,Math.exp(_a.get(row) - max));
    scale+=_a.get(row);
  }
  for (int row=0; row < rows; row++) {
    _a.raw()[row]/=scale;
    if (Double.isNaN(_a.get(row))) {
      _minfo.set_unstable();
      throw new RuntimeException("Numerical instability, predicted NaN.");
    }
  }
}
