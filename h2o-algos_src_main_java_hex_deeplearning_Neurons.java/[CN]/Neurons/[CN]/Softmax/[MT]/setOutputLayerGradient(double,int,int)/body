{
  assert(target == (int)target);
  double g;
  final int rows=_a[mb].size();
  for (int row=0; row < rows; row++) {
    final double t=(row == (int)target ? 1 : 0);
    final double y=_a[mb].get(row);
switch (params._loss) {
case CrossEntropy:
      g=y - t;
    break;
case ModifiedHuber:
  g=-2 * _dist.negHalfGradient(t,y) * (1 - y)* y;
break;
default :
throw H2O.unimpl();
}
_e[mb].set(row,g / n);
}
}
