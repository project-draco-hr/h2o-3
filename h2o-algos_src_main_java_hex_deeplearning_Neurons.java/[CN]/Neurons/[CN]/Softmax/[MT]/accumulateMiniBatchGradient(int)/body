{
  assert(target != missing_int_value);
  float g;
  final float rows=_a.size();
  for (int row=0; row < rows; row++) {
    final float t=(row == target ? 1f : 0f);
    final float y=_a.get(row);
switch (params._loss) {
case Automatic:
case CrossEntropy:
      g=t - y;
    break;
case Absolute:
  g=(2 * t - 1) * (1f - y) * y;
break;
case MeanSquare:
g=(t - y) * (1f - y) * y;
break;
case Huber:
if (t == 0) {
if (y < 0.5) {
g=-4 * y;
}
 else {
g=-2;
}
}
 else {
if (y > 0.5) {
g=4 * (1 - y);
}
 else {
g=2;
}
}
g*=(1f - y) * y;
break;
default :
throw H2O.unimpl();
}
_e.add(row,g);
}
}
