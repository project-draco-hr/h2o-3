{
  assert(_index < _minfo.get_params()._hidden.length);
  float m=_minfo.adaDelta() ? 0 : momentum();
  float r=_minfo.adaDelta() ? 0 : rate(_minfo.get_processed_total()) * (1f - m);
  final int rows=_a[0].size();
  for (int row=0; row < rows; row++) {
    double[] g=new double[n];
    for (int mb=0; mb < n; ++mb) {
      double x=_a[mb].get(row);
      double val=x >= 0 ? 1 : Math.exp(x);
      g[mb]=_e[mb].get(row) * val;
    }
    bprop(row,g,r,m,n);
  }
}
