{
  final float rows=_a.size();
  float m=_minfo.adaDelta() ? 0 : momentum();
  float r=_minfo.adaDelta() ? 0 : rate(_minfo.get_processed_total()) * (1f - m);
  for (int row=0; row < rows; row++) {
    final float g=_sumGrad[row] / n;
    bprop(row,g,r,m);
  }
  Arrays.fill(_sumGrad,0);
}
