{
  if (frx.numCols() != fry.numCols())   throw new IllegalArgumentException("Single rows have the same number of columns, found " + frx.numCols() + " and "+ fry.numCols());
  Vec vecxs[]=frx.vecs();
  Vec vecys[]=fry.vecs();
  double xsum=0, ysum=0, NACount=0, ncols=frx.numCols(), xval, yval, ss=0;
  for (int i=0; i < vecxs.length; i++) {
    xval=vecxs[i].at(0);
    yval=vecys[i].at(0);
    if (Double.isNaN(xval) || Double.isNaN(yval))     NACount++;
 else {
      xsum+=xval;
      ysum+=yval;
      ss+=xval * yval;
    }
  }
  if (NACount > 0) {
    if (mode.equals(Mode.AllObs))     throw new IllegalArgumentException("Mode is 'all.obs' but NAs are present");
    if (mode.equals(Mode.Everything))     return new ValNum(Double.NaN);
  }
  return new ValNum((ss - xsum * ysum / (ncols - NACount)) / (ncols - 1 - NACount));
}
