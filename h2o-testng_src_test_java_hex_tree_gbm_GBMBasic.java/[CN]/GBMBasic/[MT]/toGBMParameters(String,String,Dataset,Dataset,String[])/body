{
  System.out.println("Create Parameters object with testcase: " + input[tcHeaders.indexOf("testcase_id")]);
  GBMParameters gbmParams=new GBMParameters();
  for (  Param p : params) {
    if (p.isAutoSet) {
      p.parseAndSet(gbmParams,input[tcHeaders.indexOf(p.name)]);
    }
  }
  Family f=(Family)familyParams.getValue(input,tcHeaders);
  if (f != null) {
    System.out.println("Set _distribution: " + f);
    gbmParams._distribution=f;
  }
  gbmParams._response_column=train_dataset.getResponseColumn();
  Frame trainFrame=null;
  Frame validateFrame=null;
  try {
    System.out.println("Create train frame: " + train_dataset_id);
    trainFrame=train_dataset.getFrame();
    if (StringUtils.isNotEmpty(validate_dataset_id) && validate_dataset != null && validate_dataset.isAvailabel()) {
      System.out.println("Create validate frame: " + validate_dataset_id);
      validateFrame=validate_dataset.getFrame();
    }
  }
 catch (  Exception e) {
    if (trainFrame != null) {
      trainFrame.remove();
    }
    if (validateFrame != null) {
      validateFrame.remove();
    }
    throw e;
  }
  System.out.println("Set train frame");
  gbmParams._train=trainFrame._key;
  if (validateFrame != null) {
    System.out.println("Set validate frame");
    gbmParams._valid=validateFrame._key;
  }
  System.out.println("Create success GBMParameters object.");
  return gbmParams;
}
