{
  System.out.println(String.format("Testcase: %s",testcase_id));
  System.out.println(String.format("Description: %s",test_description));
  System.out.println("GBM Params:");
  for (  Param p : params) {
    p.print(parameter);
  }
  Frame trainFrame=null;
  Frame validateFrame=null;
  GBM job=null;
  GBMModel gbmModel=null;
  Frame score=null;
  trainFrame=parameter._train.get();
  if (parameter._valid != null) {
    validateFrame=parameter._valid.get();
  }
  try {
    Scope.enter();
    System.out.println("Build model ");
    job=new GBM(parameter);
    System.out.println("Train model");
    gbmModel=job.trainModel().get();
    System.out.println("Predict testcase " + testcase_id);
    score=gbmModel.score(trainFrame);
    System.out.println("Validate testcase " + testcase_id);
    if (FunctionUtils.isNegativeTestcase(tcHeaders,rawInput)) {
      Assert.fail("It is negative testcase");
    }
 else {
      System.out.println("Testcase is passed.");
    }
  }
 catch (  Exception ex) {
    System.out.println("Testcase is failed.");
    ex.printStackTrace();
    if (!FunctionUtils.isNegativeTestcase(tcHeaders,rawInput)) {
      Assert.fail("Testcase is failed",ex);
    }
  }
 finally {
    if (trainFrame != null) {
      trainFrame.remove();
      trainFrame.delete();
    }
    if (validateFrame != null) {
      validateFrame.remove();
      validateFrame.delete();
    }
    if (score != null) {
      score.remove();
      score.delete();
    }
    if (job != null) {
      job.remove();
    }
    if (gbmModel != null) {
      gbmModel.delete();
    }
    Scope.exit();
  }
}
