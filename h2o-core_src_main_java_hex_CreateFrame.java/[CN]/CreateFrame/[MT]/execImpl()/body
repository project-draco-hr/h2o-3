{
  if (integer_fraction + binary_fraction + categorical_fraction > 1)   throw new IllegalArgumentException("Integer, binary and categorical fractions must add up to <= 1.");
  if (Math.abs(missing_fraction) > 1)   throw new IllegalArgumentException("Missing fraction must be between 0 and 1.");
  if (Math.abs(integer_fraction) > 1)   throw new IllegalArgumentException("Integer fraction must be between 0 and 1.");
  if (Math.abs(binary_fraction) > 1)   throw new IllegalArgumentException("Binary fraction must be between 0 and 1.");
  if (Math.abs(binary_ones_fraction) > 1)   throw new IllegalArgumentException("Binary ones fraction must be between 0 and 1.");
  if (Math.abs(categorical_fraction) > 1)   throw new IllegalArgumentException("Categorical fraction must be between 0 and 1.");
  if (categorical_fraction > 0 && factors <= 1)   throw new IllegalArgumentException("Factors must be larger than 2 for categorical data.");
  if (response_factors < 1)   throw new IllegalArgumentException("Response factors must be either 1 (real-valued response), or >=2 (factor levels).");
  if (response_factors > 1024)   throw new IllegalArgumentException("Response factors must be <= 1024.");
  if (factors > 1000000)   throw new IllegalArgumentException("Number of factors must be <= 1,000,000).");
  if (cols <= 0 || rows <= 0)   throw new IllegalArgumentException("Must have number of rows > 0 and columns > 1.");
  double byte_estimate=randomize ? rows * cols * (binary_fraction * 1. / 8 + categorical_fraction * (factors < 128 ? 1 : factors < 32768 ? 2 : 4) + integer_fraction * (integer_range < 128 ? 1 : integer_range < 32768 ? 2 : integer_range < (1 << 31) ? 4 : 8) + (1 - integer_fraction - binary_fraction- categorical_fraction) * 8) + rows : 0;
  long cluster_free_mem=H2O.CLOUD.free_mem();
  if (byte_estimate > cluster_free_mem)   throw new IllegalArgumentException("Frame is expected to require " + PrettyPrint.bytes((long)byte_estimate) + ", won't fit into H2O's free memory of "+ cluster_free_mem);
  if (!randomize) {
    if (integer_fraction != 0 || categorical_fraction != 0)     throw new IllegalArgumentException("Cannot have integer or categorical fractions > 0 unless randomize=true.");
  }
 else {
    if (value != 0)     throw new IllegalArgumentException("Cannot set data to a constant value if randomize=true.");
  }
  if (_dest == null)   throw new IllegalArgumentException("Destination frame name cannot be null.");
  FrameCreator fc=new FrameCreator(this);
  _job=new Job<>(_dest,"FrameCreator",fc.nChunks() * 5);
  return _job.start(fc);
}
